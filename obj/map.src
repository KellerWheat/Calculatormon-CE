; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MAP.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME1"
.TYPE 104
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME7"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "NONAME8",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME9"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME10"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME10",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME10"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
.BEGREC "NONAME11",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME11"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME15"
.BEGREC "pokemonData",34
.DEFINE "id"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "moves"
.VALUE 1
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "pp"
.VALUE 5
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "level"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xp"
.VALUE 10
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "currenthealth"
.VALUE 13
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "currentstatus"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthIV"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "attackIV"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "defenceIV"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialattackIV"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialdefenceIV"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "speedIV"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthEV"
.VALUE 22
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attackEV"
.VALUE 24
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defenceEV"
.VALUE 26
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattackEV"
.VALUE 28
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefenceEV"
.VALUE 30
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speedEV"
.VALUE 32
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonData"
.BEGREC "pokemonType",51
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 16
.TYPE 98
.ENDEF
.DEFINE "element1"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "element2"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basehealth"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "baseattack"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basedefence"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialattack"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialdefence"
.VALUE 22
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespeed"
.VALUE 23
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "movelevels"
.VALUE 24
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "moveids"
.VALUE 34
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "evolvelevel"
.VALUE 44
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolveid"
.VALUE 45
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolvesfrom"
.VALUE 46
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xpdrop"
.VALUE 47
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "xptype"
.VALUE 49
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "catchrate"
.VALUE 50
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "pokemonType"
.BEGREC "pokemonStats",12
.DEFINE "health"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attack"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defence"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattack"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefence"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speed"
.VALUE 10
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonStats"
.BEGREC "move",21
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 14
.TYPE 98
.ENDEF
.DEFINE "element"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "power"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "accuracy"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "uses"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statustype"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statuschance"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "move"
.BEGREC "zoneData",688
.DEFINE "spawnids"
.VALUE 0
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnminlevels"
.VALUE 80
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnmaxlevels"
.VALUE 160
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "exitzone"
.VALUE 240
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exitx"
.VALUE 256
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exity"
.VALUE 272
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorzones"
.VALUE 288
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorx"
.VALUE 304
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doory"
.VALUE 320
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "textIds"
.VALUE 336
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerspawnids"
.VALUE 352
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerspawnlevels"
.VALUE 448
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerx"
.VALUE 544
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainery"
.VALUE 560
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerdir"
.VALUE 576
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerskin"
.VALUE 592
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainertype"
.VALUE 608
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainermovement"
.VALUE 624
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainertext"
.VALUE 640
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerreward"
.VALUE 656
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "grounditems"
.VALUE 672
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.ENDREC "zoneData"
.BEGREC "saveGame",4140
.DEFINE "newGame"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rivalPokemon"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "playerX"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "playerY"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "lastPlayerX"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "lastPlayerY"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "party"
.VALUE 10
.CLASS 8
.DIM 36
.TAG "pokemonData"
.TYPE 104
.ENDEF
.DEFINE "currentZone"
.VALUE 1234
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "indoors"
.VALUE 1236
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "surfing"
.VALUE 1237
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "currentBuilding"
.VALUE 1238
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "playerMoney"
.VALUE 1239
.CLASS 8
.TYPE 15
.ENDEF
.DEFINE "playerItems"
.VALUE 1243
.CLASS 8
.DIM 185
.TYPE 108
.ENDEF
.DEFINE "defeatedTrainers"
.VALUE 1428
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "defeatedTrainersIndoors"
.VALUE 1684
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGifts"
.VALUE 1940
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGiftsIndoors"
.VALUE 2196
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGroundGifts"
.VALUE 2452
.CLASS 8
.DIM 2
.DIM 16
.DIM 16
.TYPE 7020
.ENDEF
.DEFINE "foundItemsPos"
.VALUE 2964
.CLASS 8
.DIM 2
.DIM 16
.DIM 16
.TYPE 7021
.ENDEF
.DEFINE "badgeCount"
.VALUE 3988
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pokedex"
.VALUE 3989
.CLASS 8
.DIM 151
.TYPE 108
.ENDEF
.ENDREC "saveGame"
	SEGMENT TEXT
_battlechance:
	DW	10
	DB	0
.DEFINE "battlechance"
.ALIAS "_battlechance"
.CLASS 84
.VALUE _battlechance
.TYPE 4
.ENDEF
	SEGMENT DATA
_pokeballdata:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "pokeballdata"
.ALIAS "_pokeballdata"
.CLASS 69
.VALUE _pokeballdata
.DIM 6
.TYPE 108
.ENDEF
_screenX:
	DL	0
.DEFINE "screenX"
.ALIAS "_screenX"
.CLASS 69
.VALUE _screenX
.TYPE 5
.ENDEF
_screenY:
	DL	0
.DEFINE "screenY"
.ALIAS "_screenY"
.CLASS 69
.VALUE _screenY
.TYPE 5
.ENDEF
	SEGMENT BSS
_tx:
	DS	1
.DEFINE "tx"
.ALIAS "_tx"
.CLASS 83
.VALUE _tx
.TYPE 12
.ENDEF
_ty:
	DS	1
.DEFINE "ty"
.ALIAS "_ty"
.CLASS 83
.VALUE _ty
.TYPE 12
.ENDEF
	SEGMENT DATA
_running:
	DB	0
.DEFINE "running"
.ALIAS "_running"
.CLASS 69
.VALUE _running
.TYPE 12
.ENDEF
_currentRun:
	DB	0
.DEFINE "currentRun"
.ALIAS "_currentRun"
.CLASS 69
.VALUE _currentRun
.TYPE 12
.ENDEF
_currentWater:
	DW	0
	DB	0
.DEFINE "currentWater"
.ALIAS "_currentWater"
.CLASS 69
.VALUE _currentWater
.TYPE 4
.ENDEF
_grassAnimNext:
	DB	0
.DEFINE "grassAnimNext"
.ALIAS "_grassAnimNext"
.CLASS 69
.VALUE _grassAnimNext
.TYPE 12
.ENDEF
_grassAnimState1:
	DW	0
	DB	0
.DEFINE "grassAnimState1"
.ALIAS "_grassAnimState1"
.CLASS 69
.VALUE _grassAnimState1
.TYPE 4
.ENDEF
_grassAnimState2:
	DW	0
	DB	0
.DEFINE "grassAnimState2"
.ALIAS "_grassAnimState2"
.CLASS 69
.VALUE _grassAnimState2
.TYPE 4
.ENDEF
_grassAnimX1:
	DW	0
	DB	0
.DEFINE "grassAnimX1"
.ALIAS "_grassAnimX1"
.CLASS 69
.VALUE _grassAnimX1
.TYPE 4
.ENDEF
_grassAnimY1:
	DW	0
	DB	0
.DEFINE "grassAnimY1"
.ALIAS "_grassAnimY1"
.CLASS 69
.VALUE _grassAnimY1
.TYPE 4
.ENDEF
_grassAnimX2:
	DW	0
	DB	0
.DEFINE "grassAnimX2"
.ALIAS "_grassAnimX2"
.CLASS 69
.VALUE _grassAnimX2
.TYPE 4
.ENDEF
_grassAnimY2:
	DW	0
	DB	0
.DEFINE "grassAnimY2"
.ALIAS "_grassAnimY2"
.CLASS 69
.VALUE _grassAnimY2
.TYPE 4
.ENDEF
	SEGMENT BSS
_npcMoveState:
	DS	16
.DEFINE "npcMoveState"
.ALIAS "_npcMoveState"
.CLASS 83
.VALUE _npcMoveState
.DIM 16
.TYPE 108
.ENDEF
_npcOldTiles:
	DS	16
.DEFINE "npcOldTiles"
.ALIAS "_npcOldTiles"
.CLASS 83
.VALUE _npcOldTiles
.DIM 16
.TYPE 108
.ENDEF
	SEGMENT DATA
_npcToFight:
	DW	16
	DB	0
.DEFINE "npcToFight"
.ALIAS "_npcToFight"
.CLASS 69
.VALUE _npcToFight
.TYPE 4
.ENDEF
	SEGMENT BSS
_npcGrassAnimState:
	DS	16
.DEFINE "npcGrassAnimState"
.ALIAS "_npcGrassAnimState"
.CLASS 83
.VALUE _npcGrassAnimState
.DIM 16
.TYPE 108
.ENDEF
_npcSaidMessage:
	DS	16
.DEFINE "npcSaidMessage"
.ALIAS "_npcSaidMessage"
.CLASS 83
.VALUE _npcSaidMessage
.DIM 16
.TYPE 108
.ENDEF
	SEGMENT DATA
_npcPatterns:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	4
	DB	4
	DB	4
	DB	2
	DB	5
	DB	5
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "npcPatterns"
.ALIAS "_npcPatterns"
.CLASS 69
.VALUE _npcPatterns
.DIM 8
.DIM 16
.TYPE 876
.ENDEF
	SEGMENT BSS
_nextTile:
	DS	1
.DEFINE "nextTile"
.ALIAS "_nextTile"
.CLASS 83
.VALUE _nextTile
.TYPE 12
.ENDEF
	SEGMENT DATA
_moveState:
	DB	0
.DEFINE "moveState"
.ALIAS "_moveState"
.CLASS 69
.VALUE _moveState
.TYPE 12
.ENDEF
_moveDir:
	DB	3
.DEFINE "moveDir"
.ALIAS "_moveDir"
.CLASS 69
.VALUE _moveDir
.TYPE 12
.ENDEF
_playerState:
	DB	0
.DEFINE "playerState"
.ALIAS "_playerState"
.CLASS 69
.VALUE _playerState
.TYPE 12
.ENDEF
_jumpState:
	DB	0
.DEFINE "jumpState"
.ALIAS "_jumpState"
.CLASS 69
.VALUE _jumpState
.TYPE 12
.ENDEF
_jumpHeights:
	DB	1
	DB	3
	DB	6
	DB	9
	DB	12
	DB	14
	DB	15
	DB	16
	DB	16
	DB	15
	DB	14
	DB	12
	DB	9
	DB	6
	DB	3
	DB	1
	DB	0
.DEFINE "jumpHeights"
.ALIAS "_jumpHeights"
.CLASS 69
.VALUE _jumpHeights
.DIM 17
.TYPE 108
.ENDEF
	SEGMENT BSS
_tilemap:
	DS	18
.DEFINE "tilemap"
.ALIAS "_tilemap"
.CLASS 83
.VALUE _tilemap
.TAG "NONAME15"
.TYPE 8
.ENDEF
_mapTiles:
	DS	384
.DEFINE "mapTiles"
.ALIAS "_mapTiles"
.CLASS 83
.VALUE _mapTiles
.DIM 128
.TAG "NONAME11"
.TYPE 360
.ENDEF
_pokeballSprites:
	DS	9
.DEFINE "pokeballSprites"
.ALIAS "_pokeballSprites"
.CLASS 83
.VALUE _pokeballSprites
.DIM 3
.TAG "NONAME11"
.TYPE 360
.ENDEF
_currentTileMap:
	DS	1920
.DEFINE "currentTileMap"
.ALIAS "_currentTileMap"
.CLASS 83
.VALUE _currentTileMap
.DIM 1920
.TYPE 108
.ENDEF
_currentTypeMap:
	DS	1920
.DEFINE "currentTypeMap"
.ALIAS "_currentTypeMap"
.CLASS 83
.VALUE _currentTypeMap
.DIM 1920
.TYPE 108
.ENDEF
_currentZoneData:
	DS	688
.DEFINE "currentZoneData"
.ALIAS "_currentZoneData"
.CLASS 83
.VALUE _currentZoneData
.TAG "zoneData"
.TYPE 8
.ENDEF
	SEGMENT DATA
_currentTrainer:
	DB	0
.DEFINE "currentTrainer"
.ALIAS "_currentTrainer"
.CLASS 69
.VALUE _currentTrainer
.TYPE 12
.ENDEF
	SEGMENT BSS
_tempcharacter2:
	DS	34
.DEFINE "tempcharacter2"
.ALIAS "_tempcharacter2"
.CLASS 83
.VALUE _tempcharacter2
.TAG "pokemonData"
.TYPE 8
.ENDEF
	SEGMENT TEXT
_clearcharacter2:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	0
	DB	0
	DW	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	0
	DW	0
	DW	0
	DW	0
	DW	0
	DW	0
.DEFINE "clearcharacter2"
.ALIAS "_clearcharacter2"
.CLASS 84
.VALUE _clearcharacter2
.TAG "pokemonData"
.TYPE 8
.ENDEF
	SEGMENT BSS
_str1:
	DS	20
.DEFINE "str1"
.ALIAS "_str1"
.CLASS 83
.VALUE _str1
.DIM 20
.TYPE 98
.ENDEF
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	#include <math.h>
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	#include <keypadc.h>
;   10	#include <graphx.h>
;   11	#include <debug.h>
;   12	#include <compression.h>
;   13	#include <fileioc.h>
;   14	
;   15	#include "map.h"
;   16	#include "battle.h"
;   17	#include "menu.h"
;   18	#include "misc.h"
;   19	#include "data.h"
;   20	#include "items.h"
;   21	#include "text.h"
;   22	#include "savegame.h"
;   23	#include "stats.h"
;   24	#include "gfx/map_gfx.h"
;   25	#include "gfx/test_gfx.h"
;   26	#include "items.h"
;   27	
;   28	#include "gfx/PKMNSD4.h"
;   29	#include "gfx/PKMNSD7.h"
;   30	#include "gfx/PKMNSD8.h"
;   31	
;   32	#define OUTDOORWIDTH 48
;   33	#define OUTDOORHEIGHT 40
;   34	#define MAX_X ((OUTDOORWIDTH - 21)*16)
;   35	#define MAX_Y ((OUTDOORHEIGHT - 15)*16)
;   36	
;   37	void HealParty(void);
;   38	void OpenBox(void);
;   39	void ReadText(uint8_t index);
;   40	void EnterDoor(uint8_t index);
;   41	void ExitBuilding(void);
;   42	void ExitZone(uint8_t index);
;   43	bool FightTrainer(uint8_t index);
;   44	
;   45	int32_t Clamp(int32_t number, int min, int max);
;   46	/* Gets the tile the player is facing*/
;   47	uint8_t GetNextTile(uint8_t tx, uint8_t ty, int width);
;   48	/* Gets the typemap at a specific tile */
;   49	uint16_t ShiftTile(uint16_t value, uint8_t direction, uint8_t amount);
;   50	uint8_t GetTypeMapData(uint8_t tx, uint8_t ty, int width);
;   51	void DrawPlayer(void);
;   52	/* Draw 16 npcs */
;   53	void ProcessNpcs(void);
;   54	/* Loads the tilemap, typemap ,and zonedata for current area */
;   55	void LoadMap(void);
;   56	void LoadTileset(bool freeOld);
;   57	
;   58	void GrassAnimation(bool part);
;   59	
;   60	
;   61	
;   62	const int battlechance = 10; /* Chance for enemy to spawn out of 100 */
;   63	
;   64	
;   65	uint8_t pokeballdata[] = {
;   66		0,0,0,0,0,0
;   67	};
;   68	
;   69	int32_t screenX = 0;
;   70	int32_t screenY = 0;
;   71	
;   72	uint8_t tx; /* x tile */
;   73	uint8_t ty; /* y tile */
;   74	bool running = false;
;   75	bool currentRun = 0;
;   76	int currentWater = 0;
;   77	
;   78	/* Variables for the leaves that appear when walking through grass */
;   79	bool grassAnimNext = 0;
;   80	int grassAnimState1 = 0;
;   81	int grassAnimState2 = 0;
;   82	int grassAnimX1 = 0;
;   83	int grassAnimY1 = 0;
;   84	int grassAnimX2 = 0;
;   85	int grassAnimY2 = 0;
;   86	
;   87	uint8_t npcMoveState[16];
;   88	uint8_t npcOldTiles[16];
;   89	int npcToFight = 16;
;   90	uint8_t npcGrassAnimState[16];
;   91	bool npcSaidMessage[16];
;   92	
;   93	uint8_t npcPatterns[8][16] = {
;   94		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;   95		{0,4,4,4,2,5,5,0,0,0,0,0,0,0,0,0},
;   96		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;   97		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;   98		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;   99		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;  100		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;  101		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
;  102	};
;  103	
;  104	uint8_t nextTile;
;  105	/* Set to 8 when anything is pressed and decreases each frame until 0 */
;  106	uint8_t moveState = 0;
;  107	/* Direction Player is facing */
;  108	uint8_t moveDir = 3;
;  109	uint8_t playerState = 0;
;  110	uint8_t jumpState = 0;
;  111	uint8_t jumpHeights[17] = {1,3,6,9,12,14,15,16,16,15,14,12,9,6,3,1, 0 };
;  112	
;  113	gfx_tilemap_t tilemap;
;  114	
;  115	gfx_sprite_t *mapTiles[128];
;  116	gfx_sprite_t *pokeballSprites[3];
;  117	
;  118	uint8_t currentTileMap[1920];
;  119	uint8_t currentTypeMap[1920];
;  120	struct zoneData currentZoneData;
;  121	
;  122	uint8_t currentTrainer = 0; /* 0-15 */
;  123	struct pokemonData tempcharacter2;
;  124	const struct pokemonData clearcharacter2 = {0};
;  125	
;  126	char str1[20];
	SEGMENT CODE
;  127	
;  128	void map_Initialize(void) {
_map_Initialize:
.DEFINE "_map_Initialize"

.VALUE _map_Initialize

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_Initialize",128,"_map_Initialize"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  129		PKMNSD4_init();
.LINE 129

	CALL	_PKMNSD4_init
;  130		PKMNSD7_init();
.LINE 130

	CALL	_PKMNSD7_init
;  131		PKMNSD8_init();
.LINE 131

	CALL	_PKMNSD8_init
;  132	
;  133		gfx_SetPalette(map_gfx_pal, sizeof_map_gfx_pal, 0);
.LINE 133

	LD	BC,0
	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	HL,_PKMNSD4+18
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;  134		SetColors(0);
.LINE 134

	LD	BC,0
	PUSH	BC
	CALL	_SetColors
	POP	BC
;  135		gfx_SetTextFGColor(colors[1]);
.LINE 135

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  136		textBoxType = 0;	
.LINE 136

	LD	BC,0
	LD	(_textBoxType),BC
;  137		save_SelectSave();
.LINE 137

	CALL	_save_SelectSave
;  138		save_Load();
.LINE 138

	CALL	_save_Load
;  139	
;  140		/* Initialize the tilemap */
;  141		tilemap.map = currentTileMap;
.LINE 141

	LD	BC,_currentTileMap
	LD	(_tilemap),BC
;  142		tilemap.tiles = mapTiles;
.LINE 142

	LD	BC,_mapTiles
	LD	(_tilemap+3),BC
;  143		tilemap.type_width = gfx_tile_16_pixel;
.LINE 143

	LD	A,4
	LD	(_tilemap+10),A
;  144		tilemap.type_height = gfx_tile_16_pixel;
.LINE 144

	LD	(_tilemap+11),A
;  145		tilemap.tile_height = 16;
.LINE 145

	LD	A,16
	LD	(_tilemap+6),A
;  146		tilemap.tile_width = 16;
.LINE 146

	LD	(_tilemap+7),A
;  147		tilemap.draw_height = 16;
.LINE 147

	LD	(_tilemap+8),A
;  148		tilemap.draw_width = 22;
.LINE 148

	LD	A,22
	LD	(_tilemap+9),A
;  149		tilemap.height = OUTDOORHEIGHT;
.LINE 149

	LD	A,40
	LD	(_tilemap+12),A
;  150		tilemap.width = OUTDOORWIDTH;
.LINE 150

	LD	A,48
	LD	(_tilemap+13),A
;  151		tilemap.y_loc = 8;
.LINE 151

	LD	A,8
	LD	(_tilemap+14),A
;  152		tilemap.x_loc = -8;
.LINE 152

	LD	BC,16777208
	LD	(_tilemap+15),BC
;  153	
;  154		if (currentSave.indoors) {
.LINE 154

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_1
;  155			tilemap.width = 21;
.LINE 155

	LD	A,21
	LD	(_tilemap+13),A
;  156			tilemap.height = 15;
.LINE 156

	LD	A,15
	LD	(_tilemap+12),A
;  157		}
L_1:
.LINE 157

;  158	
;  159		tx = currentSave.playerX / 16;
.LINE 159

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  160		ty = currentSave.playerY / 16;
.LINE 160

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  161		LoadMap();
.LINE 161

	CALL	_LoadMap
;  162		dbg_SetBreakpoint(&map_Draw);
.LINE 162

	LD	BC,_map_Draw
	PUSH	BC
	CALL	_dbg_SetBreakpoint
	POP	BC
;  163	}
.LINE 163

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Initialize ***************************
;Name                         Addr/Register   Size   Type
;_map_Draw                           IMPORT  -----   function
;_dbg_SetBreakpoint                  IMPORT  -----   function
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_currentSave                        IMPORT   4140   variable
;_mapTiles                           STATIC    384   variable
;_tilemap                            STATIC     18   variable
;_currentTileMap                     STATIC   1920   variable
;_save_Load                          IMPORT  -----   function
;_save_SelectSave                    IMPORT  -----   function
;_textBoxType                        IMPORT      3   variable
;_colors                             IMPORT  unknown variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_PKMNSD4                            IMPORT     21   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_PKMNSD8_init                       IMPORT  -----   function
;_PKMNSD7_init                       IMPORT  -----   function
;_PKMNSD4_init                       IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_Initialize",163,"_map_Initialize"
;  164	void map_Setup(void) {
_map_Setup:
.DEFINE "_map_Setup"

.VALUE _map_Setup

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_Setup",164,"_map_Setup"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  165		map_SetupGfx();
.LINE 165

	CALL	_map_SetupGfx
;  166	
;  167		tx = currentSave.playerX / 16;
.LINE 167

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  168		ty = currentSave.playerY / 16;
.LINE 168

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  169	}
.LINE 169

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Setup ***************************
;Name                         Addr/Register   Size   Type
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_currentSave                        IMPORT   4140   variable
;_map_SetupGfx                       IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_Setup",169,"_map_Setup"
;  170	
;  171	void map_SetupGfx(void) {
_map_SetupGfx:
.DEFINE "_map_SetupGfx"

.VALUE _map_SetupGfx

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_SetupGfx",171,"_map_SetupGfx"

.LINE 171

.DEFINE "tileIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  172		int tileIndex = 0;
;  173		LoadTileset(false);
.LINE 173

	LD	BC,0
	PUSH	BC
	CALL	_LoadTileset
	POP	BC
;  174		for (tileIndex = 0; tileIndex < 3; tileIndex++) {
.LINE 174

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_7
L_5:
;  175			pokeballSprites[tileIndex] = gfx_MallocSprite(16, 16);
.LINE 175

	LD	BC,_malloc
	PUSH	BC
	LD	BC,16
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,_pokeballSprites
	ADD	HL,DE
	LD	(HL),BC
;  176			zx7_Decompress(pokeballSprites[tileIndex], pokeball_tiles_compressed[tileIndex]);
.LINE 176

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_pokeball_tiles_compressed
	LD	HL,BC
	ADD	HL,DE
	LD	DE,(HL)
	PUSH	DE
	LD	DE,_pokeballSprites
	LD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  177		}
L_7:
.LINE 177

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_5
;  178		textBoxType = 0;
.LINE 178

	LD	BC,0
	LD	(_textBoxType),BC
;  179		gfx_SetPalette(map_gfx_pal, sizeof_map_gfx_pal, 0);
.LINE 179

	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	HL,_PKMNSD4+18
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;  180		SetColors(0);
.LINE 180

	LD	BC,0
	PUSH	BC
	CALL	_SetColors
	POP	BC
;  181		gfx_SetTextScale(1, 1);
.LINE 181

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  182		gfx_SetTextFGColor(colors[1]);
.LINE 182

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  183		map_LoadPokeballs();
.LINE 183

	CALL	_map_LoadPokeballs
;  184	}
.LINE 184

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_SetupGfx ***************************
;Name                         Addr/Register   Size   Type
;_map_LoadPokeballs                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_PKMNSD4                            IMPORT     21   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_textBoxType                        IMPORT      3   variable
;_pokeball_tiles_compressed          IMPORT      9   variable
;_zx7_Decompress                     IMPORT  -----   function
;_pokeballSprites                    STATIC      9   variable
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_LoadTileset                        IMPORT  -----   function
;tileIndex                             IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_SetupGfx",184,"_map_SetupGfx"
;  185	
;  186	int map_Loop(void) {
_map_Loop:
.DEFINE "_map_Loop"

.VALUE _map_Loop

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "map_Loop",186,"_map_Loop"

.LINE 186

.DEFINE "newTile"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "partyIndex"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

.DEFINE "oldTile"

.CLASS 65

.VALUE -12

.TYPE 4

.ENDEF

.DEFINE "partyIndex"

.CLASS 65

.VALUE -15

.TYPE 4

.ENDEF

.DEFINE "partyIndex"

.CLASS 65

.VALUE -18

.TYPE 4

.ENDEF

.DEFINE "walkState"

.CLASS 65

.VALUE -21

.TYPE 4

.ENDEF

.DEFINE "starter"

.CLASS 65

.VALUE -25

.TYPE 12

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -28

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -31

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -34

.TYPE 4

.ENDEF

.DEFINE "hasUser"

.CLASS 65

.VALUE -35

.TYPE 12

.ENDEF

.DEFINE "tilePos"

.CLASS 65

.VALUE -38

.TYPE 4

.ENDEF

.DEFINE "hasUser"

.CLASS 65

.VALUE -39

.TYPE 12

.ENDEF

.DEFINE "awaitSecond"

.CLASS 65

.VALUE -46

.TYPE 12

.ENDEF

.DEFINE "hasUser"

.CLASS 65

.VALUE -47

.TYPE 12

.ENDEF

.DEFINE "tempTile"

.CLASS 65

.VALUE -53

.TYPE 4

.ENDEF

.DEFINE "pauseMenuSprite"

.CLASS 65

.VALUE -59

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "wildSpawn"

.CLASS 65

.VALUE -63

.TYPE 12

.ENDEF

.DEFINE "shopSpriteOriginal"

.CLASS 65

.VALUE -69

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "xloc"

.CLASS 65

.VALUE -72

.TYPE 4

.ENDEF

.DEFINE "yloc"

.CLASS 65

.VALUE -75

.TYPE 4

.ENDEF

.DEFINE "menuReturn"

.CLASS 65

.VALUE -102

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-247
	ADD	HL,SP
	LD	SP,HL
;  187		
;  188		/* Open Menu */
;  189		if (kb_Data[6] & kb_Enter) {
.LINE 189

	LD	A,(16056348)
	AND	A,1
	JR	Z,L_137
;  190			int menuReturn;
;  191			gfx_sprite_t *pauseMenuSprite;
;  192			Wait(20);
.LINE 192

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  193			gfx_Blit(gfx_screen);
.LINE 193

	LD	BC,0
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  194			map_End();
.LINE 194

	CALL	_map_End
;  195			pauseMenuSprite = gfx_MallocSprite(112, 96);
.LINE 195

	LD	BC,_malloc
	PUSH	BC
	LD	BC,96
	PUSH	BC
	LD	BC,112
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-59),HL
;  196			zx7_Decompress(pauseMenuSprite, pausemenu_compressed);
.LINE 196

	LD	HL,_PKMNSD4+12
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-59)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  197			gfx_Sprite(pauseMenuSprite, 195, 25);
.LINE 197

	LD	BC,25
	PUSH	BC
	LD	BC,195
	PUSH	BC
	LD	BC,(IX+-59)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
;  198	
;  199			menuReturn = menu_Menu();
.LINE 199

	CALL	_menu_Menu
	UEXT	HL
	LD	L,A
	LD	(IX+-102),HL
;  200			free(pauseMenuSprite);
.LINE 200

	LD	BC,(IX+-59)
	PUSH	BC
	CALL	_free
	POP	BC
;  201			map_SetupGfx();
.LINE 201

	CALL	_map_SetupGfx
;  202			map_LoadPokeballs();
.LINE 202

	CALL	_map_LoadPokeballs
;  203			while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
.LINE 203

	JR	L_11
L_12:
	CALL	_kb_Scan
L_11:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_12
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_12
;  204			return menuReturn;
.LINE 204

	LD	HL,(IX+-102)
	JR	L_243
;  205		}
L_137:
.LINE 205

;  206		/* If player presses 2nd */
;  207		if ((kb_Data[1] & kb_2nd)) {
.LINE 207

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_237
;  208			bool awaitSecond = true;
.LINE 208

	LD	(IX+-46),1
;  209			nextTile = GetNextTile(tx, ty, tilemap.width);
.LINE 209

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_GetNextTile
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(_nextTile),A
;  210			if (GetNextTile(tx, ty, tilemap.width) >= 0x1A && GetNextTile(tx, ty, tilemap.width) <= 0x20) {
.LINE 210

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_GetNextTile
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,26
	OR	A,A
	SBC	HL,BC
	JP	M,L_131
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_GetNextTile
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,32
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_131
;  211				int partyIndex, moveIndex;
;  212				bool hasUser = false;
.LINE 212

	LD	(IX+-39),0
;  213				for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 213

	LD	BC,0
	LD	(IX+-15),BC
	JR	L_24
L_22:
;  214					for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 214

	LD	BC,0
	LD	(IX+-31),BC
	JR	L_21
L_19:
;  215						if (currentSave.party[partyIndex].moves[moveIndex] == 141) {
.LINE 215

	LD	HL,(IX+-15)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	(IX+-50),HL
	LD	IY,(IX+-50)
	LD	BC,(IX+-31)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,141
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_20
;  216							hasUser = true;
.LINE 216

	LD	(IX+-39),1
;  217							sprintf(str, "%s used Surf", data_pokemon[currentSave.party[partyIndex].id].name);
.LINE 217

	LD	IY,(IX+-50)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,L__12
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  218							partyIndex = 6;
.LINE 218

	LD	BC,6
	LD	(IX+-15),BC
;  219						}
;  220					}
L_20:
.LINE 220

	LD	BC,(IX+-31)
	INC	BC
	LD	(IX+-31),BC
L_21:
	LD	BC,4
	LD	HL,(IX+-31)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_19
	LD	BC,(IX+-15)
	INC	BC
	LD	(IX+-15),BC
;  221				}
L_24:
.LINE 221

	LD	BC,6
	LD	HL,(IX+-15)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_22
;  222				if (hasUser) {
.LINE 222

	LD	A,(IX+-39)
	OR	A,A
	JR	Z,L_34
;  223					text_Display(str,true);
.LINE 223

	LD	BC,1
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  224					if (moveDir == 1) {
.LINE 224

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_27
;  225						currentSave.playerX += 16;
.LINE 225

	LD	IY,(_currentSave+2)
	LEA	BC,IY+16
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  226					}
L_27:
.LINE 226

;  227					if (moveDir == 2) {
.LINE 227

	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_29
;  228						currentSave.playerX -= 16;
.LINE 228

	LD	IY,(_currentSave+2)
	LEA	BC,IY+-16
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  229					}
L_29:
.LINE 229

;  230					if (moveDir == 3) {
.LINE 230

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_31
;  231						currentSave.playerY += 16;
.LINE 231

	LD	IY,(_currentSave+4)
	LEA	BC,IY+16
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  232					}
L_31:
.LINE 232

;  233					if (moveDir == 4) {
.LINE 233

	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_32
;  234						currentSave.playerY -= 16;
.LINE 234

	LD	IY,(_currentSave+4)
	LEA	BC,IY+-16
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  235					}
L_32:
.LINE 235

;  236					currentSave.surfing = true;
.LINE 236

	LD	A,1
	LD	(_currentSave+1237),A
;  237					tx = currentSave.playerX / 16;
.LINE 237

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  238					ty = currentSave.playerY / 16;
.LINE 238

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  239				}
;  240				else {
.LINE 240

	JR	L_135
L_34:
;  241					text_Display("A Pokemon with Surf could bring you across this water", true);
.LINE 241

	LD	BC,1
	PUSH	BC
	LD	BC,L__20
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  242				}
;  243			}
;  244			else if (nextTile == 0x41) {
.LINE 244

	JR	L_135
L_131:
	LD	A,(_nextTile)
	CP	A,65
	JR	NZ,L_129
;  245				HealParty();
.LINE 245

	CALL	_HealParty
;  246			}
;  247			else if (nextTile == 0x42) {
.LINE 247

	JR	L_135
L_129:
	LD	A,(_nextTile)
	CP	A,66
	JR	NZ,L_127
;  248				gfx_sprite_t *shopSpriteOriginal;
;  249				map_End();
.LINE 249

	CALL	_map_End
;  250	
;  251				shopSpriteOriginal = gfx_MallocSprite(134, 84);
.LINE 251

	LD	BC,_malloc
	PUSH	BC
	LD	BC,84
	PUSH	BC
	LD	BC,134
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-69),HL
;  252				zx7_Decompress(shopSpriteOriginal, shop_compressed);
.LINE 252

	LD	BC,_shop_compressed
	PUSH	BC
	LD	BC,(IX+-69)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  253	
;  254				menu_ItemShop(shopSpriteOriginal);
.LINE 254

	LD	BC,(IX+-69)
	PUSH	BC
	CALL	_menu_ItemShop
	POP	BC
;  255	
;  256				free(shopSpriteOriginal);
.LINE 256

	LD	BC,(IX+-69)
	PUSH	BC
	CALL	_free
	POP	BC
;  257				map_SetupGfx();
.LINE 257

	CALL	_map_SetupGfx
;  258			}
;  259			else if (nextTile == 0x43) {
.LINE 259

	JR	L_135
L_127:
	LD	A,(_nextTile)
	CP	A,67
	JR	NZ,L_125
;  260				OpenBox();
.LINE 260

	CALL	_OpenBox
;  261			}
;  262			else if (nextTile == 0x44) {
.LINE 262

	JR	L_135
L_125:
	LD	A,(_nextTile)
	CP	A,68
	JR	NZ,L_123
;  263				if (currentSave.newGame) {
.LINE 263

	LD	A,(_currentSave)
	OR	A,A
	JR	Z,L_37
;  264					EnterDoor(15);
.LINE 264

	LD	BC,15
	PUSH	BC
	CALL	_EnterDoor
	POP	BC
;  265				}
;  266				else {
.LINE 266

	JR	L_135
L_37:
;  267					EnterDoor(0);
.LINE 267

	LD	BC,0
	PUSH	BC
	CALL	_EnterDoor
	POP	BC
;  268				}
;  269			}
;  270			else if (nextTile == 0x45) {
.LINE 270

	JR	L_135
L_123:
	LD	A,(_nextTile)
	CP	A,69
	JR	NZ,L_121
;  271				if (currentSave.newGame) {
.LINE 271

	LD	A,(_currentSave)
	OR	A,A
	JR	Z,L_44
;  272					uint8_t starter = 2;
.LINE 272

	LD	(IX+-25),2
;  273					int tilePos = tx + (moveDir == 1) - (moveDir == 2) + ((ty + (moveDir == 3) - (moveDir == 4)) * tilemap.width);
.LINE 273

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-116),HL
	POP	IY
	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L__29
	LD	B,1
	JR	L__30
L__29:
	LD	B,0
L__30:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L__32
	LD	B,1
	JR	L__33
L__32:
	LD	B,0
L__33:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-80),HL
	LD	BC,(IY+-116)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-80)
	POP	IY
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-113),HL
	POP	IY
	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L__35
	LD	B,1
	JR	L__36
L__35:
	LD	B,0
L__36:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L__38
	LD	B,1
	JR	L__39
L__38:
	LD	B,0
L__39:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-113)
	POP	IY
	ADD	HL,DE
	LD	(IX+-38),HL
;  274	
;  275					sprintf(str, "Choose Squirtle as your starter?");
.LINE 275

	LD	BC,L__40
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  276					if (currentTypeMap[tilePos + 1] == 0x45) {
.LINE 276

	LD	HL,(IX+-38)
	INC	HL
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,69
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_40
;  277						starter = 0;
.LINE 277

	LD	(IX+-25),0
;  278						sprintf(str, "Choose Bulbasaur as your starter?");
.LINE 278

	LD	BC,L__42
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  279						if (currentTypeMap[tilePos - 1] == 0x45) {
.LINE 279

	LD	HL,(IX+-38)
	DEC	HL
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,69
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_40
;  280							starter = 1;
.LINE 280

	LD	(IX+-25),1
;  281							sprintf(str, "Choose Charmander as your starter?");
.LINE 281

	LD	BC,L__44
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  282						}
;  283					}
L_40:
.LINE 283

;  284	
;  285					
;  286					text_Display(str, false);
.LINE 286

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  287					if (text_AskQuestion2("Yes", "No", false) == 1) {
.LINE 287

	LD	BC,0
	PUSH	BC
	LD	BC,L__45
	PUSH	BC
	LD	BC,L__46
	PUSH	BC
	CALL	_text_AskQuestion2
	POP	BC
	POP	BC
	POP	BC
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_42
;  288						currentSave.party[0] = stats_NewCharacter((1 + (starter) * 3), 5);
.LINE 288

	LD	BC,5
	PUSH	BC
	LD	B,3
	LD	C,(IX+-25)
	MLT	BC
	INC	C
	LD	B,0
	PUSH	BC
	LD	HL,IX
	LD	BC,-136
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_stats_NewCharacter
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_currentSave+10
	LD	BC,34
	LDIR	
;  289						currentTileMap[tilePos - tilemap.width]-=3;
.LINE 289

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+-38)
	OR	A,A
	SBC	HL,BC
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	IY,HL
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+-38)
	OR	A,A
	SBC	HL,BC
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	A,(IY)
	SUB	A,3
	LD	(HL),A
;  290						currentSave.newGame = false;
.LINE 290

	XOR	A,A
	LD	(_currentSave),A
;  291						currentSave.defeatedTrainers[0][15] = true;
.LINE 291

	LD	HL,_currentSave+1443
	LD	(HL),1
;  292						currentSave.rivalPokemon = (starter + 1) % 3;
.LINE 292

	LD	A,(IX+-25)
	UEXT	HL
	LD	L,A
	INC	HL
	LD	BC,3
	CALL	__irems
	LD	A,L
	LD	(_currentSave+1),A
;  293					}
L_42:
.LINE 293

;  294					map_LoadPokeballs();
.LINE 294

	CALL	_map_LoadPokeballs
;  295				}
;  296				else {
.LINE 296

	JR	L_135
L_44:
;  297					text_Display("You already chose a Pokemon", true);
.LINE 297

	LD	BC,1
	PUSH	BC
	LD	BC,L__48
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  298				}
;  299			}
;  300			else if (nextTile == 0x46) {
.LINE 300

	JR	L_135
L_121:
	LD	A,(_nextTile)
	CP	A,70
	JR	NZ,L_119
;  301				int partyIndex, moveIndex;
;  302				bool hasUser = false;
.LINE 302

	LD	(IX+-47),0
;  303				int oldTile;
;  304				int tempTile;
;  305				int newTile = 0;
.LINE 305

	LD	BC,0
	LD	(IX+-6),BC
;  306				oldTile = tx + ty * OUTDOORWIDTH;
.LINE 306

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	A,48
	CALL	__imul_b
	LD	(IX+-24),HL
	LD	(IX+-81),HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-24)
	ADD	HL,BC
	LD	(IX+-12),HL
;  307				if (moveDir == 1) {
.LINE 307

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_47
;  308					oldTile = (tx + 1) + (ty)* OUTDOORWIDTH;
.LINE 308

	LD	BC,(IX+-24)
	LD	(IX+-81),BC
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	INC	HL
	LD	BC,(IX+-24)
	ADD	HL,BC
	LD	(IX+-12),HL
;  309					newTile = (tx + 2) + (ty)* OUTDOORWIDTH;
.LINE 309

	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	INC	HL
	INC	HL
	LD	BC,(IX+-24)
	ADD	HL,BC
	LD	(IX+-6),HL
;  310				}
L_47:
.LINE 310

;  311				if (moveDir == 2) {
.LINE 311

	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_49
;  312					oldTile = (tx - 1) + (ty)* OUTDOORWIDTH;
.LINE 312

	LD	BC,(IX+-81)
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	DEC	HL
	ADD	HL,BC
	LD	(IX+-12),HL
;  313					newTile = (tx - 2) + (ty)* OUTDOORWIDTH;
.LINE 313

	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	DEC	HL
	DEC	HL
	ADD	HL,BC
	LD	(IX+-6),HL
;  314				}
L_49:
.LINE 314

;  315				if (moveDir == 3) {
.LINE 315

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_51
;  316					oldTile = (tx)+(ty + 1)* OUTDOORWIDTH;
.LINE 316

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	INC	HL
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-12),HL
;  317					newTile = (tx)+(ty + 2)* OUTDOORWIDTH;
.LINE 317

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	INC	HL
	INC	HL
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-6),HL
;  318				}
L_51:
.LINE 318

;  319				if (moveDir == 4) {
.LINE 319

	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_61
;  320					oldTile = (tx)+(ty - 1)* OUTDOORWIDTH;
.LINE 320

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-12),HL
;  321					newTile = (tx)+(ty - 2)* OUTDOORWIDTH;
.LINE 321

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	DEC	HL
	DEC	HL
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-6),HL
;  322				}
L_61:
.LINE 322

;  323				for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 323

	LD	BC,0
	LD	(IX+-9),BC
	JR	L_60
L_58:
;  324					for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 324

	LD	BC,0
	LD	(IX+-28),BC
	JR	L_57
L_55:
;  325						if (currentSave.party[partyIndex].moves[moveIndex] == 133) {
.LINE 325

	LD	HL,(IX+-9)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	(IX+-56),HL
	LD	IY,(IX+-56)
	LD	BC,(IX+-28)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,133
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_56
;  326							hasUser = true;
.LINE 326

	LD	(IX+-47),1
;  327							sprintf(str, "%s used Strength", data_pokemon[currentSave.party[partyIndex].id].name);
.LINE 327

	LD	IY,(IX+-56)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,L__55
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  328							partyIndex = 6;
.LINE 328

	LD	BC,6
	LD	(IX+-9),BC
;  329						}
;  330					}
L_56:
.LINE 330

	LD	BC,(IX+-28)
	INC	BC
	LD	(IX+-28),BC
L_57:
	LD	BC,4
	LD	HL,(IX+-28)
	OR	A,A
	SBC	HL,BC
	JP	M,L_55
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  331				}
L_60:
.LINE 331

	LD	BC,6
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_58
;  332				if (hasUser && currentTypeMap[newTile] == 0) {
.LINE 332

	LD	A,(IX+-47)
	OR	A,A
	JR	Z,L_65
	LD	BC,(IX+-6)
	LD	HL,_currentTypeMap
	ADD	HL,BC
	LD	(IX+-42),HL
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_65
;  333					text_Display(str, true);
.LINE 333

	LD	BC,1
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  334					tempTile = currentTileMap[oldTile];
.LINE 334

	LD	BC,(IX+-12)
	LD	HL,_currentTileMap
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-17),HL
	LD	HL,(IY+-17)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	(IX+-53),HL
;  335					currentTileMap[oldTile] = currentTileMap[newTile];
.LINE 335

	LD	BC,(IX+-6)
	LD	HL,_currentTileMap
	ADD	HL,BC
	LD	(IY+-14),HL
	LD	HL,(IY+-14)
	LD	IY,(IY+-17)
	LD	A,(HL)
	LD	(IY),A
;  336					currentTileMap[newTile] = tempTile;
.LINE 336

	LD	A,(IX+-53)
	LEA	IY,IX+-128
	LD	HL,(IY+-14)
	LD	(HL),A
;  337					tempTile = currentTypeMap[oldTile];
.LINE 337

	LD	BC,(IX+-12)
	LD	HL,_currentTypeMap
	ADD	HL,BC
	LD	(IY+-11),HL
	LD	HL,(IY+-11)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	(IX+-53),HL
;  338					currentTypeMap[oldTile] = currentTypeMap[newTile];
.LINE 338

	LD	HL,(IX+-42)
	LD	IY,(IY+-11)
	LD	A,(HL)
	LD	(IY),A
;  339					currentTypeMap[newTile] = tempTile;
.LINE 339

	LD	A,(IX+-53)
	LD	HL,(IX+-42)
	LD	(HL),A
;  340				}
;  341				else if (currentTypeMap[newTile] == 0) {
.LINE 341

	JR	L_135
L_65:
	LD	BC,_currentTypeMap
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_135
;  342					text_Display("This boulder could be moved by a strong Pokemon", true);
.LINE 342

	LD	BC,1
	PUSH	BC
	LD	BC,L__61
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  343				}
;  344			}
;  345			else if (nextTile == 0x47) {
.LINE 345

	JR	L_135
L_119:
	LD	A,(_nextTile)
	CP	A,71
	JR	NZ,L_117
;  346				int partyIndex, moveIndex;
;  347				bool hasUser = false;
.LINE 347

	LD	(IX+-35),0
;  348				for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 348

	LD	BC,0
	LD	(IX+-18),BC
	JR	L_75
L_73:
;  349					for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 349

	LD	BC,0
	LD	(IX+-34),BC
	JR	L_72
L_70:
;  350						if (currentSave.party[partyIndex].moves[moveIndex] == 26) {
.LINE 350

	LD	HL,(IX+-18)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	(IX+-62),HL
	LD	IY,(IX+-62)
	LD	BC,(IX+-34)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,26
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_71
;  351							hasUser = true;
.LINE 351

	LD	(IX+-35),1
;  352							sprintf(str, "%s used Cut", data_pokemon[currentSave.party[partyIndex].id].name);
.LINE 352

	LD	IY,(IX+-62)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,L__64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  353							partyIndex = 6;
.LINE 353

	LD	BC,6
	LD	(IX+-18),BC
;  354						}
;  355					}
L_71:
.LINE 355

	LD	BC,(IX+-34)
	INC	BC
	LD	(IX+-34),BC
L_72:
	LD	BC,4
	LD	HL,(IX+-34)
	OR	A,A
	SBC	HL,BC
	JP	M,L_70
	LD	BC,(IX+-18)
	INC	BC
	LD	(IX+-18),BC
;  356				}
L_75:
.LINE 356

	LD	BC,6
	LD	HL,(IX+-18)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_73
;  357				if (hasUser) {
.LINE 357

	LD	A,(IX+-35)
	OR	A,A
	JR	Z,L_84
;  358					text_Display(str, true);
.LINE 358

	LD	BC,1
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  359					if (moveDir == 1) {
.LINE 359

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_78
;  360						currentTypeMap[(tx + 1) + (ty)* OUTDOORWIDTH] = 0;
.LINE 360

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	INC	HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_currentTypeMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  361						currentTileMap[(tx + 1) + (ty)* OUTDOORWIDTH] = 0;
.LINE 361

	LD	DE,_currentTileMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  362					}
L_78:
.LINE 362

;  363					if (moveDir == 2) {
.LINE 363

	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_80
;  364						currentTypeMap[(tx - 1) + (ty)* OUTDOORWIDTH] = 0;
.LINE 364

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	DEC	HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_currentTypeMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  365						currentTileMap[(tx - 1) + (ty)* OUTDOORWIDTH] = 0;
.LINE 365

	LD	DE,_currentTileMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  366					}
L_80:
.LINE 366

;  367					if (moveDir == 3) {
.LINE 367

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_82
;  368						currentTypeMap[(tx)+(ty + 1)* OUTDOORWIDTH] = 0;
.LINE 368

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	INC	HL
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_currentTypeMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  369						currentTileMap[(tx)+(ty + 1)* OUTDOORWIDTH] = 0;
.LINE 369

	LD	DE,_currentTileMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  370					}
L_82:
.LINE 370

;  371					if (moveDir == 4) {
.LINE 371

	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_135
;  372						currentTypeMap[(tx)+(ty - 1)* OUTDOORWIDTH] = 0;
.LINE 372

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,48
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_currentTypeMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  373						currentTileMap[(tx)+(ty - 1)* OUTDOORWIDTH] = 0;
.LINE 373

	LD	DE,_currentTileMap
	LD	HL,BC
	ADD	HL,DE
	LD	(HL),0
;  374					}
;  375				}
;  376				else {
.LINE 376

	JR	L_135
L_84:
;  377					text_Display("This tree could be cut down", true);
.LINE 377

	LD	BC,1
	PUSH	BC
	LD	BC,L__72
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  378				}
;  379			}
;  380			
;  381			else if (nextTile >= 0x50 && nextTile < 0x60) {
.LINE 381

	JR	L_135
L_117:
	LD	A,(_nextTile)
	CP	A,80
	JR	C,L_115
	LD	A,(_nextTile)
	CP	A,96
	JR	NC,L_115
;  382				EnterDoor(nextTile - 80);
.LINE 382

	LD	A,(_nextTile)
	SUB	A,80
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_EnterDoor
	POP	BC
;  383			}
;  384			else if (nextTile >= 0x60 && nextTile < 0x70) {
.LINE 384

	JR	L_135
L_115:
	LD	A,(_nextTile)
	CP	A,96
	JR	C,L_113
	LD	A,(_nextTile)
	CP	A,112
	JR	NC,L_113
;  385				if (FightTrainer(nextTile - 96)) {
.LINE 385

	LD	A,(_nextTile)
	SUB	A,96
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_FightTrainer
	POP	BC
	OR	A,A
	JR	Z,L_135
;  386					return 1;
.LINE 386

	LD	HL,1
	JR	L_243
;  387				}
;  388			}
;  389			else if (nextTile >= 0x70 && nextTile < 0x80) {
L_113:
.LINE 389

	LD	A,(_nextTile)
	CP	A,112
	JR	C,L_111
	LD	A,(_nextTile)
	CP	A,128
	JR	NC,L_111
;  390				ReadText(nextTile - 0x70);
.LINE 390

	LD	A,(_nextTile)
	SUB	A,112
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_ReadText
	POP	BC
;  391			}
;  392			else if (nextTile >= 0x80 && nextTile < 0x90) {
.LINE 392

	JR	L_135
L_111:
	LD	A,(_nextTile)
	CP	A,128
	JR	C,L_109
	LD	A,(_nextTile)
	CP	A,144
	JR	NC,L_109
;  393				if (!currentSave.takenGroundGifts[currentSave.indoors][(currentSave.currentZone * !currentSave.indoors) + (currentSave.currentBuilding * currentSave.indoors)][nextTile - 0x80]) {
.LINE 393

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_92
	LD	BC,1
	LD	(IX+-78),BC
	JR	L_93
L_92:
	LD	BC,0
	LD	(IX+-78),BC
L_93:
	LD	A,(_nextTile)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	IY,IY+-128
	LD	(IX+-45),IY
	LD	BC,_currentSave+2452
	LD	(IX+-99),BC
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	A,8
	CALL	__ishl_b
	LD	BC,(IX+-99)
	ADD	HL,BC
	LD	DE,HL
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,(IX+-78)
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-104),HL
	POP	IY
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-107),HL
	POP	IY
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-80),HL
	LD	BC,(IY+-107)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-80)
	POP	IY
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-104)
	POP	IY
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,(IX+-45)
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_135
;  394					currentSave.takenGroundGifts[currentSave.indoors][(currentSave.currentZone * !currentSave.indoors) + (currentSave.currentBuilding * currentSave.indoors)][nextTile - 0x80] = true;
.LINE 394

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_96
	LD	BC,1
	LD	(IX+-84),BC
	JR	L_97
L_96:
	LD	BC,0
	LD	(IX+-84),BC
L_97:
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	A,8
	CALL	__ishl_b
	LD	BC,(IX+-99)
	ADD	HL,BC
	LD	DE,HL
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,(IX+-84)
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-92),HL
	POP	IY
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-95),HL
	POP	IY
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-80),HL
	LD	BC,(IY+-95)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-80)
	POP	IY
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-92)
	POP	IY
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,(IX+-45)
	ADD	HL,BC
	LD	(HL),1
;  395					currentSave.playerItems[currentZoneData.grounditems[nextTile - 0x80] - 1]++;
.LINE 395

	LD	BC,_currentSave+1243
	LEA	IY,IX+-128
	LD	(IY+-26),BC
	LD	BC,_currentZoneData+672
	LD	(IX+-66),BC
	LD	BC,(IX+-45)
	LD	HL,(IX+-66)
	ADD	HL,BC
	LD	(IY+-23),HL
	LD	HL,(IY+-23)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	LD	HL,-154
	PUSH	IY
	LD	(IY+-98),BC
	LD	(IY+-101),IX	; unspill
	LD	DE,(IY+-98)
	LD	(IY+-98),DE
	LD	DE,(IY+-101)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-98)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LEA	IY,IX+-128
	LD	(IY+-20),HL
	LD	IY,(IY+-20)
	LD	HL,-154
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	A,(IY)
	INC	A
	LD	(HL),A
;  396					items_IndexToName(str1, currentZoneData.grounditems[nextTile - 0x80] - 1);
.LINE 396

	LEA	IY,IX+-128
	LD	HL,(IY+-23)
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	LD	BC,_str1
	PUSH	BC
	CALL	_items_IndexToName
	POP	BC
	POP	BC
;  397					if (currentZoneData.grounditems[nextTile - 0x80] - 1 >= 20) {
.LINE 397

	LD	A,(_nextTile)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+-128
	LD	HL,(IX+-66)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	M,L_101
;  398						sprintf(str, "Found the TM for %s", str1);
.LINE 398

	LD	BC,_str1
	PUSH	BC
	LD	BC,L__86
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  399					}
;  400					else {
.LINE 400

	JR	L_102
L_101:
;  401						sprintf(str, "Found a %s", str1);
.LINE 401

	LD	BC,_str1
	PUSH	BC
	LD	BC,L__87
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  402					}
L_102:
.LINE 402

;  403					text_Display(str, false);
.LINE 403

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_text_Display
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  404					currentTileMap[ShiftTile(tx + tilemap.width*ty, moveDir, 1)] = 0;
.LINE 404

	LD	BC,1
	PUSH	BC
	LD	A,(_moveDir)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tilemap+13)
	LD	C,A
	LD	DE,BC
	LD	A,(_ty)
	LD	C,A
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	A,(_tx)
	LD	C,A
	LD	B,0
	ADD.SIS	HL,BC
	PUSH	HL
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_ShiftTile
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	CALL	__stoiu
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	(HL),0
;  405					currentTypeMap[ShiftTile(tx + tilemap.width*ty, moveDir, 1)] = 0;
.LINE 405

	LD	BC,1
	PUSH	BC
	LD	A,(_moveDir)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tilemap+13)
	LD	C,A
	LD	DE,BC
	LD	A,(_ty)
	LD	C,A
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	A,(_tx)
	LD	C,A
	LD	B,0
	ADD.SIS	HL,BC
	PUSH	HL
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_ShiftTile
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	CALL	__stoiu
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	(HL),0
;  406					currentSave.foundItemsPos[currentSave.indoors][(currentSave.currentZone * !currentSave.indoors) + (currentSave.currentBuilding * currentSave.indoors)][nextTile - 0x80] = ShiftTile(tx + tilemap.width*ty, moveDir, 1);
.LINE 406

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_104
	LD	BC,1
	LD	(IX+-90),BC
	JR	L_105
L_104:
	LD	BC,0
	LD	(IX+-90),BC
L_105:
	LD	BC,1
	PUSH	BC
	LD	A,(_moveDir)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tilemap+13)
	LD	C,A
	LD	DE,BC
	LD	A,(_ty)
	LD	C,A
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	A,(_tx)
	LD	C,A
	LD	B,0
	ADD.SIS	HL,BC
	PUSH	HL
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-247
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_ShiftTile
	PUSH	BC
	LD	BC,-247
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	DE,HL
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	A,9
	CALL	__ishl_b
	LD	BC,_currentSave+2964
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-83),HL
	POP	IY
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,(IX+-90)
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-86),HL
	POP	IY
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-89),HL
	POP	IY
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-80),HL
	LD	BC,(IY+-89)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-80)
	POP	IY
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-86)
	POP	IY
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-83)
	POP	IY
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_nextTile)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-128
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,DE
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  407				}
;  408			}
;  409			else {
.LINE 409

	JR	L_135
L_109:
;  410				awaitSecond = false;
.LINE 410

	LD	(IX+-46),0
;  411			}
L_135:
.LINE 411

;  412			if (awaitSecond) {
.LINE 412

	LD	A,(IX+-46)
	OR	A,A
	JR	NZ,L_132
	JR	L_237
;  413				while ((kb_Data[1] & kb_2nd))
L_133:
.LINE 413

;  414				{
;  415					kb_Scan();
.LINE 415

	CALL	_kb_Scan
;  416				}
L_132:
.LINE 416

	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_133
;  417			}
;  418		}
L_237:
.LINE 418

;  419		/* If moving */
;  420		if (moveState > 0) {
.LINE 420

	XOR	A,A
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_236
;  421			Wait(1);
.LINE 421

	LD	BC,1
	PUSH	BC
	CALL	_Wait
	POP	BC
;  422			moveState--;
.LINE 422

	LD	A,(_moveState)
	DEC	A
	LD	(_moveState),A
;  423			if (jumpState) {
.LINE 423

	LD	A,(_jumpState)
	OR	A,A
	JR	Z,L_145
;  424				jumpState--;
.LINE 424

	LD	A,(_jumpState)
	DEC	A
	LD	(_jumpState),A
;  425			}
L_145:
.LINE 425

;  426			if (running) {
.LINE 426

	LD	A,(_running)
	OR	A,A
	JR	Z,L_147
;  427				Wait(1);
.LINE 427

	LD	BC,1
	PUSH	BC
	CALL	_Wait
	POP	BC
;  428				moveState--;
.LINE 428

	LD	A,(_moveState)
	DEC	A
	LD	(_moveState),A
;  429				if (jumpState) {
.LINE 429

	LD	A,(_jumpState)
	OR	A,A
	JR	Z,L_147
;  430					jumpState--;
.LINE 430

	LD	A,(_jumpState)
	DEC	A
	LD	(_jumpState),A
;  431				}
;  432			}
L_147:
.LINE 432

;  433			if (moveDir == 1) {
.LINE 433

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_149
;  434				currentSave.playerX += 2 * (1 + running);
.LINE 434

	LD	A,(_running)
	LD	C,A
	LD	B,0
	INC	BC
	LD	HL,BC
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(_currentSave+2)
	ADD.SIS	HL,BC
	LD	BC,HL
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  435			}
L_149:
.LINE 435

;  436			if (moveDir == 2) {
.LINE 436

	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_151
;  437				currentSave.playerX -= 2 * (1 + running);
.LINE 437

	LD	A,(_running)
	LD	C,A
	LD	B,0
	INC	BC
	LD	HL,BC
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(_currentSave+2)
	OR	A,A
	SBC.SIS	HL,BC
	LD	BC,HL
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  438			}
L_151:
.LINE 438

;  439			if (moveDir == 3) {
.LINE 439

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_153
;  440				currentSave.playerY += 2 * (1 + running);
.LINE 440

	LD	A,(_running)
	LD	C,A
	LD	B,0
	INC	BC
	LD	HL,BC
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(_currentSave+4)
	ADD.SIS	HL,BC
	LD	BC,HL
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  441			}
L_153:
.LINE 441

;  442			if (moveDir == 4) {
.LINE 442

	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_169
;  443				currentSave.playerY -= 2 * (1 + running);
.LINE 443

	LD	A,(_running)
	LD	C,A
	LD	B,0
	INC	BC
	LD	HL,BC
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(_currentSave+4)
	OR	A,A
	SBC.SIS	HL,BC
	LD	BC,HL
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  444			}
L_169:
.LINE 444

;  445			if (currentSave.surfing) {
.LINE 445

	LD	A,(_currentSave+1237)
	OR	A,A
	JR	Z,L_168
;  446				if (moveState > 3) {
.LINE 446

	LD	A,3
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_155
;  447					playerState = 1;
.LINE 447

	LD	A,1
	LD	(_playerState),A
;  448				}
;  449				else {
.LINE 449

	JR	L_211
L_155:
;  450					playerState = 0;
.LINE 450

	XOR	A,A
	LD	(_playerState),A
;  451				}
;  452			}
;  453			else if (running){
.LINE 453

	JR	L_211
L_168:
	LD	A,(_running)
	OR	A,A
	JR	Z,L_166
;  454				if (moveState > 3) {
.LINE 454

	LD	A,3
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_157
;  455					playerState = 1 + currentRun;
.LINE 455

	LD	A,(_currentRun)
	INC	A
	LD	(_playerState),A
;  456				}
;  457				else {
.LINE 457

	JR	L_211
L_157:
;  458					playerState = 0;
.LINE 458

	XOR	A,A
	LD	(_playerState),A
;  459				}
;  460	
;  461			}
;  462			else {
.LINE 462

	JR	L_211
L_166:
;  463				if (moveState > 5) {
.LINE 463

	LD	A,5
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_164
;  464					playerState = 1;
.LINE 464

	LD	A,1
	LD	(_playerState),A
;  465				}
;  466				else if (moveState > 3) {
.LINE 466

	JR	L_211
L_164:
	LD	A,3
	CP	A,(HL)
	JR	NC,L_162
;  467					playerState = 0;
.LINE 467

	XOR	A,A
	LD	(_playerState),A
;  468				}
;  469				else if (moveState > 1) {
.LINE 469

	JR	L_211
L_162:
	LD	A,1
	CP	A,(HL)
	JR	NC,L_160
;  470					playerState = 2;
.LINE 470

	LD	A,2
	LD	(_playerState),A
;  471				}
;  472				else if (moveState > 0) {
.LINE 472

	JR	L_211
L_160:
	XOR	A,A
	CP	A,(HL)
	JR	NC,L_211
;  473					playerState = 0;
.LINE 473

	XOR	A,A
	LD	(_playerState),A
;  474				}
;  475			}
L_211:
.LINE 475

;  476	
;  477			if (moveState == 0) {
.LINE 477

	LD	A,(_moveState)
	OR	A,A
	JR	NZ,L_238
;  478				currentRun = !currentRun;
.LINE 478

	LD	A,(_currentRun)
	OR	A,A
	JR	NZ,L_171
	LD	BC,1
	LD	(IX+-93),BC
	JR	L_172
L_171:
	LD	BC,0
	LD	(IX+-93),BC
L_172:
	LD	A,(IX+-93)
	LD	(_currentRun),A
;  479				playerState = 0;
.LINE 479

	XOR	A,A
	LD	(_playerState),A
;  480				/* Arrive At Tile*/
;  481				tx = currentSave.playerX / 16;
.LINE 481

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  482				ty = currentSave.playerY / 16;
.LINE 482

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  483				nextTile = GetTypeMapData(tx, ty, tilemap.width);
.LINE 483

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	LD	(_nextTile),A
;  484				if (nextTile >= 0x10 && nextTile < 0x20) {
.LINE 484

	CP	A,16
	JR	C,L_209
	LD	A,(_nextTile)
	CP	A,32
	JR	NC,L_209
;  485					/* Grass */
;  486					if ((rand() % 100) < battlechance) {
.LINE 486

	CALL	_rand
	LD	BC,100
	CALL	__irems
	LD	BC,10
	OR	A,A
	SBC	HL,BC
	JP	P,L_238
;  487						uint8_t wildSpawn;
;  488						map_Draw();
.LINE 488

	CALL	_map_Draw
;  489						gfx_SwapDraw();
.LINE 489

	CALL	_gfx_SwapDraw
;  490						wildSpawn = rand() % 5;
.LINE 490

	CALL	_rand
	LD	BC,5
	CALL	__irems
	LD	(IX+-63),L
;  491						battle_SpawnWild(currentZoneData.spawnids[wildSpawn][nextTile -16], currentZoneData.spawnminlevels[wildSpawn][nextTile - 16], currentZoneData.spawnmaxlevels[wildSpawn][nextTile - 16]);
.LINE 491

	LD	A,(IX+-63)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,HL
	LD	A,(_nextTile)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-16
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-47),HL
	POP	IY
	LD	BC,_currentZoneData+160
	LD	HL,DE
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-44),HL
	LD	HL,(IY+-47)
	LD	BC,(IY+-44)
	POP	IY
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData+80
	LD	HL,DE
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-44),HL
	LD	HL,(IY+-47)
	LD	BC,(IY+-44)
	POP	IY
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData
	LD	HL,DE
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-44),HL
	LD	HL,(IY+-47)
	LD	BC,(IY+-44)
	POP	IY
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_battle_SpawnWild
	POP	BC
	POP	BC
	POP	BC
;  492						return 1;
.LINE 492

	LD	HL,1
	JR	L_243
;  493					}
;  494				}
;  495				else if (nextTile != 0) {
L_209:
.LINE 495

	LD	A,(_nextTile)
	OR	A,A
	JR	Z,L_238
;  496					map_Draw();
.LINE 496

	CALL	_map_Draw
;  497					gfx_SwapDraw();
.LINE 497

	CALL	_gfx_SwapDraw
;  498					if (nextTile == 0x01) {
.LINE 498

	LD	A,(_nextTile)
	CP	A,1
	JR	NZ,L_206
;  499						ExitBuilding();
.LINE 499

	CALL	_ExitBuilding
;  500					}
;  501					else if (nextTile == 0x02) {
.LINE 501

	JR	L_238
L_206:
	LD	A,(_nextTile)
	CP	A,2
	JR	NZ,L_204
;  502						if (((currentSave.indoors && !currentSave.defeatedTrainersIndoors[currentSave.currentZone][15]) || (!currentSave.indoors && !currentSave.defeatedTrainers[currentSave.currentZone][15])) && currentZoneData.trainerdir[15] != 0) {
.LINE 502

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_178
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_currentSave+1684
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	OR	A,A
	JR	Z,L_179
L_178:
	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_238
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_currentSave+1428
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	OR	A,A
	JR	NZ,L_238
L_179:
	LD	BC,_currentZoneData+576
	LD	(IX+-3),BC
	LD	IY,(IX+-3)
	LD	A,(IY+15)
	OR	A,A
	JR	Z,L_238
;  503							if (currentZoneData.trainerx[15] == 255) {
.LINE 503

	LD	HL,_currentZoneData+559
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,255
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_189
;  504								int walkState, xloc, yloc;
;  505	
;  506								xloc = (16 * (tx - (11 * ((currentZoneData.trainerdir[15] == 1) - (currentZoneData.trainerdir[15] == 2))))) - screenX - 8;
.LINE 506

	LD	BC,(IX+-3)
	LD	(IX+-87),BC
	LD	IY,(IX+-3)
	LEA	BC,IY+15
	LEA	IY,IX+-128
	LD	(IY+-29),BC
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LD	(IY+-77),HL
	POP	IY
	LEA	IY,IX+-128
	LD	HL,(IY+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,1
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__122
	LD	B,1
	JR	L__123
L__122:
	LD	B,0
L__123:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LEA	IY,IX+-128
	LD	HL,(IY+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__125
	LD	B,1
	JR	L__126
L__125:
	LD	B,0
L__126:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	LD	A,11
	CALL	__imul_b
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-74),HL
	LD	BC,(IY+-77)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-74)
	POP	IY
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_screenX)
	OR	A,A
	SBC	HL,BC
	LD	IY,HL
	LEA	BC,IY+-8
	LD	(IX+-72),BC
;  507								yloc = (16 * (ty - (7 * ((currentZoneData.trainerdir[15] == 3) - (currentZoneData.trainerdir[15] == 4))))) - screenY + 1;
.LINE 507

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-71),HL
	POP	IY
	LEA	IY,IX+-128
	LD	HL,(IY+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,3
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__128
	LD	B,1
	JR	L__129
L__128:
	LD	B,0
L__129:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LEA	IY,IX+-128
	LD	HL,(IY+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__131
	LD	B,1
	JR	L__132
L__131:
	LD	B,0
L__132:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	LD	A,7
	CALL	__imul_b
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-68),HL
	LD	BC,(IY+-71)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-68)
	POP	IY
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_screenY)
	OR	A,A
	SBC	HL,BC
	INC	HL
	LD	(IX+-75),HL
;  508	
;  509								if (currentZoneData.trainerdir[15] <= 2) {
.LINE 509

	LEA	IY,IX+-128
	LD	HL,(IY+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,2
	OR	A,A
	SBC	HL,BC
	JP	M,L_181
;  510									walkState = 10 * 16;
.LINE 510

	LD	BC,160
	LD	(IX+-21),BC
;  511								}
;  512								else {
.LINE 512

	JR	L_183
L_181:
;  513									walkState = 6 * 16;
.LINE 513

	LD	BC,96
	LD	(IX+-21),BC
;  514								}
;  515								while (walkState > 0)
.LINE 515

	JR	L_183
L_184:
;  516								{
;  517									map_Draw();
.LINE 517

	CALL	_map_Draw
;  518									xloc += ((currentZoneData.trainerdir[15] == 1) - (currentZoneData.trainerdir[15] == 2));
.LINE 518

	LD	BC,(IX+-3)
	LD	(IX+-87),BC
	LD	IY,(IX+-3)
	LEA	BC,IY+15
	LEA	IY,IX+-128
	LD	(IY+-32),BC
	LD	HL,(IY+-32)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__135
	LD	B,1
	JR	L__136
L__135:
	LD	B,0
L__136:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LEA	IY,IX+-128
	LD	HL,(IY+-32)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__138
	LD	B,1
	JR	L__139
L__138:
	LD	B,0
L__139:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	LD	BC,(IX+-72)
	ADD	HL,BC
	LD	(IX+-72),HL
;  519									yloc += ((currentZoneData.trainerdir[15] == 3) - (currentZoneData.trainerdir[15] == 4));
.LINE 519

	LEA	IY,IX+-128
	LD	HL,(IY+-32)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,3
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__141
	LD	B,1
	JR	L__142
L__141:
	LD	B,0
L__142:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LEA	IY,IX+-128
	LD	HL,(IY+-32)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__144
	LD	B,1
	JR	L__145
L__144:
	LD	B,0
L__145:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	LD	BC,(IX+-75)
	ADD	HL,BC
	LD	(IX+-75),HL
;  520	
;  521									gfx_TransparentSprite((gfx_sprite_t*)PKMNSD7[(currentZoneData.trainerskin[15] * 12) + ((currentZoneData.trainerdir[15] - 1) * 3) + ((walkState % 16) / 4 == 1) + 2 * ((walkState % 16) / 4 == 3)], xloc, yloc);
.LINE 521

	LD	BC,16
	LD	HL,(IX+-21)
	CALL	__irems
	LD	BC,4
	CALL	__idivs
	LD	BC,HL
	LD	DE,(IX+-75)
	PUSH	DE
	LD	DE,(IX+-72)
	PUSH	DE
	LD	HL,_currentZoneData+607
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,12
	CALL	__imul_b
	LD	DE,HL
	LD	IY,(IX+-3)
	LEA	HL,IY+15
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-56),DE
	LD	(IY+-59),HL	; unspill
	LD	DE,(IY+-56)
	POP	IY
	ADD	HL,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-56),DE
	LD	DE,(IY+-59)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-56)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-62),BC
	LD	(IY+-65),HL	; unspill
	LD	BC,(IY+-62)
	POP	IY
	LD	DE,1
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__147
	LD	D,1
	JR	L__148
L__147:
	LD	D,0
L__148:
	LD	A,D
	SEXT	HL
	LD	L,D
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-62),BC
	LD	BC,(IY+-65)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-62)
	POP	IY
	LD	DE,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-50),BC
	POP	IY
	LD	BC,3
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-53),BC	; unspill
	LD	BC,(IY+-50)
	POP	IY
	LD	HL,BC
	OR	A,A
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-53)
	POP	IY
	SBC	HL,BC
	JR	NZ,L__150
	LD	B,1
	JR	L__151
L__150:
	LD	B,0
L__151:
	LD	A,B
	SEXT	HL
	LD	L,B
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD7
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  522	
;  523									gfx_SwapDraw();
.LINE 523

	CALL	_gfx_SwapDraw
;  524	
;  525									walkState--;
.LINE 525

	LD	BC,(IX+-21)
	DEC	BC
	LD	(IX+-21),BC
;  526								}
L_183:
.LINE 526

	LD	BC,(IX+-21)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_184
;  527								currentZoneData.trainerx[15] = tx + ((0 - currentZoneData.trainerdir[15] == 1) + (currentZoneData.trainerdir[15] == 2));
.LINE 527

	LD	BC,(IX+-87)
	LEA	IY,IX+-128
	LD	(IY+-41),BC
	LD	HL,-169
	LD	BC,IX
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+15
	LEA	IY,IX+-128
	LD	(IY+-38),BC
	LD	HL,(IY+-38)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	CALL	__ineg
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__154
	LD	C,1
	JR	L__155
L__154:
	LD	C,0
L__155:
	LEA	IY,IX+-128
	LD	HL,(IY+-38)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,2
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__157
	LD	B,1
	JR	L__158
L__157:
	LD	B,0
L__158:
	LD	A,C
	ADD	A,B
	LD	HL,_currentZoneData+559
	LD	BC,(_tx)
	ADD	A,C
	LD	(HL),A
;  528								currentZoneData.trainery[15] = ty + ((0 - currentZoneData.trainerdir[15] == 3) + (currentZoneData.trainerdir[15] == 4));
.LINE 528

	LD	HL,-169
	LD	BC,IX
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+15
	LEA	IY,IX+-128
	LD	(IY+-35),BC
	LD	HL,(IY+-35)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	CALL	__ineg
	LD	BC,3
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__160
	LD	B,1
	JR	L__161
L__160:
	LD	B,0
L__161:
	LEA	IY,IX+-128
	LD	HL,(IY+-35)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,4
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__163
	LD	C,1
	JR	L__164
L__163:
	LD	C,0
L__164:
	LD	A,B
	ADD	A,C
	LD	HL,_currentZoneData+575
	LD	BC,(_ty)
	ADD	A,C
	LD	(HL),A
;  529	
;  530	
;  531							}
L_189:
.LINE 531

;  532							if (FightTrainer(15)) {
.LINE 532

	LD	BC,15
	PUSH	BC
	CALL	_FightTrainer
	POP	BC
	OR	A,A
	JR	Z,L_238
;  533								currentZoneData.trainerx[15] = 255;
.LINE 533

	LD	HL,_currentZoneData+559
	LD	A,255
	LD	(HL),A
;  534								currentZoneData.trainery[15] = 255;
.LINE 534

	LD	HL,_currentZoneData+575
	LD	(HL),A
;  535								return 1;
.LINE 535

	LD	HL,1
	JR	L_243
;  536							}
;  537						}
;  538					}
;  539					else if (currentSave.surfing && !(nextTile >= 0x1A && nextTile < 0x20)) {
L_204:
.LINE 539

	LD	A,(_currentSave+1237)
	OR	A,A
	JR	Z,L_202
	LD	A,(_nextTile)
	CP	A,26
	JR	C,L_201
	LD	A,(_nextTile)
	CP	A,32
	JR	C,L_202
L_201:
;  540						currentSave.surfing = false;
.LINE 540

	XOR	A,A
	LD	(_currentSave+1237),A
;  541					}
;  542					else if (nextTile >= 0x20 && nextTile < 0x30) {
.LINE 542

	JR	L_238
L_202:
	LD	A,(_nextTile)
	CP	A,32
	JR	C,L_200
	LD	A,(_nextTile)
	CP	A,48
	JR	NC,L_200
;  543						ExitZone(nextTile - 32);
.LINE 543

	LD	A,(_nextTile)
	SUB	A,32
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_ExitZone
	POP	BC
;  544					}
;  545					else if (nextTile >= 0x30 && nextTile < 0x40) {
.LINE 545

	JR	L_238
L_200:
	LD	A,(_nextTile)
	CP	A,48
	JR	C,L_198
	LD	A,(_nextTile)
	CP	A,64
	JR	NC,L_198
;  546						if (FightTrainer(nextTile - 48)) {
.LINE 546

	LD	A,(_nextTile)
	SUB	A,48
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_FightTrainer
	POP	BC
	OR	A,A
	JR	Z,L_238
;  547							return 1;
.LINE 547

	LD	HL,1
	JR	L_243
;  548						}
;  549					}
;  550					else if (nextTile == 0x48) {
L_198:
.LINE 550

	LD	A,(_nextTile)
	CP	A,72
	JR	NZ,L_238
;  551						moveState = 8;
.LINE 551

	LD	A,8
	LD	(_moveState),A
;  552					}
;  553				}
;  554			}
;  555		}
;  556	
;  557		/* If not moving */
;  558		else {
.LINE 558

	JR	L_238
L_236:
;  559			if (kb_Data[7] & kb_Right) {
.LINE 559

	LD	A,(16056350)
	AND	A,4
	JR	Z,L_218
;  560				moveDir = 1;
.LINE 560

	LD	A,1
	LD	(_moveDir),A
;  561			}
;  562			else if (kb_Data[7] & kb_Left) {
.LINE 562

	JR	L_227
L_218:
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_216
;  563				moveDir = 2;
.LINE 563

	LD	A,2
	LD	(_moveDir),A
;  564			}
;  565			else if (kb_Data[7] & kb_Down) {
.LINE 565

	JR	L_227
L_216:
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_214
;  566				moveDir = 3;
.LINE 566

	LD	A,3
	LD	(_moveDir),A
;  567	
;  568			}
;  569			else if (kb_Data[7] & kb_Up) {
.LINE 569

	JR	L_227
L_214:
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_227
;  570				moveDir = 4;
.LINE 570

	LD	A,4
	LD	(_moveDir),A
;  571			}
L_227:
.LINE 571

;  572			
;  573			if (kb_Data[7]) {
.LINE 573

	LD	A,(16056350)
	OR	A,A
	JR	Z,L_234
;  574				if (GetNextTile(tx, ty, tilemap.width) < 64 && !(!currentSave.surfing && GetNextTile(tx, ty, tilemap.width) >= 0x1A && GetNextTile(tx, ty, tilemap.width) < 0x20)) {
.LINE 574

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,64
	OR	A,A
	SBC	HL,BC
	JP	P,L_225
	LD	A,(_currentSave+1237)
	OR	A,A
	JR	NZ,L_224
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,26
	OR	A,A
	SBC	HL,BC
	JP	M,L_224
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,32
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_225
L_224:
;  575					moveState = 8;
.LINE 575

	LD	A,8
	LD	(_moveState),A
;  576				}
;  577				else if (GetNextTile(tx, ty, tilemap.width) == 0x48 && moveDir == 3) {
.LINE 577

	JR	L_234
L_225:
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,72
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_234
	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_234
;  578					moveState = 8;
.LINE 578

	LD	A,8
	LD	(_moveState),A
;  579					jumpState = 16;
.LINE 579

	LD	A,16
	LD	(_jumpState),A
;  580				}
;  581			}
L_234:
.LINE 581

;  582			running = ((kb_Data[2] & kb_Alpha) && moveState > 0 && !currentSave.surfing);
.LINE 582

	LD	A,(16056340)
	AND	A,128
	JR	Z,L_231
	XOR	A,A
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_231
	LD	A,(_currentSave+1237)
	OR	A,A
	JR	NZ,L_231
	LD	BC,1
	LD	(IX+-96),BC
	JR	L_232
L_231:
	LD	BC,0
	LD	(IX+-96),BC
L_232:
	LD	A,(IX+-96)
	LD	(_running),A
;  583		}
L_238:
.LINE 583

;  584	
;  585		map_Draw();
.LINE 585

	CALL	_map_Draw
;  586		playerState = 0;
.LINE 586

	XOR	A,A
	LD	(_playerState),A
;  587	
;  588		gfx_SwapDraw();
.LINE 588

	CALL	_gfx_SwapDraw
;  589	
;  590		if (npcToFight != 16) {
.LINE 590

	LD	BC,16
	LD	HL,(_npcToFight)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_242
;  591			if (FightTrainer(npcToFight)) {
.LINE 591

	LD	A,(_npcToFight)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_FightTrainer
	POP	BC
	OR	A,A
	JR	Z,L_240
;  592				npcToFight = 16;
.LINE 592

	LD	BC,16
	LD	(_npcToFight),BC
;  593				return 1;
.LINE 593

	LD	HL,1
	JR	L_243
;  594			}
L_240:
.LINE 594

;  595			npcToFight = 16;
.LINE 595

	LD	BC,16
	LD	(_npcToFight),BC
;  596		}
L_242:
.LINE 596

;  597	
;  598		return 0;
.LINE 598

	OR	A,A
	SBC	HL,HL
;  599	}
L_243:
.LINE 599

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Loop ***************************
;Name                         Addr/Register   Size   Type
;_npcToFight                         STATIC      3   variable
;_ExitZone                           IMPORT  -----   function
;_PKMNSD7                            IMPORT    132   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_screenY                            STATIC      4   variable
;_screenX                            STATIC      4   variable
;_ExitBuilding                       IMPORT  -----   function
;_battle_SpawnWild                   IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_map_Draw                           IMPORT  -----   function
;_rand                               IMPORT  -----   function
;_GetTypeMapData                     IMPORT  -----   function
;_currentRun                         STATIC      1   variable
;_playerState                        STATIC      1   variable
;_running                            STATIC      1   variable
;_jumpState                          STATIC      1   variable
;_moveState                          STATIC      1   variable
;_ShiftTile                          IMPORT  -----   function
;_str1                               STATIC     20   variable
;_items_IndexToName                  IMPORT  -----   function
;_currentZoneData                    STATIC    688   variable
;_ReadText                           IMPORT  -----   function
;_FightTrainer                       IMPORT  -----   function
;_currentTileMap                     STATIC   1920   variable
;_stats_NewCharacter                 IMPORT  -----   function
;_text_AskQuestion2                  IMPORT  -----   function
;_currentTypeMap                     STATIC   1920   variable
;_EnterDoor                          IMPORT  -----   function
;_OpenBox                            IMPORT  -----   function
;_menu_ItemShop                      IMPORT  -----   function
;_shop_compressed                    IMPORT     98   variable
;_HealParty                          IMPORT  -----   function
;_moveDir                            STATIC      1   variable
;_text_Display                       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_data_pokemon                       IMPORT  unknown variable
;_sprintf                            IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_nextTile                           STATIC      1   variable
;_tx                                 STATIC      1   variable
;_ty                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_GetNextTile                        IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_map_LoadPokeballs                  IMPORT  -----   function
;_map_SetupGfx                       IMPORT  -----   function
;_free                               IMPORT  -----   function
;_menu_Menu                          IMPORT  -----   function
;_gfx_Sprite                         IMPORT  -----   function
;_PKMNSD4                            IMPORT     21   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_map_End                            IMPORT  -----   function
;_gfx_Blit                           IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;menuReturn                          IX-102      3   variable
;G_10                                 IX-99      3   variable
;temp233                              IX-96      3   variable
;temp173                              IX-93      3   variable
;temp106                              IX-90      3   variable
;G_14                                 IX-87      3   variable
;temp98                               IX-84      3   variable
;G_3                                  IX-81      3   variable
;temp94                               IX-78      3   variable
;yloc                                 IX-75      3   variable
;xloc                                 IX-72      3   variable
;shopSpriteOriginal                   IX-69      3   variable
;G_11                                 IX-66      3   variable
;wildSpawn                            IX-63      1   variable
;G_7                                  IX-62      3   variable
;pauseMenuSprite                      IX-59      3   variable
;G_4                                  IX-56      3   variable
;tempTile                             IX-53      3   variable
;G_0                                  IX-50      3   variable
;hasUser                              IX-47      1   variable
;awaitSecond                          IX-46      1   variable
;G_9                                  IX-45      3   variable
;G_6                                  IX-42      3   variable
;hasUser                              IX-39      1   variable
;tilePos                              IX-38      3   variable
;hasUser                              IX-35      1   variable
;moveIndex                            IX-34      3   variable
;moveIndex                            IX-31      3   variable
;moveIndex                            IX-28      3   variable
;starter                              IX-25      1   variable
;G_2                                  IX-24      3   variable
;walkState                            IX-21      3   variable
;partyIndex                           IX-18      3   variable
;partyIndex                           IX-15      3   variable
;oldTile                              IX-12      3   variable
;partyIndex                            IX-9      3   variable
;newTile                               IX-6      3   variable
;G_12                                  IX-3      3   variable


; Stack Frame Size: 253 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "map_Loop",599,"_map_Loop"
	SEGMENT STRSECT
L__12:
	DB	"%s used Surf"
	DB	0
L__20:
	DB	"A Pokemon with Surf could bring you across this water"
	DB	0
L__40:
	DB	"Choose Squirtle as your starter?"
	DB	0
L__42:
	DB	"Choose Bulbasaur as your starter?"
	DB	0
L__44:
	DB	"Choose Charmander as your starter?"
	DB	0
L__45:
	DB	"No"
	DB	0
L__46:
	DB	"Yes"
	DB	0
L__48:
	DB	"You already chose a Pokemon"
	DB	0
L__55:
	DB	"%s used Strength"
	DB	0
L__61:
	DB	"This boulder could be moved by a strong Pokemon"
	DB	0
L__64:
	DB	"%s used Cut"
	DB	0
L__72:
	DB	"This tree could be cut down"
	DB	0
L__86:
	DB	"Found the TM for %s"
	DB	0
L__87:
	DB	"Found a %s"
	DB	0
	SEGMENT CODE
;  600	void map_End(void) {
_map_End:
.DEFINE "_map_End"

.VALUE _map_End

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_End",600,"_map_End"

.LINE 600

.DEFINE "tileIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  601		int tileIndex = 0;
;  602		for (tileIndex = 0; tileIndex < 128; tileIndex++) {
.LINE 602

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_247
L_245:
;  603			free(mapTiles[tileIndex]);
.LINE 603

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_mapTiles
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  604		}
L_247:
.LINE 604

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_245
;  605		for (tileIndex = 0; tileIndex < 3; tileIndex++) {
.LINE 605

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_251
L_249:
;  606			free(pokeballSprites[tileIndex]);
.LINE 606

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_pokeballSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  607		}
L_251:
.LINE 607

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_249
;  608		
;  609	}
.LINE 609

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_End ***************************
;Name                         Addr/Register   Size   Type
;_pokeballSprites                    STATIC      9   variable
;_mapTiles                           STATIC    384   variable
;_free                               IMPORT  -----   function
;tileIndex                             IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "map_End",609,"_map_End"
;  610	
;  611	void map_Draw(void) {
_map_Draw:
.DEFINE "_map_Draw"

.VALUE _map_Draw

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_Draw",611,"_map_Draw"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  612		/* Move Screen and Redraw */
;  613		if (currentSave.indoors) {
.LINE 613

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_255
;  614			screenX = 0;
.LINE 614

	LD	BC,0
	XOR	A,A
	LD	(_screenX),BC
	LD	(_screenX+3),A
;  615			screenY = 0;
.LINE 615

	XOR	A,A
	LD	(_screenY),BC
	LD	(_screenY+3),A
;  616	
;  617			gfx_Tilemap(&tilemap, screenX, screenY);
.LINE 617

	PUSH	BC
	PUSH	BC
	LD	BC,_tilemap
	PUSH	BC
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;  618	
;  619			DrawPlayer();
.LINE 619

	CALL	_DrawPlayer
;  620		}
;  621		else {
.LINE 621

	JR	L_256
L_255:
;  622			/* Animate Water Every 20 Frames */
;  623			/*if (data_tileSets[currentSave.currentZone] == 0) {
;  624				if (currentWater == 20) {
;  625					memcpy(mapTiles[29], animatedwater1, 258);
;  626				}
;  627				if (currentWater == 0) {
;  628					memcpy(mapTiles[29], animatedwater2, 258);
;  629				}
;  630				currentWater++;
;  631				if (currentWater == 40) {
;  632					currentWater = 0;
;  633				}
;  634			}*/
;  635	
;  636			screenX = Clamp(currentSave.playerX - 160, 0, MAX_X);
.LINE 636

	LD	BC,432
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,HL
	CALL	__itol
	LD	E,A
	LD	HL,BC
	LD	BC,16777056
	LD	A,255
	CALL	__ladd
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_Clamp
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(_screenX),HL
	LD	A,E
	LD	(_screenX+3),A
;  637			screenY = Clamp(currentSave.playerY - 112, 0, MAX_Y);
.LINE 637

	LD	BC,400
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,HL
	CALL	__itol
	LD	E,A
	LD	HL,BC
	LD	BC,16777104
	LD	A,255
	CALL	__ladd
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_Clamp
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(_screenY),HL
	LD	A,E
	LD	(_screenY+3),A
;  638	
;  639			gfx_Tilemap(&tilemap, screenX, screenY);
.LINE 639

	LD	BC,(_screenY)
	PUSH	BC
	LD	BC,(_screenX)
	PUSH	BC
	LD	BC,_tilemap
	PUSH	BC
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;  640	
;  641			DrawPlayer();
.LINE 641

	CALL	_DrawPlayer
;  642			
;  643	
;  644		}
L_256:
.LINE 644

;  645		ProcessNpcs();
.LINE 645

	CALL	_ProcessNpcs
;  646		map_DrawInformationBar();
.LINE 646

	CALL	_map_DrawInformationBar
;  647	}
.LINE 647

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Draw ***************************
;Name                         Addr/Register   Size   Type
;_map_DrawInformationBar             IMPORT  -----   function
;_ProcessNpcs                        IMPORT  -----   function
;_Clamp                              IMPORT  -----   function
;_DrawPlayer                         IMPORT  -----   function
;_tilemap                            STATIC     18   variable
;_gfx_Tilemap                        IMPORT  -----   function
;_screenY                            STATIC      4   variable
;_screenX                            STATIC      4   variable
;_currentSave                        IMPORT   4140   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "map_Draw",647,"_map_Draw"
;  648	void DrawPlayer(void) {
_DrawPlayer:
.DEFINE "_DrawPlayer"

.VALUE _DrawPlayer

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "DrawPlayer",648,"_DrawPlayer"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-15
	LD	SP,HL
;  649		GrassAnimation(0);
.LINE 649

	LD	BC,0
	PUSH	BC
	CALL	_GrassAnimation
	POP	BC
;  650	
;  651		gfx_TransparentSprite_NoClip((gfx_sprite_t*)PKMNSD8[(24 * currentSave.surfing) + (12 * running) + (moveDir - 1) * (3 - currentSave.surfing) + playerState], currentSave.playerX - screenX - 8, currentSave.playerY - screenY + 4 - jumpHeights[16-jumpState]);
.LINE 651

	LD	A,(_currentSave+4)
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,4
	LD	B,A
	LD	A,(_jumpState)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,16
	OR	A,A
	SBC	HL,DE
	LD	DE,_jumpHeights
	ADD	HL,DE
	LD	A,B
	SUB	A,(HL)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	IY,(_screenX)
	LEA	BC,IY+8
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	A,(_currentSave+1237)
	UEXT	HL
	LD	L,A
	LD	A,24
	CALL	__imul_b
	LD	BC,HL
	LD	A,(_running)
	UEXT	HL
	LD	L,A
	LD	A,12
	CALL	__imul_b
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_currentSave+1237)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,3
	OR	A,A
	SBC	HL,BC
	LD	(IX+-15),HL
	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	DEC	BC
	LD	HL,(IX+-15)
	CALL	__imuls
	ADD	HL,DE
	LD	BC,HL
	LD	A,(_playerState)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD8
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  652	
;  653		/* Draw overlay if player is in grass */
;  654		if (currentTileMap[tx + (moveDir == 1) - (moveDir == 2) + (ty + (moveDir == 3) - (moveDir == 4)) * tilemap.width] == 2 && !currentSave.indoors) {
.LINE 654

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	(IX+-12),HL
	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L__198
	LD	B,1
	JR	L__199
L__198:
	LD	B,0
L__199:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L__201
	LD	B,1
	JR	L__202
L__201:
	LD	B,0
L__202:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	LD	BC,HL
	LD	HL,(IX+-12)
	CALL	__imuls
	LD	(IX+-9),HL	; spill
	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L__204
	LD	B,1
	JR	L__205
L__204:
	LD	B,0
L__205:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L__207
	LD	B,1
	JR	L__208
L__207:
	LD	B,0
L__208:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	LD	DE,(IX+-9)	; unspill
	ADD	HL,DE
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_281
	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_281
;  655			/* Always draw grass overlay if moving sideways*/
;  656			if (moveDir <= 2 && moveState > 0) {
.LINE 656

	LD	A,2
	LD	HL,_moveDir
	CP	A,(HL)
	JR	C,L_276
	XOR	A,A
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_276
;  657				gfx_TransparentSprite_NoClip(grassoverlay1, (tx + (moveDir == 1) - (moveDir == 2)) * 16 - screenX - 8, (ty + (moveDir == 3) - (moveDir == 4)) * 16 - screenY + 18);
.LINE 657

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L__214
	LD	A,1
	JR	L__215
L__214:
	XOR	A,A
L__215:
	LD	BC,(_ty)
	ADD	A,C
	LD	C,A
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L__217
	LD	B,1
	JR	L__218
L__217:
	LD	B,0
L__218:
	LD	A,C
	SUB	A,B
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,18
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L__220
	LD	B,1
	JR	L__221
L__220:
L__221:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L__223
	LD	B,1
	JR	L__224
L__223:
	LD	B,0
L__224:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(_screenX)
	LEA	BC,IY+8
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay1_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  658			}
L_276:
.LINE 658

;  659			if ((moveDir == 1 && moveState == 1 + running) || (moveDir == 2 && moveState == 1 + running) || (moveDir == 3 && moveState == 3 + running) || (moveDir == 4 && moveState == 1 + running)) {
.LINE 659

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_263
	LD	A,(_running)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	INC	BC
	LD	A,(_moveState)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	Z,L_275
L_263:
	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_265
	LD	A,(_running)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	INC	BC
	LD	A,(_moveState)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	Z,L_275
L_265:
	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_267
	LD	A,(_running)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+3
	LD	A,(_moveState)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	Z,L_275
L_267:
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_281
	LD	A,(_running)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	INC	BC
	LD	A,(_moveState)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	NZ,L_281
L_275:
;  660				if (grassAnimNext) {
.LINE 660

	LD	A,(_grassAnimNext)
	OR	A,A
	JR	Z,L_269
;  661					grassAnimState1 = 10;
.LINE 661

	LD	BC,10
	LD	(_grassAnimState1),BC
;  662					grassAnimX1 = (tx + (moveDir == 1) - (moveDir == 2)) * 16;
.LINE 662

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L__235
	LD	B,1
	JR	L__236
L__235:
	LD	B,0
L__236:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L__238
	LD	B,1
	JR	L__239
L__238:
	LD	B,0
L__239:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_grassAnimX1),HL
;  663					grassAnimY1 = (ty + (moveDir == 3) - (moveDir == 4)) * 16;
.LINE 663

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L__241
	LD	B,1
	JR	L__242
L__241:
	LD	B,0
L__242:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L__244
	LD	B,1
	JR	L__245
L__244:
	LD	B,0
L__245:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_grassAnimY1),HL
;  664				}
;  665				else {
.LINE 665

	JR	L_274
L_269:
;  666					grassAnimState2 = 10;
.LINE 666

	LD	BC,10
	LD	(_grassAnimState2),BC
;  667					grassAnimX2 = (tx + (moveDir == 1) - (moveDir == 2)) * 16;
.LINE 667

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L__247
	LD	B,1
	JR	L__248
L__247:
	LD	B,0
L__248:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L__250
	LD	B,1
	JR	L__251
L__250:
	LD	B,0
L__251:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_grassAnimX2),HL
;  668					grassAnimY2 = (ty + (moveDir == 3) - (moveDir == 4)) * 16;
.LINE 668

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L__253
	LD	B,1
	JR	L__254
L__253:
	LD	B,0
L__254:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L__256
	LD	B,1
	JR	L__257
L__256:
	LD	B,0
L__257:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(_grassAnimY2),HL
;  669				}
L_274:
.LINE 669

;  670				grassAnimNext = !grassAnimNext;
.LINE 670

	LD	A,(_grassAnimNext)
	OR	A,A
	JR	NZ,L_271
	LD	BC,1
	LD	(IX+-3),BC
	JR	L_272
L_271:
	LD	BC,0
	LD	(IX+-3),BC
L_272:
	LD	A,(IX+-3)
	LD	(_grassAnimNext),A
;  671			}
;  672		}
L_281:
.LINE 672

;  673		if (!(moveDir == 3 && moveState != 0) && currentTileMap[tx + ty * tilemap.width] == 2) {
.LINE 673

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_279
	LD	A,(_moveState)
	OR	A,A
	JR	NZ,L_282
L_279:
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,DE
	CALL	__imuls
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_282
;  674			gfx_TransparentSprite_NoClip(grassoverlay1, tx * 16 - screenX - 8, ty * 16 - screenY + 18);
.LINE 674

	LD	A,(_ty)
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,18
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(_screenX)
	LEA	BC,IY+8
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay1_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  675		}
L_282:
.LINE 675

;  676	
;  677		GrassAnimation(1);
.LINE 677

	LD	BC,1
	PUSH	BC
	CALL	_GrassAnimation
	POP	BC
;  678	}
.LINE 678

	LD	SP,IX
	POP	IX
	RET	


;**************************** _DrawPlayer ***************************
;Name                         Addr/Register   Size   Type
;_grassAnimY2                        STATIC      3   variable
;_grassAnimX2                        STATIC      3   variable
;_grassAnimState2                    STATIC      3   variable
;_grassAnimY1                        STATIC      3   variable
;_grassAnimX1                        STATIC      3   variable
;_grassAnimState1                    STATIC      3   variable
;_grassAnimNext                      STATIC      1   variable
;_grassoverlay1_data                 IMPORT     98   variable
;_moveState                          STATIC      1   variable
;_tx                                 STATIC      1   variable
;_ty                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_currentTileMap                     STATIC   1920   variable
;_playerState                        STATIC      1   variable
;_moveDir                            STATIC      1   variable
;_running                            STATIC      1   variable
;_PKMNSD8                            IMPORT     96   variable
;_screenX                            STATIC      4   variable
;_jumpState                          STATIC      1   variable
;_jumpHeights                        STATIC     17   variable
;_screenY                            STATIC      4   variable
;_currentSave                        IMPORT   4140   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_GrassAnimation                     IMPORT  -----   function
;temp273                               IX-3      3   variable


; Stack Frame Size: 21 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "DrawPlayer",678,"_DrawPlayer"
;  679	void GrassAnimation(bool part) {
_GrassAnimation:
.DEFINE "_GrassAnimation"

.VALUE _GrassAnimation

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "GrassAnimation",679,"_GrassAnimation"

.LINE 679

.DEFINE "part"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
;  680		if (grassAnimState1 > 0) {
.LINE 680

	LD	BC,(_grassAnimState1)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_312
;  681			if (part != ((moveDir == 3 && (currentSave.playerY + 16 > grassAnimY1 + 16) && (currentSave.playerY - 4 < grassAnimY1 + 10)) || (moveDir == 4 && ty != (grassAnimY1 / 16)))) {
.LINE 681

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_287
	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	IY,HL
	LEA	BC,IY+16
	LD	IY,(_grassAnimY1)
	LEA	HL,IY+16
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_287
	LD	BC,(_currentSave+4)
	CALL	__stoiu
	DEC	HL
	DEC	HL
	DEC	HL
	DEC	HL
	LD	IY,(_grassAnimY1)
	LEA	BC,IY+10
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_288
L_287:
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_289
	LD	HL,(_grassAnimY1)
	LD	BC,16
	CALL	__idivs
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	Z,L_289
L_288:
	LD	BC,1
	LD	(IX+-3),BC
	JR	L_290
L_289:
	LD	BC,0
	LD	(IX+-3),BC
L_290:
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_296
;  682				if (grassAnimState1 > 5) {
.LINE 682

	LD	BC,(_grassAnimState1)
	LD	HL,5
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_293
;  683					gfx_TransparentSprite_NoClip(grassoverlay3, grassAnimX1 - screenX - 8, grassAnimY1 - screenY + 13);
.LINE 683

	LD	A,(_grassAnimY1)
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,13
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	IY,(_screenX)
	LEA	BC,IY+8
	LD	HL,(_grassAnimX1)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay3_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  684				}
;  685				else {
.LINE 685

	JR	L_296
L_293:
;  686					gfx_TransparentSprite_NoClip(grassoverlay2, grassAnimX1 - screenX - 8, grassAnimY1 - screenY + 14);
.LINE 686

	LD	A,(_grassAnimY1)
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,14
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	IY,(_screenX)
	LEA	BC,IY+8
	LD	HL,(_grassAnimX1)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay2_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  687				}
;  688			}
L_296:
.LINE 688

;  689			grassAnimState1--;
.LINE 689

	LD	BC,(_grassAnimState1)
	DEC	BC
	LD	(_grassAnimState1),BC
;  690		}
L_312:
.LINE 690

;  691		if (grassAnimState2 > 0) {
.LINE 691

	LD	BC,(_grassAnimState2)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_313
;  692			if (part != ((moveDir == 3 && (currentSave.playerY + 16 > grassAnimY2 + 16) && (currentSave.playerY - 4 < grassAnimY2 + 10)) || (moveDir == 4 && ty != (grassAnimY2 / 16)))) {
.LINE 692

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_301
	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	IY,HL
	LEA	BC,IY+16
	LD	IY,(_grassAnimY2)
	LEA	HL,IY+16
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_301
	LD	BC,(_currentSave+4)
	CALL	__stoiu
	DEC	HL
	DEC	HL
	DEC	HL
	DEC	HL
	LD	IY,(_grassAnimY2)
	LEA	BC,IY+10
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_302
L_301:
	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_303
	LD	HL,(_grassAnimY2)
	LD	BC,16
	CALL	__idivs
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	Z,L_303
L_302:
	LD	BC,1
	LD	(IX+-6),BC
	JR	L_304
L_303:
	LD	BC,0
	LD	(IX+-6),BC
L_304:
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_310
;  693				if (grassAnimState2 > 5) {
.LINE 693

	LD	BC,(_grassAnimState2)
	LD	HL,5
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_307
;  694					gfx_TransparentSprite_NoClip(grassoverlay3, grassAnimX2 - screenX - 8, grassAnimY2 - screenY + 13);
.LINE 694

	LD	A,(_grassAnimY2)
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,13
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	IY,(_screenX)
	LEA	BC,IY+8
	LD	HL,(_grassAnimX2)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay3_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  695				}
;  696				else {
.LINE 696

	JR	L_310
L_307:
;  697					gfx_TransparentSprite_NoClip(grassoverlay2, grassAnimX2 - screenX - 8, grassAnimY2 - screenY + 14);
.LINE 697

	LD	A,(_grassAnimY2)
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,14
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	IY,(_screenX)
	LEA	BC,IY+8
	LD	HL,(_grassAnimX2)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay2_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  698				}
;  699			}
L_310:
.LINE 699

;  700			grassAnimState2--;
.LINE 700

	LD	BC,(_grassAnimState2)
	DEC	BC
	LD	(_grassAnimState2),BC
;  701		}
;  702	}
L_313:
.LINE 702

	LD	SP,IX
	POP	IX
	RET	


;**************************** _GrassAnimation ***************************
;Name                         Addr/Register   Size   Type
;_grassAnimX2                        STATIC      3   variable
;_grassAnimY2                        STATIC      3   variable
;_grassAnimState2                    STATIC      3   variable
;_grassoverlay2_data                 IMPORT    162   variable
;_grassoverlay3_data                 IMPORT    178   variable
;_screenX                            STATIC      4   variable
;_grassAnimX1                        STATIC      3   variable
;_screenY                            STATIC      4   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_grassAnimY1                        STATIC      3   variable
;_currentSave                        IMPORT   4140   variable
;_moveDir                            STATIC      1   variable
;_grassAnimState1                    STATIC      3   variable
;temp305                               IX-6      3   variable
;temp291                               IX-3      3   variable
;part                                  IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "GrassAnimation",702,"_GrassAnimation"
;  703	
;  704	
;  705	void HealParty(void) {
_HealParty:
.DEFINE "_HealParty"

.VALUE _HealParty

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HealParty",705,"_HealParty"

.LINE 705

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-39
	LD	SP,HL
;  706		int pokemonIndex, moveIndex;
;  707		for (pokemonIndex = 0; pokemonIndex < 6; pokemonIndex++) {
.LINE 707

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_321
L_319:
;  708			currentSave.party[pokemonIndex].currenthealth = stats_CalculateStats(currentSave.party[pokemonIndex]).health;
.LINE 708

	LD	BC,_currentSave+10
	LD	(IX+-6),BC
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-39),HL
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-12),HL
	LD	BC,(IX+-6)
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-33
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LD	BC,(IX+-39)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IY)
	LD	IY,HL
	LD	(IY+13),C
	LD	(IY+14),B
;  709			currentSave.party[pokemonIndex].currentstatus = 0;
.LINE 709

	LD	BC,(IX+-39)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LD	(IY+15),0
;  710			for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 710

	LD	BC,0
	LD	(IX+-9),BC
	LD	BC,(IX+-6)
	LD	(IX+-18),BC
	LD	BC,(IX+-12)
	LD	(IX+-21),BC
	LD	BC,(IX+-12)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	(IX+-15),HL
	JR	L_318
L_316:
;  711				currentSave.party[pokemonIndex].pp[moveIndex] = data_moves[currentSave.party[pokemonIndex].moves[moveIndex]].uses;
.LINE 711

	LD	BC,(IX+-15)
	LD	(IX+-36),BC
	LD	BC,(IX+-9)
	LD	IY,(IX+-36)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	BC,HL
	LD	DE,(IX+-9)
	LEA	HL,IY+5
	ADD	HL,DE
	LD	IY,BC
	LD	A,(IY+18)
	LD	(HL),A
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  712			}
L_318:
.LINE 712

	LD	BC,4
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_316
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  713		}
L_321:
.LINE 713

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_319
;  714		text_Display("Your currentSave.party has been healed", false);
.LINE 714

	LD	BC,0
	PUSH	BC
	LD	BC,L__282
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  715		map_LoadPokeballs();
.LINE 715

	CALL	_map_LoadPokeballs
;  716	}
.LINE 716

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HealParty ***************************
;Name                         Addr/Register   Size   Type
;_map_LoadPokeballs                  IMPORT  -----   function
;_text_Display                       IMPORT  -----   function
;_data_moves                         IMPORT  unknown variable
;_stats_CalculateStats               IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;O_39                                 IX-21      3   variable
;O_38                                 IX-18      3   variable
;O_40                                 IX-15      3   variable
;G_16                                 IX-12      3   variable
;moveIndex                             IX-9      3   variable
;G_15                                  IX-6      3   variable
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 45 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "HealParty",716,"_HealParty"
	SEGMENT STRSECT
L__282:
	DB	"Your currentSave.party has been healed"
	DB	0
	SEGMENT CODE
;  717	void OpenBox(void) {
_OpenBox:
.DEFINE "_OpenBox"

.VALUE _OpenBox

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "OpenBox",717,"_OpenBox"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  718		map_End();
.LINE 718

	CALL	_map_End
;  719		
;  720		menu_Box();
.LINE 720

	CALL	_menu_Box
;  721	
;  722		map_SetupGfx();
.LINE 722

	CALL	_map_SetupGfx
;  723		map_LoadPokeballs();
.LINE 723

	CALL	_map_LoadPokeballs
;  724	}
.LINE 724

	LD	SP,IX
	POP	IX
	RET	


;**************************** _OpenBox ***************************
;Name                         Addr/Register   Size   Type
;_map_LoadPokeballs                  IMPORT  -----   function
;_map_SetupGfx                       IMPORT  -----   function
;_menu_Box                           IMPORT  -----   function
;_map_End                            IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "OpenBox",724,"_OpenBox"
;  725	void ReadText(uint8_t index) {
_ReadText:
.DEFINE "_ReadText"

.VALUE _ReadText

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "ReadText",725,"_ReadText"

.LINE 725

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  726		LoadText(currentZoneData.textIds[index]);
.LINE 726

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+336
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_LoadText
	POP	BC
;  727		text_Display(loadedText, true);
.LINE 727

	LD	BC,1
	PUSH	BC
	LD	BC,_loadedText
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  728	}
.LINE 728

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ReadText ***************************
;Name                         Addr/Register   Size   Type
;_loadedText                         IMPORT    256   variable
;_text_Display                       IMPORT  -----   function
;_currentZoneData                    STATIC    688   variable
;_LoadText                           IMPORT  -----   function
;index                                 IX+6      1   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "ReadText",728,"_ReadText"
;  729	void EnterDoor(uint8_t index) {
_EnterDoor:
.DEFINE "_EnterDoor"

.VALUE _EnterDoor

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "EnterDoor",729,"_EnterDoor"

.LINE 729

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  730		int tileIndex;
;  731		currentSave.lastPlayerX = currentSave.playerX;
.LINE 731

	LD	BC,(_currentSave+2)
	LD	HL,_currentSave+6
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  732		currentSave.lastPlayerY = currentSave.playerY;
.LINE 732

	LD	BC,(_currentSave+4)
	LD	HL,_currentSave+8
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  733		currentSave.indoors = true;
.LINE 733

	LD	A,1
	LD	(_currentSave+1236),A
;  734		currentSave.currentBuilding = currentZoneData.doorzones[index];
.LINE 734

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+288
	ADD	HL,BC
	LD	A,(HL)
	LD	(_currentSave+1238),A
;  735		LoadTileset(true);
.LINE 735

	LD	BC,1
	PUSH	BC
	CALL	_LoadTileset
	POP	BC
;  736		tilemap.width = 21;
.LINE 736

	LD	A,21
	LD	(_tilemap+13),A
;  737		tilemap.height = 15;
.LINE 737

	LD	A,15
	LD	(_tilemap+12),A
;  738		currentSave.playerX = currentZoneData.doorx[index] * 16;
.LINE 738

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+304
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  739		currentSave.playerY = currentZoneData.doory[index] * 16;
.LINE 739

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+320
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  740		tx = currentSave.playerX / 16;
.LINE 740

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  741		ty = currentSave.playerY / 16;
.LINE 741

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  742		LoadMap();
.LINE 742

	CALL	_LoadMap
;  743	}
.LINE 743

	LD	SP,IX
	POP	IX
	RET	


;**************************** _EnterDoor ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_LoadTileset                        IMPORT  -----   function
;_currentZoneData                    STATIC    688   variable
;_currentSave                        IMPORT   4140   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "EnterDoor",743,"_EnterDoor"
;  744	void ExitBuilding(void) {
_ExitBuilding:
.DEFINE "_ExitBuilding"

.VALUE _ExitBuilding

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "ExitBuilding",744,"_ExitBuilding"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  745		int tileIndex;
;  746		currentSave.playerX = currentSave.lastPlayerX;
.LINE 746

	LD	BC,(_currentSave+6)
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  747		currentSave.playerY = currentSave.lastPlayerY;
.LINE 747

	LD	BC,(_currentSave+8)
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  748		currentSave.indoors = false;
.LINE 748

	XOR	A,A
	LD	(_currentSave+1236),A
;  749		tilemap.width = OUTDOORWIDTH;
.LINE 749

	LD	A,48
	LD	(_tilemap+13),A
;  750		tilemap.height = OUTDOORHEIGHT;
.LINE 750

	LD	A,40
	LD	(_tilemap+12),A
;  751		tx = currentSave.playerX / 16;
.LINE 751

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  752		ty = currentSave.playerY / 16;
.LINE 752

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  753		LoadTileset(true);
.LINE 753

	LD	BC,1
	PUSH	BC
	CALL	_LoadTileset
	POP	BC
;  754		LoadMap();
.LINE 754

	CALL	_LoadMap
;  755	}
.LINE 755

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ExitBuilding ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_LoadTileset                        IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_currentSave                        IMPORT   4140   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "ExitBuilding",755,"_ExitBuilding"
;  756	void ExitZone(uint8_t index) {
_ExitZone:
.DEFINE "_ExitZone"

.VALUE _ExitZone

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "ExitZone",756,"_ExitZone"

.LINE 756

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  757		currentSave.playerX = currentZoneData.exitx[index] * 16;
.LINE 757

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+256
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_currentSave+2
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  758		currentSave.playerY = currentZoneData.exity[index] * 16;
.LINE 758

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+272
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_currentSave+4
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  759		currentSave.currentZone = currentZoneData.exitzone[index];
.LINE 759

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+240
	ADD	HL,BC
	LD	C,(HL)
	LD	HL,_currentSave+1234
	LD	(HL),C
	INC	HL
	LD	(HL),0
;  760		tx = currentSave.playerX / 16;
.LINE 760

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  761		ty = currentSave.playerY / 16;
.LINE 761

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  762		LoadTileset(true);
.LINE 762

	LD	BC,1
	PUSH	BC
	CALL	_LoadTileset
	POP	BC
;  763		LoadMap();
.LINE 763

	CALL	_LoadMap
;  764	}
.LINE 764

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ExitZone ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_LoadTileset                        IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_currentSave                        IMPORT   4140   variable
;_currentZoneData                    STATIC    688   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "ExitZone",764,"_ExitZone"
;  765	bool FightTrainer(uint8_t index) {
_FightTrainer:
.DEFINE "_FightTrainer"

.VALUE _FightTrainer

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "FightTrainer",765,"_FightTrainer"

.LINE 765

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-15
	LD	SP,HL
;  766		if (currentZoneData.trainertype[index] <=1) {
.LINE 766

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+608
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,1
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_356
;  767			currentTrainer = index;
.LINE 767

	LD	A,(IX+6)
	LD	(_currentTrainer),A
;  768			if (currentSave.indoors && !currentSave.defeatedTrainersIndoors[currentSave.currentBuilding][currentTrainer]) {
.LINE 768

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_333
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_currentSave+1684
	ADD	HL,BC
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_333
;  769				LoadText(currentZoneData.trainertext[index]);
.LINE 769

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+640
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_LoadText
	POP	BC
;  770				text_Display(loadedText, true);
.LINE 770

	LD	BC,1
	PUSH	BC
	LD	BC,_loadedText
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  771				battle_SpawnTrainer(currentZoneData.trainerspawnids, currentZoneData.trainerspawnlevels, index);
.LINE 771

	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData+448
	PUSH	BC
	LD	BC,_currentZoneData+352
	PUSH	BC
	CALL	_battle_SpawnTrainer
	POP	BC
	POP	BC
	POP	BC
;  772				return true;
.LINE 772

	LD	A,1
	JR	L_358
;  773			}
;  774			else if (!currentSave.indoors && !currentSave.defeatedTrainers[currentSave.currentZone][currentTrainer]) {
L_333:
.LINE 774

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_357
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_currentSave+1428
	ADD	HL,BC
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_357
;  775				LoadText(currentZoneData.trainertext[index]);
.LINE 775

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+640
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_LoadText
	POP	BC
;  776				text_Display(loadedText, true);
.LINE 776

	LD	BC,1
	PUSH	BC
	LD	BC,_loadedText
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  777				battle_SpawnTrainer(currentZoneData.trainerspawnids, currentZoneData.trainerspawnlevels, index);
.LINE 777

	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData+448
	PUSH	BC
	LD	BC,_currentZoneData+352
	PUSH	BC
	CALL	_battle_SpawnTrainer
	POP	BC
	POP	BC
	POP	BC
;  778				return true;
.LINE 778

	LD	A,1
	JR	L_358
;  779			}
;  780			
;  781		}
;  782		else if (currentZoneData.trainertype[index] <= 3) {
L_356:
.LINE 782

	LD	HL,(IX+-3)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,3
	OR	A,A
	SBC	HL,BC
	JP	M,L_354
;  783			LoadText(currentZoneData.trainertext[index]);
.LINE 783

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+640
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_LoadText
	POP	BC
;  784			text_Display(loadedText, true);
.LINE 784

	LD	BC,1
	PUSH	BC
	LD	BC,_loadedText
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  785		}
;  786		else if (currentZoneData.trainertype[index] == 4 && moveState == 0) {
.LINE 786

	JR	L_357
L_354:
	LD	HL,(IX+-3)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_352
	LD	A,(_moveState)
	OR	A,A
	JR	NZ,L_352
;  787			LoadText(currentZoneData.trainertext[index]);
.LINE 787

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+640
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_LoadText
	POP	BC
;  788			text_Display(loadedText, true);
.LINE 788

	LD	BC,1
	PUSH	BC
	LD	BC,_loadedText
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  789			moveDir = moveDir + 1 - 2 * !(moveDir % 2);
.LINE 789

	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	LD	BC,2
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_336
	LD	BC,1
	LD	(IX+-6),BC
	JR	L_337
L_336:
	LD	BC,0
	LD	(IX+-6),BC
L_337:
	LD	A,(_moveDir)
	LD	B,A
	INC	B
	LD	A,(IX+-6)
	ADD	A,A
	LD	C,A
	LD	A,B
	SUB	A,C
	LD	(_moveDir),A
;  790			moveState = 8;
.LINE 790

	LD	A,8
	LD	(_moveState),A
;  791		}
;  792		else if (currentZoneData.trainertype[index] == 5 && moveState == 0) {
.LINE 792

	JR	L_357
L_352:
	LD	HL,(IX+-3)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,5
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_350
	LD	A,(_moveState)
	OR	A,A
	JR	NZ,L_350
;  793			LoadText(currentZoneData.trainertext[index]);
.LINE 793

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+640
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_LoadText
	POP	BC
;  794			text_Display(loadedText, true);
.LINE 794

	LD	BC,1
	PUSH	BC
	LD	BC,_loadedText
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  795			moveDir = moveDir + 1 - 2 * !(moveDir % 2);
.LINE 795

	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	LD	BC,2
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_341
	LD	BC,1
	LD	(IX+-9),BC
	JR	L_342
L_341:
	LD	BC,0
	LD	(IX+-9),BC
L_342:
	LD	A,(_moveDir)
	LD	B,A
	INC	B
	LD	A,(IX+-9)
	ADD	A,A
	LD	C,A
	LD	A,B
	SUB	A,C
	LD	(_moveDir),A
;  796			moveState = 8;
.LINE 796

	LD	A,8
	LD	(_moveState),A
;  797		}
;  798		else if (currentZoneData.trainertype[index] == 6) {
.LINE 798

	JR	L_357
L_350:
	LD	HL,(IX+-3)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,6
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_357
;  799			if (currentSave.newGame) {
.LINE 799

	LD	A,(_currentSave)
	OR	A,A
	JR	Z,L_347
;  800				text_Display("Professor Spruce was looking for you\nHe is in his Laboratory", false);
.LINE 800

	LD	BC,0
	PUSH	BC
	LD	BC,L__303
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  801			}
;  802			else {
.LINE 802

	JR	L_357
L_347:
;  803				if (!currentSave.takenGiftsIndoors[currentSave.currentBuilding][index]) {
.LINE 803

	LD	BC,_currentSave+2196
	LD	(IX+-12),BC
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_345
;  804					text_Display("You can use these to catch\nmore Pokemon\n\n\nRecieved 5 pokeballs", true);
.LINE 804

	LD	BC,1
	PUSH	BC
	LD	BC,L__305
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  805					currentSave.playerItems[0] += 5;
.LINE 805

	LD	BC,_currentSave+1243
	LD	(IX+-15),BC
	LD	IY,(IX+-15)
	LD	HL,BC
	LD	A,(IY)
	ADD	A,5
	LD	(HL),A
;  806					currentSave.takenGiftsIndoors[currentSave.currentBuilding][index] = true;
.LINE 806

	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(IX+-12)
	ADD	HL,BC
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(HL),1
;  807				}
;  808				else {
.LINE 808

	JR	L_357
L_345:
;  809					text_Display("Good luck on your adventure!", true);
.LINE 809

	LD	BC,1
	PUSH	BC
	LD	BC,L__306
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  810				}
;  811			}
;  812		}
L_357:
.LINE 812

;  813		return false;
.LINE 813

	XOR	A,A
;  814	}
L_358:
.LINE 814

	LD	SP,IX
	POP	IX
	RET	


;**************************** _FightTrainer ***************************
;Name                         Addr/Register   Size   Type
;_moveDir                            STATIC      1   variable
;_moveState                          STATIC      1   variable
;_battle_SpawnTrainer                IMPORT  -----   function
;_loadedText                         IMPORT    256   variable
;_text_Display                       IMPORT  -----   function
;_LoadText                           IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_currentTrainer                     STATIC      1   variable
;_currentZoneData                    STATIC    688   variable
;G_25                                 IX-12      3   variable
;temp343                               IX-9      3   variable
;temp338                               IX-6      3   variable
;G_18                                  IX-3      3   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 24 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "FightTrainer",814,"_FightTrainer"
	SEGMENT STRSECT
L__303:
	DB	"Professor Spruce was looking for you"
	DB	10
	DB	"He is in his Laboratory"
	DB	0
L__305:
	DB	"You can use these to catch"
	DB	10
	DB	"more Pokemon"
	DB	10,10,10
	DB	"Recieved 5 pokeballs"
	DB	0
L__306:
	DB	"Good luck on your adventure!"
	DB	0
	SEGMENT CODE
;  815	
;  816	void map_LoadPokeballs(void) {
_map_LoadPokeballs:
.DEFINE "_map_LoadPokeballs"

.VALUE _map_LoadPokeballs

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_LoadPokeballs",816,"_map_LoadPokeballs"

.LINE 816

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
;  817		int pokemonIndex;
;  818		/* Generate pokemon info To Display At Top of Screen */
;  819		for (pokemonIndex = 0; pokemonIndex < 6; pokemonIndex++) {
.LINE 819

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_366
L_364:
;  820			if (currentSave.party[pokemonIndex].id == 0) {
.LINE 820

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	IY,(IX+-6)
	LD	A,(IY+0)
	OR	A,A
	JR	NZ,L_363
;  821				pokeballdata[pokemonIndex] = 2;
.LINE 821

	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),2
;  822			}
;  823			else {
.LINE 823

	JR	L_365
L_363:
;  824				if (currentSave.party[pokemonIndex].currenthealth > 0) {
.LINE 824

	LD	IY,(IX+-6)
	LD	BC,(IY+13)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_361
;  825					pokeballdata[pokemonIndex] = 0;
.LINE 825

	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
;  826				}
;  827				else {
.LINE 827

	JR	L_365
L_361:
;  828					pokeballdata[pokemonIndex] = 1;
.LINE 828

	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),1
;  829				}
;  830			}
;  831		}
L_365:
.LINE 831

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_366:
	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_364
;  832	}
.LINE 832

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_LoadPokeballs ***************************
;Name                         Addr/Register   Size   Type
;_pokeballdata                       STATIC      6   variable
;_currentSave                        IMPORT   4140   variable
;G_26                                  IX-6      3   variable
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "map_LoadPokeballs",832,"_map_LoadPokeballs"
;  833	void LoadMap(void) {
_LoadMap:
.DEFINE "_LoadMap"

.VALUE _LoadMap

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "LoadMap",833,"_LoadMap"

.LINE 833

.DEFINE "npcIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "mapAV"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

.DEFINE "canPass"

.CLASS 65

.VALUE -5

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-53
	LD	SP,HL
;  834		int i, j;
;  835		int npcIndex;
;  836		ti_var_t mapAV;
;  837		if (currentSave.indoors) {
.LINE 837

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_369
;  838			mapAV = ti_Open("PKMNMD1", "r");
.LINE 838

	LD	BC,L__313
	PUSH	BC
	LD	BC,L__314
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-4),A
;  839			ti_Seek(((int)currentSave.currentBuilding) * 1318, 0, mapAV);
.LINE 839

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	LD	BC,1318
	CALL	__imuls
	PUSH	HL
	CALL	_ti_Seek
	POP	BC
	POP	BC
	POP	BC
;  840			ti_Read(&currentTileMap, 315, 1, mapAV);
.LINE 840

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,315
	PUSH	BC
	LD	BC,_currentTileMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  841			ti_Read(&currentTypeMap, 315, 1, mapAV);
.LINE 841

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,315
	PUSH	BC
	LD	BC,_currentTypeMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  842			ti_Read(&currentZoneData, sizeof(currentZoneData), 1, mapAV);
.LINE 842

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,688
	PUSH	BC
	LD	BC,_currentZoneData
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  843		}
;  844		else {
.LINE 844

	JR	L_370
L_369:
;  845			mapAV = ti_Open("PKMNMD0", "r");
.LINE 845

	LD	BC,L__315
	PUSH	BC
	LD	BC,L__316
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-4),A
;  846			ti_Seek(((int)currentSave.currentZone) * 4528, 0, mapAV);
.LINE 846

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,4528
	CALL	__imuls
	PUSH	HL
	CALL	_ti_Seek
	POP	BC
	POP	BC
	POP	BC
;  847			ti_Read(&currentTileMap, 1920, 1, mapAV);
.LINE 847

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,1920
	PUSH	BC
	LD	BC,_currentTileMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  848			ti_Read(&currentTypeMap, 1920, 1, mapAV);
.LINE 848

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,1920
	PUSH	BC
	LD	BC,_currentTypeMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  849			ti_Read(&currentZoneData, sizeof(currentZoneData), 1, mapAV);
.LINE 849

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,688
	PUSH	BC
	LD	BC,_currentZoneData
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  850		}
L_370:
.LINE 850

;  851		ti_CloseAll();
.LINE 851

	CALL	_ti_CloseAll
;  852		for (npcIndex = 0; npcIndex < 16; npcIndex++) {
.LINE 852

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_395
L_393:
;  853			if (currentZoneData.trainertype[npcIndex] == 4) {
.LINE 853

	LD	BC,_currentZoneData+608
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_379
;  854				bool canPass = true;
.LINE 854

	LD	(IX+-5),1
;  855				if (currentSave.newGame && currentZoneData.spawnids[0][npcIndex] == 0) {
.LINE 855

	LD	A,(_currentSave)
	OR	A,A
	JR	Z,L_375
	LD	BC,_currentZoneData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_375
;  856					canPass = false;
.LINE 856

	LD	(IX+-5),0
;  857				}
L_375:
.LINE 857

;  858				if (currentZoneData.spawnids[0][npcIndex] > playerState) {
.LINE 858

	LD	BC,_currentZoneData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(_playerState)
	CP	A,(HL)
	JR	NC,L_377
;  859					canPass = false;
.LINE 859

	LD	(IX+-5),0
;  860				}
L_377:
.LINE 860

;  861				if (canPass) {
.LINE 861

	LD	A,(IX+-5)
	OR	A,A
	JR	Z,L_379
;  862					currentZoneData.trainerdir[npcIndex] = 0;
.LINE 862

	LD	BC,_currentZoneData+576
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
;  863				}
;  864			}
L_379:
.LINE 864

;  865	
;  866	
;  867			npcMoveState[npcIndex] = 0;
.LINE 867

	LD	BC,_npcMoveState
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
;  868			npcGrassAnimState[npcIndex] = 0;
.LINE 868

	LD	BC,_npcGrassAnimState
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
;  869			npcOldTiles[npcIndex] = currentTypeMap[(currentZoneData.trainerx[npcIndex]) + (tilemap.width * currentZoneData.trainery[npcIndex])];
.LINE 869

	LD	BC,_currentZoneData+544
	LD	(IX+-32),BC
	LD	BC,(IX+-3)
	LD	HL,(IX+-32)
	ADD	HL,BC
	LD	(IX+-29),HL
	LD	BC,_currentZoneData+560
	LD	(IX+-26),BC
	LD	BC,(IX+-3)
	LD	HL,(IX+-26)
	ADD	HL,BC
	LD	(IX+-23),HL
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,(IX+-23)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,DE
	CALL	__imuls
	LD	BC,HL
	LD	HL,(IX+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	IY,HL
	LD	BC,_npcOldTiles
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(IY)
	LD	(HL),A
;  870			currentTypeMap[(currentZoneData.trainerx[npcIndex]) + (tilemap.width * currentZoneData.trainery[npcIndex])] = 96 + npcIndex;
.LINE 870

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,(IX+-23)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,DE
	CALL	__imuls
	LD	BC,HL
	LD	HL,(IX+-29)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(IX+-3)
	ADD	A,96
	LD	(HL),A
;  871			npcSaidMessage[npcIndex] = false;
.LINE 871

	LD	BC,_npcSaidMessage
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
;  872	
;  873			if (currentSave.takenGroundGifts[currentSave.indoors][(currentSave.currentZone * !currentSave.indoors) + (currentSave.currentBuilding * currentSave.indoors)][npcIndex]) {
.LINE 873

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_381
	LD	BC,1
	LD	(IX+-20),BC
	JR	L_382
L_381:
	LD	BC,0
	LD	(IX+-20),BC
L_382:
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	A,8
	CALL	__ishl_b
	LD	BC,_currentSave+2452
	ADD	HL,BC
	LD	DE,HL
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,(IX+-20)
	CALL	__imuls
	LD	(IX+-50),HL	; spill
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	LD	(IX+-53),HL
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+-53)
	CALL	__imuls
	LD	BC,(IX+-50)	; unspill
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	Z,L_394
;  874				currentTileMap[currentSave.foundItemsPos[currentSave.indoors][(currentSave.currentZone * !currentSave.indoors) + (currentSave.currentBuilding * currentSave.indoors)][npcIndex]] = 0;
.LINE 874

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_385
	LD	BC,1
	LD	(IX+-8),BC
	JR	L_386
L_385:
	LD	BC,0
	LD	(IX+-8),BC
L_386:
	LD	BC,_currentSave+2964
	LD	(IX+-17),BC
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	(IX+-14),HL
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	A,9
	CALL	__ishl_b
	LD	BC,(IX+-17)
	ADD	HL,BC
	LD	DE,HL
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,(IX+-8)
	CALL	__imuls
	LD	(IX+-44),HL	; spill
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	LD	(IX+-47),HL
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+-47)
	CALL	__imuls
	LD	BC,(IX+-44)	; unspill
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,(IX+-14)
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	(HL),0
;  875				currentTypeMap[currentSave.foundItemsPos[currentSave.indoors][(currentSave.currentZone * !currentSave.indoors) + (currentSave.currentBuilding * currentSave.indoors)][npcIndex]] = 0;
.LINE 875

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_389
	LD	BC,1
	LD	(IX+-11),BC
	JR	L_390
L_389:
	LD	BC,0
	LD	(IX+-11),BC
L_390:
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	A,9
	CALL	__ishl_b
	LD	BC,(IX+-17)
	ADD	HL,BC
	LD	DE,HL
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,(IX+-11)
	CALL	__imuls
	LD	(IX+-38),HL	; spill
	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	LD	(IX+-41),HL
	LD	A,(_currentSave+1236)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+-41)
	CALL	__imuls
	LD	BC,(IX+-38)	; unspill
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,(IX+-14)
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	(HL),0
;  876			}
;  877		}
L_394:
.LINE 877

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_395:
	LD	BC,16
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_393
;  878		
;  879	}
.LINE 879

	LD	SP,IX
	POP	IX
	RET	


;**************************** _LoadMap ***************************
;Name                         Addr/Register   Size   Type
;_npcSaidMessage                     STATIC     16   variable
;_npcOldTiles                        STATIC     16   variable
;_tilemap                            STATIC     18   variable
;_npcGrassAnimState                  STATIC     16   variable
;_npcMoveState                       STATIC     16   variable
;_playerState                        STATIC      1   variable
;_ti_CloseAll                        IMPORT  -----   function
;_currentZoneData                    STATIC    688   variable
;_currentTypeMap                     STATIC   1920   variable
;_currentTileMap                     STATIC   1920   variable
;_ti_Read                            IMPORT  -----   function
;_ti_Seek                            IMPORT  -----   function
;_ti_Open                            IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;temp383                              IX-20      3   variable
;G_28                                 IX-17      3   variable
;G_29                                 IX-14      3   variable
;temp391                              IX-11      3   variable
;temp387                               IX-8      3   variable
;canPass                               IX-5      1   variable
;mapAV                                 IX-4      1   variable
;npcIndex                              IX-3      3   variable


; Stack Frame Size: 59 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "LoadMap",879,"_LoadMap"
	SEGMENT STRSECT
L__313:
	DB	"r"
	DB	0
L__314:
	DB	"PKMNMD1"
	DB	0
L__315:
	DB	"r"
	DB	0
L__316:
	DB	"PKMNMD0"
	DB	0
	SEGMENT CODE
;  880	
;  881	int32_t Clamp(int32_t number, int min, int max) {
_Clamp:
.DEFINE "_Clamp"

.VALUE _Clamp

.CLASS 2

.TYPE 69

.ENDEF

.BEGFUNC "Clamp",881,"_Clamp"

.LINE 881

.DEFINE "number"

.CLASS 65

.VALUE 6

.TYPE 5

.ENDEF

.DEFINE "min"

.CLASS 65

.VALUE 12

.TYPE 4

.ENDEF

.DEFINE "max"

.CLASS 65

.VALUE 15

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  882		if (number < min) {
.LINE 882

	LD	BC,(IX+12)
	CALL	__itol
	LD	HL,(IX+6)
	LD	E,(IX+9)
	CALL	__lcmps
	CALL	__setflag
	JP	P,L_399
;  883			number = min;
.LINE 883

	LD	BC,(IX+12)
	CALL	__itol
	LD	(IX+6),BC
	LD	(IX+9),A
;  884		}
L_399:
.LINE 884

;  885		if (number > max) {
.LINE 885

	LD	BC,(IX+15)
	CALL	__itol
	LD	E,A
	LD	HL,BC
	LD	BC,(IX+6)
	LD	A,(IX+9)
	CALL	__lcmps
	CALL	__setflag
	JP	P,L_400
;  886			number = max;
.LINE 886

	LD	BC,(IX+15)
	CALL	__itol
	LD	(IX+6),BC
	LD	(IX+9),A
;  887		}
L_400:
.LINE 887

;  888		return number;
.LINE 888

	LD	HL,(IX+6)
	LD	E,(IX+9)
;  889	}
.LINE 889

	LD	SP,IX
	POP	IX
	RET	


;**************************** _Clamp ***************************
;Name                         Addr/Register   Size   Type
;max                                  IX+15      3   parameter
;min                                  IX+12      3   parameter
;number                                IX+6      4   parameter


; Stack Frame Size: 18 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "Clamp",889,"_Clamp"
;  890	uint8_t GetNextTile(uint8_t tx, uint8_t ty, int width) {
_GetNextTile:
.DEFINE "_GetNextTile"

.VALUE _GetNextTile

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "GetNextTile",890,"_GetNextTile"

.LINE 890

.DEFINE "tx"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "ty"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "width"

.CLASS 65

.VALUE 12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  891	
;  892		switch (moveDir) {
.LINE 892

	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	CALL	__seqcaseD
	JP	(HL)
L__331:
	DW	4
	DW	1
	DB	0
	DW24	L_402	

	DW24	L_403	

	DW24	L_404	

	DW24	L_405	

	DW24	L_406	

;  893		case 1:
L_402:
.LINE 893

;  894			return(GetTypeMapData(tx + 1, ty, width));
.LINE 894

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	INC	C
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_407
;  895		case 2:
L_403:
.LINE 895

;  896			return(GetTypeMapData(tx - 1, ty, width));
.LINE 896

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	DEC	C
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_407
;  897		case 3:
L_404:
.LINE 897

;  898			return(GetTypeMapData(tx, ty + 1, width));
.LINE 898

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	INC	C
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_407
;  899		case 4:
L_405:
.LINE 899

;  900			return(GetTypeMapData(tx, ty - 1, width));
.LINE 900

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	DEC	C
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_407
;  901		}
L_406:
.LINE 901

;  902		return 0;
.LINE 902

	XOR	A,A
;  903	}
L_407:
.LINE 903

	LD	SP,IX
	POP	IX
	RET	


;**************************** _GetNextTile ***************************
;Name                         Addr/Register   Size   Type
;_GetTypeMapData                     IMPORT  -----   function
;_moveDir                            STATIC      1   variable
;width                                IX+12      3   parameter
;ty                                    IX+9      1   parameter
;tx                                    IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "GetNextTile",903,"_GetNextTile"
;  904	
;  905	uint16_t ShiftTile(uint16_t value, uint8_t direction, uint8_t amount) {
_ShiftTile:
.DEFINE "_ShiftTile"

.VALUE _ShiftTile

.CLASS 2

.TYPE 77

.ENDEF

.BEGFUNC "ShiftTile",905,"_ShiftTile"

.LINE 905

.DEFINE "value"

.CLASS 65

.VALUE 6

.TYPE 13

.ENDEF

.DEFINE "direction"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "amount"

.CLASS 65

.VALUE 12

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	PUSH	BC
;  906		return (value + ((direction == 1) * amount) - ((direction == 2) * amount) + ((direction == 3) * tilemap.width * amount) - ((direction == 4) * tilemap.width * amount));
.LINE 906

	LD	A,(IX+9)
	CP	A,1
	JR	NZ,L__334
	LD	A,1
	JR	L__335
L__334:
	XOR	A,A
L__335:
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	C,(IX+12)
	LD	B,0
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	BC,(IX+6)
	ADD.SIS	HL,BC
	LD	(IX+-9),HL
	LD	A,(IX+9)
	CP	A,2
	JR	NZ,L__337
	LD	A,1
	JR	L__338
L__337:
	XOR	A,A
L__338:
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	C,(IX+12)
	LD	B,0
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	BC,HL
	LD	HL,(IX+-9)
	OR	A,A
	SBC.SIS	HL,BC
	LD	(IX+-6),HL
	LD	A,(_tilemap+13)
	LD	C,A
	LD	B,0
	LD	DE,BC
	LD	A,(IX+9)
	CP	A,3
	JR	NZ,L__340
	LD	A,1
	JR	L__341
L__340:
	XOR	A,A
L__341:
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,DE
	CALL	__smulu
	LD	DE,HL
	LD	C,(IX+12)
	LD	B,0
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	BC,HL
	LD	HL,(IX+-6)
	ADD.SIS	HL,BC
	LD	(IX+-3),HL
	LD	A,(_tilemap+13)
	LD	C,A
	LD	B,0
	LD	DE,BC
	LD	A,(IX+9)
	CP	A,4
	JR	NZ,L__343
	LD	A,1
	JR	L__344
L__343:
	XOR	A,A
L__344:
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,DE
	CALL	__smulu
	LD	DE,HL
	LD	C,(IX+12)
	LD	B,0
	LD	HL,BC
	LD	BC,DE
	CALL	__smulu
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC.SIS	HL,BC
;  907	}
.LINE 907

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ShiftTile ***************************
;Name                         Addr/Register   Size   Type
;_tilemap                            STATIC     18   variable
;amount                               IX+12      1   parameter
;direction                             IX+9      1   parameter
;value                                 IX+6      2   parameter


; Stack Frame Size: 24 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "ShiftTile",907,"_ShiftTile"
;  908	
;  909	uint8_t GetTypeMapData(uint8_t tx, uint8_t ty, int width) {
_GetTypeMapData:
.DEFINE "_GetTypeMapData"

.VALUE _GetTypeMapData

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "GetTypeMapData",909,"_GetTypeMapData"

.LINE 909

.DEFINE "tx"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "ty"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "width"

.CLASS 65

.VALUE 12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  910		if (currentSave.indoors) {
.LINE 910

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_410
;  911			return (currentTypeMap[(tx)+(ty)* width]);
.LINE 911

	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+12)
	CALL	__imuls
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
	JR	L_411
;  912		}
;  913		else {
L_410:
.LINE 913

;  914			return (currentTypeMap[(tx)+(ty)* width]);
.LINE 914

	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+12)
	CALL	__imuls
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
;  915		}
;  916	}
L_411:
.LINE 916

	LD	SP,IX
	POP	IX
	RET	


;**************************** _GetTypeMapData ***************************
;Name                         Addr/Register   Size   Type
;_currentTypeMap                     STATIC   1920   variable
;_currentSave                        IMPORT   4140   variable
;width                                IX+12      3   parameter
;ty                                    IX+9      1   parameter
;tx                                    IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: -25 (instruction)


.ENDFUNC "GetTypeMapData",916,"_GetTypeMapData"
;  917	
;  918	void ProcessNpcs(void) {
_ProcessNpcs:
.DEFINE "_ProcessNpcs"

.VALUE _ProcessNpcs

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "ProcessNpcs",918,"_ProcessNpcs"

.LINE 918

.DEFINE "npcIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "trainerDir"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "tileIndex"

.CLASS 65

.VALUE -42

.TYPE 4

.ENDEF

.DEFINE "xloc"

.CLASS 65

.VALUE -45

.TYPE 4

.ENDEF

.DEFINE "yloc"

.CLASS 65

.VALUE -48

.TYPE 4

.ENDEF

.DEFINE "canMove"

.CLASS 65

.VALUE -49

.TYPE 12

.ENDEF

.DEFINE "xlocMod"

.CLASS 65

.VALUE -69

.TYPE 4

.ENDEF

.DEFINE "ylocMod"

.CLASS 65

.VALUE -78

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-225
	ADD	HL,SP
	LD	SP,HL
;  919		int npcIndex, tileIndex, xloc, yloc, xlocMod, ylocMod;
;  920		for (npcIndex = 0; npcIndex < 16; npcIndex++) {
.LINE 920

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_532
L_530:
;  921			if (currentZoneData.trainerdir[npcIndex] != 0) {
.LINE 921

	LD	BC,_currentZoneData+576
	LEA	IY,IX+-128
	LD	(IY+-50),BC
	LD	BC,(IX+-3)
	LD	HL,-178
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY+-41),HL
	LD	HL,(IY+-41)
	LD	A,(HL)
	OR	A,A
	JR	Z,L_531
;  922				xloc = currentZoneData.trainerx[npcIndex] * 16 - screenX;
.LINE 922

	LD	BC,_currentZoneData+544
	LD	(IX+-127),BC
	LD	(IX+-106),BC
	LD	BC,(IX+-3)
	LD	HL,(IX+-127)
	ADD	HL,BC
	LD	(IX+-85),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_screenX)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-45),HL
;  923				yloc = currentZoneData.trainery[npcIndex] * 16 - screenY;
.LINE 923

	LD	BC,_currentZoneData+560
	LD	(IX+-124),BC
	LD	(IX+-103),BC
	LD	BC,(IX+-3)
	LD	HL,(IX+-124)
	ADD	HL,BC
	LD	(IX+-94),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_screenY)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-48),HL
;  924				xlocMod = 0;
.LINE 924

	LD	BC,0
	LD	(IX+-69),BC
;  925				ylocMod = 0;
.LINE 925

	LD	(IX+-78),BC
;  926	
;  927				if (xloc < 336 && yloc < 240 && xloc >= 0 && yloc >= 0) {
.LINE 927

	LD	BC,336
	LD	HL,(IX+-45)
	OR	A,A
	SBC	HL,BC
	JP	P,L_531
	LD	BC,240
	LD	HL,(IX+-48)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_531
	LD	HL,(IX+-45)
	CALL	__icmpzero
	CALL	__setflag
	JP	M,L_531
	LD	HL,(IX+-48)
	CALL	__icmpzero
	CALL	__setflag
	JP	M,L_531
;  928					bool canMove;
;  929					int trainerDir = currentZoneData.trainerdir[npcIndex];
.LINE 929

	LEA	IY,IX+-128
	LD	HL,(IY+-41)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	(IX+-6),HL
;  930					canMove = true;
.LINE 930

	LD	(IX+-49),1
;  931					for (tileIndex = 1; tileIndex < 5; tileIndex++) {
.LINE 931

	LD	BC,1
	LD	(IX+-42),BC
	JR	L_439
L_437:
;  932						if (currentTypeMap[(currentZoneData.trainerx[npcIndex] + (trainerDir == 1)*tileIndex - (trainerDir == 2)*tileIndex) + tilemap.width * (currentZoneData.trainery[npcIndex] + (trainerDir == 3) * tileIndex - (trainerDir == 4) * tileIndex)] >= 64) {
.LINE 932

	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__354
	LD	B,1
	JR	L__355
L__354:
	LD	B,0
L__355:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,(IX+-42)
	CALL	__imuls
	LEA	IY,IX+-128
	LD	(IY+-14),HL
	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__357
	LD	B,1
	JR	L__358
L__357:
	LD	B,0
L__358:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,(IX+-42)
	CALL	__imuls
	LEA	IY,IX+-128
	LD	(IY+-8),HL
	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__360
	LD	B,1
	JR	L__361
L__360:
	LD	B,0
L__361:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,(IX+-42)
	CALL	__imuls
	LEA	IY,IX+-128
	LD	(IY+-5),HL
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__363
	LD	B,1
	JR	L__364
L__363:
	LD	B,0
L__364:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,(IX+-42)
	CALL	__imuls
	LEA	IY,IX+-128
	LD	(IY+-2),HL
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,(IX+-94)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,(IY+-5)
	ADD	HL,BC
	LD	BC,(IY+-2)
	OR	A,A
	SBC	HL,BC
	LD	BC,HL
	LD	HL,DE
	CALL	__imuls
	LD	BC,HL
	LD	HL,(IX+-85)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,(IY+-14)
	ADD	HL,DE
	LD	DE,(IY+-8)
	OR	A,A
	SBC	HL,DE
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,64
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_436
;  933							if (tileIndex == 1 && (npcMoveState[npcIndex] % 16 == 0) && npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 4) {
.LINE 933

	LD	BC,1
	LD	HL,(IX+-42)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_442
	LD	BC,(IX+-3)
	LD	HL,_npcMoveState
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-32),HL
	LD	HL,(IY+-32)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_442
	LD	BC,_currentZoneData+624
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_npcPatterns
	ADD	HL,BC
	LD	DE,HL
	LEA	IY,IX+-128
	LD	HL,(IY+-32)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__idivs
	ADD	HL,DE
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_442
;  934								canMove = false;
.LINE 934

	LD	(IX+-49),0
;  935							}
.LINE 935

;  936							break;
.LINE 936

	JR	L_442
;  937						}
L_436:
.LINE 937

;  938						if ((currentZoneData.trainerx[npcIndex] + (trainerDir == 1)*tileIndex - (trainerDir == 2)*tileIndex) == tx && (currentZoneData.trainery[npcIndex] + (trainerDir == 3) * tileIndex - (trainerDir == 4) * tileIndex) == ty) {
.LINE 938

	LD	BC,(IX+-3)
	LD	HL,(IX+-106)
	ADD	HL,BC
	LD	(IX+-85),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LEA	IY,IX+-128
	LD	BC,(IY+-14)
	ADD	HL,BC
	LD	BC,(IY+-8)
	OR	A,A
	SBC	HL,BC
	LD	BC,HL
	LD	A,(_tx)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	NZ,L_438
	LD	BC,(IX+-3)
	LD	HL,(IX+-103)
	ADD	HL,BC
	LD	(IX+-94),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LEA	IY,IX+-128
	LD	BC,(IY+-5)
	ADD	HL,BC
	LD	BC,(IY+-2)
	OR	A,A
	SBC	HL,BC
	LD	BC,HL
	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	NZ,L_438
;  939							if (tileIndex == 1 && (npcMoveState[npcIndex] % 16 == 0) && npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 4) {
.LINE 939

	LD	BC,1
	LD	HL,(IX+-42)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_433
	LD	BC,(IX+-3)
	LD	HL,_npcMoveState
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-38),HL
	LD	HL,(IY+-38)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_433
	LD	BC,_currentZoneData+624
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_npcPatterns
	ADD	HL,BC
	LD	DE,HL
	LEA	IY,IX+-128
	LD	HL,(IY+-38)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__idivs
	ADD	HL,DE
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_433
;  940								canMove = false;
.LINE 940

	LD	(IX+-49),0
;  941							}
L_433:
.LINE 941

;  942							if (currentZoneData.trainertype[npcIndex] == 0 || (currentZoneData.trainertype[npcIndex] == 2 && !npcSaidMessage[npcIndex]) || currentZoneData.trainertype[npcIndex] == 4 || (currentZoneData.trainertype[npcIndex] == 6 && !npcSaidMessage[npcIndex] && currentSave.newGame)) {
.LINE 942

	LD	BC,_currentZoneData+608
	LD	(IX+-100),BC
	LD	BC,(IX+-3)
	LD	HL,(IX+-100)
	ADD	HL,BC
	LD	(IX+-66),HL
	LD	A,(HL)
	OR	A,A
	JR	Z,L_432
	LD	HL,(IX+-66)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_428
	LD	BC,_npcSaidMessage
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	Z,L_432
L_428:
	LD	HL,(IX+-66)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	Z,L_432
	LD	HL,(IX+-66)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,6
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_442
	LD	BC,_npcSaidMessage
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_442
	LD	A,(_currentSave)
	OR	A,A
	JR	Z,L_442
L_432:
;  943								npcSaidMessage[npcIndex] = true;
.LINE 943

	LD	BC,_npcSaidMessage
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),1
;  944								npcToFight = npcIndex;
.LINE 944

	LD	BC,(IX+-3)
	LD	(_npcToFight),BC
;  945							}
.LINE 945

;  946							break;
.LINE 946

	JR	L_442
;  947						}
;  948					}
L_438:
.LINE 948

	LD	BC,(IX+-42)
	INC	BC
	LD	(IX+-42),BC
L_439:
	LD	BC,5
	LD	HL,(IX+-42)
	OR	A,A
	SBC	HL,BC
	JP	M,L_437
L_442:
;  949					if (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 1 && npcMoveState[npcIndex] % 16 == 8) {
.LINE 949

	LD	BC,(IX+-3)
	LD	HL,_npcMoveState
	ADD	HL,BC
	LD	(IX+-9),HL
	LD	(IX+-109),HL
	LD	(IX+-12),HL
	LD	(IX+-15),HL
	LD	(IX+-52),HL
	LD	(IX+-61),HL
	LD	(IX+-58),HL
	LD	(IX+-55),HL
	LD	(IX+-30),HL
	LD	(IX+-27),HL
	LD	(IX+-24),HL
	LD	(IX+-21),HL
	LD	(IX+-39),HL
	LD	(IX+-36),HL
	LD	(IX+-33),HL
	LD	(IX+-18),HL
	LD	HL,(IX+-9)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__idivs
	LD	(IX+-82),HL
	LD	BC,_currentZoneData+624
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_npcPatterns
	ADD	HL,BC
	LD	BC,(IX+-82)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_452
	LD	BC,(IX+-9)
	LD	(IX+-109),BC
	LD	BC,(IX+-9)
	LD	(IX+-12),BC
	LD	BC,(IX+-9)
	LD	(IX+-15),BC
	LD	BC,(IX+-9)
	LD	(IX+-52),BC
	LD	BC,(IX+-9)
	LD	(IX+-61),BC
	LD	BC,(IX+-9)
	LD	(IX+-58),BC
	LD	BC,(IX+-9)
	LD	(IX+-55),BC
	LD	BC,(IX+-9)
	LD	(IX+-30),BC
	LD	BC,(IX+-9)
	LD	(IX+-27),BC
	LD	BC,(IX+-9)
	LD	(IX+-24),BC
	LD	BC,(IX+-9)
	LD	(IX+-21),BC
	LD	BC,(IX+-9)
	LD	(IX+-39),BC
	LD	BC,(IX+-9)
	LD	(IX+-36),BC
	LD	BC,(IX+-9)
	LD	(IX+-33),BC
	LD	BC,(IX+-9)
	LD	(IX+-18),BC
	LD	HL,(IX+-9)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,8
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_452
;  950						currentZoneData.trainerdir[npcIndex] = 5 - trainerDir;
.LINE 950

	LD	B,(IX+-6)
	LD	DE,_currentZoneData+576
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	A,5
	SUB	A,B
	LD	(HL),A
;  951					}
L_452:
.LINE 951

;  952					if (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 2 && npcMoveState[npcIndex] % 16 == 8) {
.LINE 952

	LD	BC,_currentZoneData+624
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_npcPatterns
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-47),HL
	LD	HL,(IY+-47)
	LD	BC,(IX+-82)
	ADD	HL,BC
	LD	(IX+-118),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_462
	LD	BC,(IX+-109)
	LD	(IX+-12),BC
	LD	(IX+-15),BC
	LD	BC,(IX+-12)
	LD	(IX+-52),BC
	LD	BC,(IX+-12)
	LD	(IX+-61),BC
	LD	BC,(IX+-12)
	LD	(IX+-58),BC
	LD	BC,(IX+-12)
	LD	(IX+-55),BC
	LD	BC,(IX+-12)
	LD	(IX+-30),BC
	LD	BC,(IX+-12)
	LD	(IX+-27),BC
	LD	BC,(IX+-12)
	LD	(IX+-24),BC
	LD	BC,(IX+-12)
	LD	(IX+-21),BC
	LD	BC,(IX+-12)
	LD	(IX+-39),BC
	LD	BC,(IX+-12)
	LD	(IX+-36),BC
	LD	BC,(IX+-12)
	LD	(IX+-33),BC
	LD	BC,(IX+-12)
	LD	(IX+-18),BC
	LD	HL,(IX+-12)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,8
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_462
;  953						if (trainerDir == 1 || trainerDir == 3) {
.LINE 953

	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_446
	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_450
L_446:
;  954							currentZoneData.trainerdir[npcIndex]++;
.LINE 954

	LD	BC,_currentZoneData+576
	LEA	IY,IX+-128
	LD	(IY+-56),BC
	LD	BC,(IX+-3)
	LD	HL,-184
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY+-53),HL
	LD	IY,(IY+-53)
	LD	BC,(IX+-3)
	LD	HL,-184
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	A,(IY)
	INC	A
	LD	(HL),A
;  955						}
L_450:
.LINE 955

;  956						if (trainerDir == 2 || trainerDir == 4) {
.LINE 956

	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_449
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_462
L_449:
;  957							currentZoneData.trainerdir[npcIndex]--;
.LINE 957

	LD	BC,_currentZoneData+576
	LEA	IY,IX+-128
	LD	(IY+-62),BC
	LD	BC,(IX+-3)
	LD	HL,-190
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY+-59),HL
	LD	IY,(IY+-59)
	LD	BC,(IX+-3)
	LD	HL,-190
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	A,(IY)
	DEC	A
	LD	(HL),A
;  958						}
;  959					}
L_462:
.LINE 959

;  960					if (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 1 && npcMoveState[npcIndex] % 16 == 8) {
.LINE 960

	LD	HL,(IX+-118)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_476
	LD	BC,(IX+-12)
	LD	(IX+-15),BC
	LD	(IX+-52),BC
	LD	BC,(IX+-15)
	LD	(IX+-61),BC
	LD	BC,(IX+-15)
	LD	(IX+-58),BC
	LD	BC,(IX+-15)
	LD	(IX+-55),BC
	LD	BC,(IX+-15)
	LD	(IX+-30),BC
	LD	BC,(IX+-15)
	LD	(IX+-27),BC
	LD	BC,(IX+-15)
	LD	(IX+-24),BC
	LD	BC,(IX+-15)
	LD	(IX+-21),BC
	LD	BC,(IX+-15)
	LD	(IX+-39),BC
	LD	BC,(IX+-15)
	LD	(IX+-36),BC
	LD	BC,(IX+-15)
	LD	(IX+-33),BC
	LD	BC,(IX+-15)
	LD	(IX+-18),BC
	LD	HL,(IX+-15)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,8
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_476
;  961						if (trainerDir == 1) {
.LINE 961

	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_456
;  962							currentZoneData.trainerdir[npcIndex] = 3;
.LINE 962

	LD	BC,_currentZoneData+576
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),3
;  963						}
L_456:
.LINE 963

;  964						if (trainerDir == 2) {
.LINE 964

	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_458
;  965							currentZoneData.trainerdir[npcIndex] = 4;
.LINE 965

	LD	BC,_currentZoneData+576
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),4
;  966						}
L_458:
.LINE 966

;  967						if (trainerDir == 3) {
.LINE 967

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_460
;  968							currentZoneData.trainerdir[npcIndex] = 1;
.LINE 968

	LD	BC,_currentZoneData+576
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),1
;  969						}
L_460:
.LINE 969

;  970						if (trainerDir == 4) {
.LINE 970

	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_476
;  971							currentZoneData.trainerdir[npcIndex] = 2;
.LINE 971

	LD	BC,_currentZoneData+576
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),2
;  972						}
;  973					}
L_476:
.LINE 973

;  974	
;  975					if (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 4 && canMove) {
.LINE 975

	LD	BC,_currentZoneData+624
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_npcPatterns
	ADD	HL,BC
	LD	(IX+-72),HL
	LD	BC,(IX+-82)
	ADD	HL,BC
	LD	(IX+-97),HL
	LD	(IX+-121),HL
	LD	HL,(IX+-97)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	Z,L__397
	LD	A,1
	JR	L__398
L__397:
	XOR	A,A
L__398:
	LD	(IX+-62),A
	LD	(IX+-79),A
	LD	A,(IX+-62)
	LD	(IX+-63),A
	LD	A,(IX+-62)
	OR	A,A
	JR	NZ,L_491
	LD	A,(IX+-49)
	OR	A,A
	JR	Z,L_491
;  976						if (trainerDir == 1) {
.LINE 976

	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_466
;  977							xlocMod += (npcMoveState[npcIndex] % 16);
.LINE 977

	LD	BC,(IX+-15)
	LD	(IX+-52),BC
	LD	(IX+-61),BC
	LD	BC,(IX+-52)
	LD	(IX+-58),BC
	LD	BC,(IX+-52)
	LD	(IX+-55),BC
	LD	HL,(IX+-52)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	(IX+-69),HL
;  978						}
L_466:
.LINE 978

;  979						if (trainerDir == 2) {
.LINE 979

	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_468
;  980							xlocMod -= (npcMoveState[npcIndex] % 16);
.LINE 980

	LD	BC,(IX+-52)
	LD	(IX+-61),BC
	LD	(IX+-58),BC
	LD	BC,(IX+-61)
	LD	(IX+-55),BC
	LD	HL,(IX+-61)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,HL
	LD	HL,(IX+-69)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-69),HL
;  981						}
L_468:
.LINE 981

;  982						if (trainerDir == 3) {
.LINE 982

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_470
;  983							ylocMod += (npcMoveState[npcIndex] % 16);
.LINE 983

	LD	BC,(IX+-61)
	LD	(IX+-58),BC
	LD	(IX+-55),BC
	LD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	(IX+-78),HL
;  984						}
L_470:
.LINE 984

;  985						if (trainerDir == 4) {
.LINE 985

	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_472
;  986							ylocMod -= (npcMoveState[npcIndex] % 16);
.LINE 986

	LD	BC,(IX+-58)
	LD	(IX+-55),BC
	LD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,HL
	LD	HL,(IX+-78)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-78),HL
;  987						}
L_472:
.LINE 987

;  988						if (npcMoveState[npcIndex] % 16 == 0) {
.LINE 988

	LD	BC,(IX+-55)
	LD	(IX+-30),BC
	LD	(IX+-27),BC
	LD	BC,(IX+-30)
	LD	(IX+-24),BC
	LD	BC,(IX+-30)
	LD	(IX+-21),BC
	LD	BC,(IX+-30)
	LD	(IX+-39),BC
	LD	BC,(IX+-30)
	LD	(IX+-36),BC
	LD	BC,(IX+-30)
	LD	(IX+-33),BC
	LD	BC,(IX+-30)
	LD	(IX+-18),BC
	LD	HL,(IX+-30)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LEA	IY,IX+-128
	LD	(IY+-11),HL
	LD	HL,(IY+-11)
	CALL	__icmpzero
	JR	NZ,L_474
;  989							currentTypeMap[(currentZoneData.trainerx[npcIndex] + ((trainerDir == 1) - (trainerDir == 2))) + (tilemap.width * (currentZoneData.trainery[npcIndex] + ((trainerDir == 3) - (trainerDir == 4))))] = 96 + npcIndex;
.LINE 989

	LD	H,(IX+-3)
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-91),H
	POP	IY
	LD	BC,_currentZoneData+544
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-97),HL
	POP	IY
	LD	DE,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__407
	LD	B,1
	JR	L__408
L__407:
	LD	B,0
L__408:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__410
	LD	B,1
	JR	L__411
L__410:
	LD	B,0
L__411:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-97)
	POP	IY
	ADD	HL,BC
	LD	BC,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-83),BC
	POP	IY
	LD	DE,_currentZoneData+560
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-86),BC
	LD	(IY+-89),HL	; unspill
	LD	BC,(IY+-86)
	POP	IY
	LD	DE,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,DE
	JR	NZ,L__413
	LD	B,1
	JR	L__414
L__413:
	LD	B,0
L__414:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__416
	LD	B,1
	JR	L__417
L__416:
	LD	B,0
L__417:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-89)
	POP	IY
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,DE
	CALL	__imuls
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-83)
	POP	IY
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-90),H
	LD	H,(IY+-91)
	POP	IY
	LD	A,H
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	H,(IY+-90)
	POP	IY
	ADD	A,96
	LD	(HL),A
;  990						}
L_474:
.LINE 990

;  991						if (npcMoveState[npcIndex] % 16 == 15) {
.LINE 991

	LD	BC,15
	LEA	IY,IX+-128
	LD	HL,(IY+-11)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_491
;  992							currentTypeMap[(currentZoneData.trainerx[npcIndex]) + (tilemap.width * currentZoneData.trainery[npcIndex])] = 0;
.LINE 992

	LD	BC,_currentZoneData+544
	LEA	IY,IX+-128
	LD	(IY+-74),BC
	LD	BC,(IX+-3)
	LD	HL,-202
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY+-71),HL
	LD	BC,_currentZoneData+560
	LD	(IY+-68),BC
	LD	BC,(IX+-3)
	LD	HL,-196
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY+-65),HL
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,(IY+-65)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,DE
	CALL	__imuls
	LD	BC,HL
	LD	HL,(IY+-71)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	(HL),0
;  993							currentZoneData.trainerx[npcIndex] += ((trainerDir == 1) - (trainerDir == 2));
.LINE 993

	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__420
	LD	A,1
	JR	L__421
L__420:
	XOR	A,A
L__421:
	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__423
	LD	B,1
	JR	L__424
L__423:
	LD	B,0
L__424:
	SUB	A,B
	LEA	IY,IX+-128
	LD	IY,(IY+-71)
	LD	BC,(IX+-3)
	LD	HL,-202
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	ADD	A,(IY)
	LD	(HL),A
;  994							currentZoneData.trainery[npcIndex] += ((trainerDir == 3) - (trainerDir == 4));
.LINE 994

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__426
	LD	A,1
	JR	L__427
L__426:
	XOR	A,A
L__427:
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__429
	LD	B,1
	JR	L__430
L__429:
	LD	B,0
L__430:
	SUB	A,B
	LEA	IY,IX+-128
	LD	IY,(IY+-65)
	LD	BC,(IX+-3)
	LD	HL,-196
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	ADD	A,(IY)
	LD	(HL),A
;  995						}
;  996					}
L_491:
.LINE 996

;  997	
;  998	
;  999					if (currentZoneData.trainerskin[npcIndex] < 128) {
.LINE 999

	LD	BC,_currentZoneData+592
	LEA	IY,IX+-128
	LD	(IY+-17),BC
	LD	BC,(IX+-3)
	LD	HL,-145
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IX+-88),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,128
	OR	A,A
	SBC	HL,BC
	JP	P,L_490
; 1000						gfx_TransparentSprite((gfx_sprite_t*)PKMNSD7[(currentZoneData.trainerskin[npcIndex] * 12) + ((trainerDir - 1) * 3) + ((npcMoveState[npcIndex] % 16) / 4 == 1 && (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 4 && canMove)) + 2 * ((npcMoveState[npcIndex] % 16) / 4 == 3 && (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 4 && canMove))], xloc + xlocMod - 8, yloc + ylocMod + 3);
.LINE 1000

	LD	BC,(IX+-30)
	LD	(IX+-27),BC
	LD	(IX+-24),BC
	LD	BC,(IX+-27)
	LD	(IX+-21),BC
	LD	BC,(IX+-27)
	LD	(IX+-39),BC
	LD	BC,(IX+-27)
	LD	(IX+-36),BC
	LD	BC,(IX+-27)
	LD	(IX+-33),BC
	LD	BC,(IX+-27)
	LD	(IX+-18),BC
	LD	HL,(IX+-27)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,4
	CALL	__idivs
	LEA	IY,IX+-128
	LD	(IY+-20),HL
	LD	BC,1
	LD	HL,(IY+-20)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_480
	LD	A,(IX+-62)
	LD	(IX+-79),A
	LD	A,(IX+-62)
	LD	(IX+-63),A
	LD	A,(IX+-62)
	OR	A,A
	JR	NZ,L_480
	LD	A,(IX+-49)
	OR	A,A
	JR	Z,L_480
	LD	(IX+-112),BC
	JR	L_481
L_480:
	LD	BC,0
	LD	(IX+-112),BC
L_481:
	LD	BC,3
	LEA	IY,IX+-128
	LD	HL,(IY+-20)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_486
	LD	A,(IX+-79)
	LD	(IX+-63),A
	OR	A,A
	JR	NZ,L_486
	LD	A,(IX+-49)
	OR	A,A
	JR	Z,L_486
	LD	BC,1
	LD	(IX+-115),BC
	JR	L_487
L_486:
	LD	BC,0
	LD	(IX+-115),BC
L_487:
	LD	BC,(IX+-78)
	LD	HL,(IX+-48)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+3
	PUSH	BC
	LD	BC,(IX+-69)
	LD	HL,(IX+-45)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+-8
	PUSH	BC
	LD	HL,(IX+-88)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,12
	CALL	__imul_b
	LD	BC,HL
	LD	HL,(IX+-6)
	DEC	HL
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IX+-112)
	ADD	HL,BC
	LD	BC,HL
	LD	HL,(IX+-115)
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD7
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1001					}
; 1002					else {
.LINE 1002

	JR	L_520
L_490:
; 1003						gfx_TransparentSprite((gfx_sprite_t*)PKMNSD7[36 + ((currentZoneData.trainerskin[npcIndex]-128) * 4) + (trainerDir - 1)], xloc + xlocMod - 8, yloc + ylocMod + 3);
.LINE 1003

	LD	BC,(IX+-78)
	LD	HL,(IX+-48)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+3
	PUSH	BC
	LD	BC,(IX+-69)
	LD	HL,(IX+-45)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+-8
	PUSH	BC
	LD	HL,(IX+-88)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+-128
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	HL,IY+36
	LD	BC,(IX+-6)
	DEC	BC
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD7
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1004					}
L_520:
.LINE 1004

; 1005					
; 1006					/* Grass */
; 1007					if (currentTileMap[currentZoneData.trainerx[npcIndex] + tilemap.width * currentZoneData.trainery[npcIndex]] == 2 && !currentSave.indoors) {
.LINE 1007

	LD	BC,_currentZoneData+560
	LEA	IY,IX+-128
	LD	(IY+-44),BC
	LD	BC,(IX+-3)
	LD	HL,-172
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY+-23),HL
	LD	BC,_currentZoneData+544
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LD	(IY+-80),HL
	POP	IY
	LEA	IY,IX+-128
	LD	HL,(IY+-23)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	IY
	LD	(IY+-77),HL
	LD	BC,(IY+-80)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-77)
	POP	IY
	CALL	__imuls
	ADD	HL,DE
	LD	BC,_currentTileMap
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_523
	LD	A,(_currentSave+1236)
	OR	A,A
	JR	NZ,L_523
; 1008						if (trainerDir != 3 || npcMoveState[npcIndex] % 16 <= 1 || !canMove || npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] != 4) {
.LINE 1008

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_502
	LD	BC,(IX+-27)
	LD	(IX+-24),BC
	LD	(IX+-21),BC
	LD	BC,(IX+-24)
	LD	(IX+-39),BC
	LD	BC,(IX+-24)
	LD	(IX+-36),BC
	LD	BC,(IX+-24)
	LD	(IX+-33),BC
	LD	BC,(IX+-24)
	LD	(IX+-18),BC
	LD	HL,(IX+-24)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,HL
	LD	HL,1
	OR	A,A
	SBC	HL,BC
	JP	P,L_502
	LD	A,(IX+-49)
	OR	A,A
	JR	Z,L_502
	LD	BC,(IX+-97)
	LD	(IX+-121),BC
	LD	HL,(IX+-97)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,4
	OR	A,A
	SBC	HL,BC
	JR	Z,L_515
L_502:
; 1009							if (npcGrassAnimState[npcIndex] > 5 && npcMoveState[npcIndex] % 16 < 14) {
.LINE 1009

	LD	BC,(IX+-3)
	LD	HL,_npcGrassAnimState
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-26),HL
	LD	HL,(IY+-26)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,5
	OR	A,A
	SBC	HL,BC
	JP	P,L_501
	LD	BC,(IX+-24)
	LD	(IX+-21),BC
	LD	(IX+-39),BC
	LD	BC,(IX+-21)
	LD	(IX+-36),BC
	LD	BC,(IX+-21)
	LD	(IX+-33),BC
	LD	BC,(IX+-21)
	LD	(IX+-18),BC
	LD	HL,(IX+-21)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,14
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_501
; 1010								gfx_TransparentSprite(grassoverlay3, xloc - 8, yloc + 13);
.LINE 1010

	LD	IY,(IX+-48)
	LEA	BC,IY+13
	PUSH	BC
	LD	IY,(IX+-45)
	LEA	BC,IY+-8
	PUSH	BC
	LD	BC,_grassoverlay3_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1011							}
; 1012							else if (npcGrassAnimState[npcIndex] > 0 && npcMoveState[npcIndex] % 16 < 14) {
.LINE 1012

	JR	L_515
L_501:
	LEA	IY,IX+-128
	LD	HL,(IY+-26)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_499
	LD	BC,(IX+-21)
	LD	(IX+-39),BC
	LD	(IX+-36),BC
	LD	BC,(IX+-39)
	LD	(IX+-33),BC
	LD	BC,(IX+-39)
	LD	(IX+-18),BC
	LD	HL,(IX+-39)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,14
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_499
; 1013								gfx_TransparentSprite(grassoverlay2, xloc - 8, yloc + 14);
.LINE 1013

	LD	IY,(IX+-48)
	LEA	BC,IY+14
	PUSH	BC
	LD	IY,(IX+-45)
	LEA	BC,IY+-8
	PUSH	BC
	LD	BC,_grassoverlay2_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1014							}
; 1015							else {
.LINE 1015

	JR	L_515
L_499:
; 1016								gfx_TransparentSprite(grassoverlay1, xloc - 8, yloc + 18);
.LINE 1016

	LD	IY,(IX+-48)
	LEA	BC,IY+18
	PUSH	BC
	LD	IY,(IX+-45)
	LEA	BC,IY+-8
	PUSH	BC
	LD	BC,_grassoverlay1_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1017							}
; 1018						}
L_515:
.LINE 1018

; 1019						if (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 4 && canMove && (trainerDir != 4 || npcMoveState[npcIndex] % 16 >= 14)) {
.LINE 1019

	LD	A,(IX+-63)
	OR	A,A
	JR	NZ,L_518
	LD	A,(IX+-49)
	OR	A,A
	JR	Z,L_518
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_514
	LD	BC,(IX+-39)
	LD	(IX+-36),BC
	LD	(IX+-33),BC
	LD	BC,(IX+-36)
	LD	(IX+-18),BC
	LD	HL,(IX+-36)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	BC,14
	OR	A,A
	SBC	HL,BC
	JP	M,L_518
L_514:
; 1020							if (npcMoveState[npcIndex] % 16 == 14) {
.LINE 1020

	LD	BC,(IX+-36)
	LD	(IX+-33),BC
	LD	(IX+-18),BC
	LD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,16
	CALL	__irems
	LD	(IX+-91),HL
	LEA	IY,IX+-128
	LD	(IY+-29),HL
	LD	BC,14
	LD	HL,(IX+-91)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_513
; 1021								npcGrassAnimState[npcIndex] = 10;
.LINE 1021

	LD	BC,_npcGrassAnimState
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),10
; 1022							}
L_513:
.LINE 1022

; 1023							if (npcGrassAnimState[npcIndex] > 5 && npcMoveState[npcIndex] % 16 >= 14) {
.LINE 1023

	LD	BC,(IX+-3)
	LD	HL,_npcGrassAnimState
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-35),HL
	LD	HL,(IY+-35)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,5
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_512
	LD	BC,(IX+-91)
	LEA	IY,IX+-128
	LD	(IY+-29),BC
	LD	BC,14
	LD	HL,(IX+-91)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_512
; 1024								gfx_TransparentSprite(grassoverlay3, xloc - 8 + 16 * ((trainerDir == 1) - (trainerDir == 2)), yloc + 13 + 16 * ((trainerDir == 3) - (trainerDir == 4)));
.LINE 1024

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__456
	LD	B,1
	JR	L__457
L__456:
	LD	B,0
L__457:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__459
	LD	B,1
	JR	L__460
L__459:
	LD	B,0
L__460:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(IX+-48)
	LEA	BC,IY+13
	ADD	HL,BC
	PUSH	HL
	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__462
	LD	B,1
	JR	L__463
L__462:
	LD	B,0
L__463:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__465
	LD	B,1
	JR	L__466
L__465:
	LD	B,0
L__466:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(IX+-45)
	LEA	BC,IY+-8
	ADD	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay3_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1025							}
; 1026							else if (npcGrassAnimState[npcIndex] > 0 && npcMoveState[npcIndex] % 16 >= 14) {
.LINE 1026

	JR	L_518
L_512:
	LEA	IY,IX+-128
	LD	HL,(IY+-35)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_510
	LD	BC,14
	LEA	IY,IX+-128
	LD	HL,(IY+-29)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_510
; 1027								gfx_TransparentSprite(grassoverlay2, xloc - 8 + 16 * ((trainerDir == 1) - (trainerDir == 2)), yloc + 14 + 16 * ((trainerDir == 3) - (trainerDir == 4)));
.LINE 1027

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__470
	LD	B,1
	JR	L__471
L__470:
	LD	B,0
L__471:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__473
	LD	B,1
	JR	L__474
L__473:
	LD	B,0
L__474:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(IX+-48)
	LEA	BC,IY+14
	ADD	HL,BC
	PUSH	HL
	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__476
	LD	B,1
	JR	L__477
L__476:
	LD	B,0
L__477:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__479
	LD	B,1
	JR	L__480
L__479:
	LD	B,0
L__480:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(IX+-45)
	LEA	BC,IY+-8
	ADD	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay2_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1028							}
; 1029							else {
.LINE 1029

	JR	L_518
L_510:
; 1030								gfx_TransparentSprite(grassoverlay1, xloc - 8 + 16 * ((trainerDir == 1) - (trainerDir == 2)), yloc + 18 + 16 * ((trainerDir == 3) - (trainerDir == 4)));
.LINE 1030

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__482
	LD	B,1
	JR	L__483
L__482:
	LD	B,0
L__483:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__485
	LD	B,1
	JR	L__486
L__485:
	LD	B,0
L__486:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(IX+-48)
	LEA	BC,IY+18
	ADD	HL,BC
	PUSH	HL
	LD	BC,1
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__488
	LD	B,1
	JR	L__489
L__488:
	LD	B,0
L__489:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	DE,HL
	LD	BC,2
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L__491
	LD	B,1
	JR	L__492
L__491:
	LD	B,0
L__492:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,(IX+-45)
	LEA	BC,IY+-8
	ADD	HL,BC
	PUSH	HL
	LD	BC,_grassoverlay1_data
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
; 1031							}
; 1032						}
L_518:
.LINE 1032

; 1033						if (npcGrassAnimState[npcIndex] > 0) {
.LINE 1033

	LD	BC,(IX+-3)
	LD	HL,_npcGrassAnimState
	ADD	HL,BC
	LD	(IX+-75),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_523
; 1034							npcGrassAnimState[npcIndex]--;
.LINE 1034

	LD	HL,(IX+-75)
	LD	IY,(IX+-75)
	LD	A,(HL)
	DEC	A
	LD	(IY),A
; 1035						}
; 1036	
; 1037						
; 1038					}
L_523:
.LINE 1038

; 1039	
; 1040					if (canMove) {
.LINE 1040

	LD	A,(IX+-49)
	OR	A,A
	JR	Z,L_525
; 1041						npcMoveState[npcIndex]++;
.LINE 1041

	LD	BC,(IX+-33)
	LD	(IX+-18),BC
	LD	HL,BC
	LD	IY,(IX+-18)
	LD	A,(HL)
	INC	A
	LD	(IY),A
; 1042					}
L_525:
.LINE 1042

; 1043	
; 1044	
; 1045					if (npcPatterns[currentZoneData.trainermovement[npcIndex]][npcMoveState[npcIndex] / 16] == 5) {
.LINE 1045

	LD	HL,(IX+-121)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,5
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_527
; 1046						npcMoveState[npcIndex] = 0;
.LINE 1046

	LD	HL,(IX+-18)
	LD	(HL),0
; 1047					}
L_527:
.LINE 1047

; 1048	
; 1049					if (ty - 1 == currentZoneData.trainery[npcIndex]) {
.LINE 1049

	LD	A,(_ty)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	DEC	BC
	LEA	IY,IX+-128
	LD	HL,(IY+-23)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	NZ,L_531
; 1050						DrawPlayer();
.LINE 1050

	CALL	_DrawPlayer
; 1051					}
; 1052	
; 1053				}
; 1054			}
; 1055	
; 1056		}
L_531:
.LINE 1056

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_532:
	LD	BC,16
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_530
; 1057	}
.LINE 1057

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ProcessNpcs ***************************
;Name                         Addr/Register   Size   Type
;_DrawPlayer                         IMPORT  -----   function
;_grassoverlay1_data                 IMPORT     98   variable
;_grassoverlay2_data                 IMPORT    162   variable
;_grassoverlay3_data                 IMPORT    178   variable
;_npcGrassAnimState                  STATIC     16   variable
;_currentTileMap                     STATIC   1920   variable
;_PKMNSD7                            IMPORT    132   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_npcToFight                         STATIC      3   variable
;_currentSave                        IMPORT   4140   variable
;_npcSaidMessage                     STATIC     16   variable
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_npcPatterns                        STATIC    128   variable
;_npcMoveState                       STATIC     16   variable
;_tilemap                            STATIC     18   variable
;_currentTypeMap                     STATIC   1920   variable
;_screenY                            STATIC      4   variable
;_screenX                            STATIC      4   variable
;_currentZoneData                    STATIC    688   variable
;G_30                                IX-178      3   variable
;G_53                                IX-175      3   variable
;G_91                                IX-172      3   variable
;G_31                                IX-169      3   variable
;G_43                                IX-166      3   variable
;G_84                                IX-163      3   variable
;G_36                                IX-160      3   variable
;G_85                                IX-157      3   variable
;G_77                                IX-154      3   variable
;G_92                                IX-151      3   variable
;G_66                                IX-148      3   variable
;G_69                                IX-145      3   variable
;G_38                                IX-142      3   variable
;G_62                                IX-139      3   variable
;G_39                                IX-136      3   variable
;G_41                                IX-133      3   variable
;G_42                                IX-130      3   variable
;G_32                                IX-127      3   variable
;G_33                                IX-124      3   variable
;G_89                                IX-121      3   variable
;G_54                                IX-118      3   variable
;temp488                             IX-115      3   variable
;temp482                             IX-112      3   variable
;G_52                                IX-109      3   variable
;G_37                                IX-106      3   variable
;G_40                                IX-103      3   variable
;G_44                                IX-100      3   variable
;G_75                                 IX-97      3   variable
;G_35                                 IX-94      3   variable
;G_83                                 IX-91      3   variable
;G_70                                 IX-88      3   variable
;G_34                                 IX-85      3   variable
;G_51                                 IX-82      3   variable
;G_68                                 IX-79      1   variable
;ylocMod                              IX-78      3   variable
;G_86                                 IX-75      3   variable
;G_64                                 IX-72      3   variable
;xlocMod                              IX-69      3   variable
;G_45                                 IX-66      3   variable
;G_80                                 IX-63      1   variable
;G_65                                 IX-62      1   variable
;G_59                                 IX-61      3   variable
;G_60                                 IX-58      3   variable
;G_61                                 IX-55      3   variable
;G_58                                 IX-52      3   variable
;canMove                              IX-49      1   variable
;yloc                                 IX-48      3   variable
;xloc                                 IX-45      3   variable
;tileIndex                            IX-42      3   variable
;G_81                                 IX-39      3   variable
;G_82                                 IX-36      3   variable
;G_87                                 IX-33      3   variable
;G_63                                 IX-30      3   variable
;G_73                                 IX-27      3   variable
;G_76                                 IX-24      3   variable
;G_78                                 IX-21      3   variable
;G_90                                 IX-18      3   variable
;G_57                                 IX-15      3   variable
;G_55                                 IX-12      3   variable
;G_50                                  IX-9      3   variable
;trainerDir                            IX-6      3   variable
;npcIndex                              IX-3      3   variable


; Stack Frame Size: 231 (bytes)
;       Spill Code: -31 (instruction)


.ENDFUNC "ProcessNpcs",1057,"_ProcessNpcs"
; 1058	
; 1059	void map_DrawInformationBar(void) {
_map_DrawInformationBar:
.DEFINE "_map_DrawInformationBar"

.VALUE _map_DrawInformationBar

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_DrawInformationBar",1059,"_map_DrawInformationBar"

.LINE 1059

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
; 1060		int pokemonIndex;
; 1061		gfx_SetColor(colors[0]);
.LINE 1061

	LD	A,(_colors)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
; 1062		gfx_FillRectangle(0, 0, 320, 16);
.LINE 1062

	LD	BC,16
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
; 1063		for (pokemonIndex = 0; pokemonIndex < 6; pokemonIndex++) {
.LINE 1063

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_537
L_535:
; 1064			gfx_TransparentSprite_NoClip(pokeballSprites[pokeballdata[pokemonIndex]], 16 * pokemonIndex, 0);
.LINE 1064

	LD	BC,0
	PUSH	BC
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	PUSH	HL
	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_pokeballSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
; 1065		}
L_537:
.LINE 1065

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_535
; 1066		sprintf(str, "%u$", currentSave.playerMoney);
.LINE 1066

	LD	A,(_currentSave+1242)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_currentSave+1239)
	PUSH	BC
	LD	BC,L__500
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
; 1067		gfx_PrintStringXY(str, 100, 5);
.LINE 1067

	LD	BC,5
	PUSH	BC
	LD	BC,100
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
; 1068	}
.LINE 1068

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_DrawInformationBar ***************************
;Name                         Addr/Register   Size   Type
;_gfx_PrintStringXY                  IMPORT  -----   function
;_str                                IMPORT    100   variable
;_currentSave                        IMPORT   4140   variable
;_sprintf                            IMPORT  -----   function
;_pokeballdata                       STATIC      6   variable
;_pokeballSprites                    STATIC      9   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetColor                       IMPORT  -----   function
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: -31 (instruction)


.ENDFUNC "map_DrawInformationBar",1068,"_map_DrawInformationBar"
	SEGMENT STRSECT
L__500:
	DB	"%u$"
	DB	0
	SEGMENT CODE
; 1069	
; 1070	void map_LoseFight(void) {
_map_LoseFight:
.DEFINE "_map_LoseFight"

.VALUE _map_LoseFight

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_LoseFight",1070,"_map_LoseFight"

.LINE 1070

.DEFINE "partyIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-39
	LD	SP,HL
; 1071		int tileIndex, partyIndex, moveIndex;
; 1072		text_Display("All your pokemon have fainted", false);
.LINE 1072

	LD	BC,0
	PUSH	BC
	LD	BC,L__502
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
; 1073		for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 1073

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_547
L_545:
; 1074			currentSave.party[partyIndex].currenthealth = stats_CalculateStats(currentSave.party[partyIndex]).health;
.LINE 1074

	LD	BC,_currentSave+10
	LD	(IX+-6),BC
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-39),HL
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-12),HL
	LD	BC,(IX+-6)
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-33
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LD	BC,(IX+-39)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IY)
	LD	IY,HL
	LD	(IY+13),C
	LD	(IY+14),B
; 1075			currentSave.party[partyIndex].currentstatus = 0;
.LINE 1075

	LD	BC,(IX+-39)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LD	(IY+15),0
; 1076			for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 1076

	LD	BC,0
	LD	(IX+-9),BC
	LD	BC,(IX+-6)
	LD	(IX+-18),BC
	LD	BC,(IX+-12)
	LD	(IX+-21),BC
	LD	BC,(IX+-12)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	(IX+-15),HL
	JR	L_544
L_542:
; 1077				currentSave.party[partyIndex].pp[moveIndex] = data_moves[currentSave.party[partyIndex].moves[moveIndex]].uses;
.LINE 1077

	LD	BC,(IX+-15)
	LD	(IX+-36),BC
	LD	BC,(IX+-9)
	LD	IY,(IX+-36)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	BC,HL
	LD	DE,(IX+-9)
	LEA	HL,IY+5
	ADD	HL,DE
	LD	IY,BC
	LD	A,(IY+18)
	LD	(HL),A
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
; 1078			}
L_544:
.LINE 1078

	LD	BC,4
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_542
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
; 1079		}
L_547:
.LINE 1079

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_545
; 1080		currentSave.playerX = 16*16;
.LINE 1080

	LD	HL,_currentSave+2
	LD	(HL),0
	INC	HL
	LD	(HL),1
; 1081		currentSave.playerY = 20*16;
.LINE 1081

	LD	HL,_currentSave+4
	LD	(HL),64
	INC	HL
	LD	(HL),1
; 1082		currentSave.indoors = false;
.LINE 1082

	XOR	A,A
	LD	(_currentSave+1236),A
; 1083		currentSave.currentZone = 0;
.LINE 1083

	LD	HL,_currentSave+1234
	LD	(HL),0
	INC	HL
	LD	(HL),0
; 1084		moveDir = 3;
.LINE 1084

	LD	A,3
	LD	(_moveDir),A
; 1085		tilemap.width = OUTDOORWIDTH;
.LINE 1085

	LD	A,48
	LD	(_tilemap+13),A
; 1086		tilemap.height = OUTDOORHEIGHT;
.LINE 1086

	LD	A,40
	LD	(_tilemap+12),A
; 1087		tx = currentSave.playerX / 16;
.LINE 1087

	LD	BC,(_currentSave+2)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
; 1088		ty = currentSave.playerY / 16;
.LINE 1088

	LD	BC,(_currentSave+4)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
; 1089		LoadMap();
.LINE 1089

	CALL	_LoadMap
; 1090	}
.LINE 1090

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_LoseFight ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_moveDir                            STATIC      1   variable
;_data_moves                         IMPORT  unknown variable
;_stats_CalculateStats               IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_text_Display                       IMPORT  -----   function
;O_60                                 IX-21      3   variable
;O_59                                 IX-18      3   variable
;O_61                                 IX-15      3   variable
;G_94                                 IX-12      3   variable
;moveIndex                             IX-9      3   variable
;G_93                                  IX-6      3   variable
;partyIndex                            IX-3      3   variable


; Stack Frame Size: 45 (bytes)
;       Spill Code: -31 (instruction)


.ENDFUNC "map_LoseFight",1090,"_map_LoseFight"
	SEGMENT STRSECT
L__502:
	DB	"All your pokemon have fainted"
	DB	0
	SEGMENT CODE
; 1091	
; 1092	void map_WinFight(bool wild, uint16_t rewardMoney) {
_map_WinFight:
.DEFINE "_map_WinFight"

.VALUE _map_WinFight

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_WinFight",1092,"_map_WinFight"

.LINE 1092

.DEFINE "wild"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "rewardMoney"

.CLASS 65

.VALUE 9

.TYPE 13

.ENDEF

.DEFINE "str1"

.CLASS 65

.VALUE -22

.DIM 16

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-24
	LD	SP,HL
; 1093		char str1[16];
; 1094		if (!wild) {
.LINE 1094

	LD	A,(IX+6)
	OR	A,A
	JR	NZ,L_566
; 1095			currentSave.playerMoney += rewardMoney;
.LINE 1095

	LD	BC,(IX+9)
	CALL	__stoiu
	LD	BC,HL
	LD	E,0
	LD	(IX+-24),E	; spill
	LD	HL,(_currentSave+1239)
	LD	A,(_currentSave+1242)
	LD	(IX+-23),A	; spill
	LD	E,(IX+-24)	; unspill
	LD	A,E
	LD	E,(IX+-23)	; unspill
	CALL	__ladd
	LD	(_currentSave+1239),HL
	LD	A,E
	LD	(_currentSave+1242),A
; 1096			if (currentSave.indoors) {
.LINE 1096

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_564
; 1097				currentSave.defeatedTrainersIndoors[currentSave.currentBuilding][currentTrainer] = true;
.LINE 1097

	LD	A,(_currentSave+1238)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_currentSave+1684
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(HL),1
; 1098				if (currentZoneData.trainerreward[currentTrainer] != 0) {
.LINE 1098

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+656
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	Z,L_566
; 1099					if (currentZoneData.trainerreward[currentTrainer] == 255) {
.LINE 1099

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,255
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_555
; 1100						currentSave.badgeCount++;
.LINE 1100

	LD	A,(_currentSave+3988)
	INC	A
	LD	(_currentSave+3988),A
; 1101						sprintf(str, "Recieved a badge");
.LINE 1101

	LD	BC,L__510
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
; 1102					}
; 1103					else {
.LINE 1103

	JR	L_556
L_555:
; 1104						currentSave.playerItems[currentZoneData.trainerreward[currentTrainer] - 1]++;
.LINE 1104

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+656
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	LD	DE,_currentSave+1243
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,BC
	ADD	HL,DE
	LD	A,(IY)
	INC	A
	LD	(HL),A
; 1105						items_IndexToName(str1, currentZoneData.trainerreward[currentTrainer] - 1);
.LINE 1105

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+656
	ADD	HL,BC
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	PEA	IX+-22
	CALL	_items_IndexToName
	POP	BC
	POP	BC
; 1106						if (currentZoneData.trainerreward[currentTrainer] - 1 >= 20) {
.LINE 1106

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+656
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	M,L_553
; 1107							sprintf(str, "Recieved the TM for %s", str1);
.LINE 1107

	PEA	IX+-22
	LD	BC,L__512
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
; 1108						}
; 1109						else {
.LINE 1109

	JR	L_556
L_553:
; 1110							sprintf(str, "Recieved a %s", str1);
.LINE 1110

	PEA	IX+-22
	LD	BC,L__513
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
; 1111						}
; 1112					}
L_556:
.LINE 1112

; 1113					text_Display(str, false);
.LINE 1113

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
; 1114				}
; 1115			}
; 1116			else {
.LINE 1116

	JR	L_566
L_564:
; 1117				currentSave.defeatedTrainers[currentSave.currentZone][currentTrainer] = true;
.LINE 1117

	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_currentSave+1428
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(HL),1
; 1118				if (currentZoneData.trainerreward[currentTrainer] != 0) {
.LINE 1118

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+656
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	Z,L_566
; 1119					currentSave.playerItems[currentZoneData.trainerreward[currentTrainer] - 1]++;
.LINE 1119

	LD	(IX+-3),BC
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	LD	DE,_currentSave+1243
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,BC
	ADD	HL,DE
	LD	A,(IY)
	INC	A
	LD	(HL),A
; 1120					items_IndexToName(str1, currentZoneData.trainerreward[currentTrainer] - 1);
.LINE 1120

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+656
	ADD	HL,BC
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	PEA	IX+-22
	CALL	_items_IndexToName
	POP	BC
	POP	BC
; 1121					if (currentZoneData.trainerreward[currentTrainer] - 1 >= 20) {
.LINE 1121

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	M,L_560
; 1122						sprintf(str, "Recieved the TM for %s", str1);
.LINE 1122

	PEA	IX+-22
	LD	BC,L__516
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
; 1123					}
; 1124					else {
.LINE 1124

	JR	L_561
L_560:
; 1125						sprintf(str, "Recieved a %s", str1);
.LINE 1125

	PEA	IX+-22
	LD	BC,L__517
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
; 1126					}
L_561:
.LINE 1126

; 1127					text_Display(str, false);
.LINE 1127

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
; 1128				}
; 1129			}
; 1130		}
; 1131	}
L_566:
.LINE 1131

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_WinFight ***************************
;Name                         Addr/Register   Size   Type
;_text_Display                       IMPORT  -----   function
;_items_IndexToName                  IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_currentZoneData                    STATIC    688   variable
;_currentTrainer                     STATIC      1   variable
;_currentSave                        IMPORT   4140   variable
;str1                                 IX-22     16   variable
;G_96                                  IX-6      3   variable
;G_100                                 IX-3      3   variable
;rewardMoney                           IX+9      2   parameter
;wild                                  IX+6      1   parameter


; Stack Frame Size: 36 (bytes)
;       Spill Code: -31 (instruction)


.ENDFUNC "map_WinFight",1131,"_map_WinFight"
	SEGMENT STRSECT
L__510:
	DB	"Recieved a badge"
	DB	0
L__512:
	DB	"Recieved the TM for %s"
	DB	0
L__513:
	DB	"Recieved a %s"
	DB	0
L__516:
	DB	"Recieved the TM for %s"
	DB	0
L__517:
	DB	"Recieved a %s"
	DB	0
	SEGMENT CODE
; 1132	void LoadTileset(bool freeOld) {
_LoadTileset:
.DEFINE "_LoadTileset"

.VALUE _LoadTileset

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "LoadTileset",1132,"_LoadTileset"

.LINE 1132

.DEFINE "freeOld"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "tileIndex"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
; 1133		int tileIndex = 0;
; 1134		for (tileIndex = 0; tileIndex < 128; tileIndex++) {
.LINE 1134

	LD	BC,0
	LD	(IX+-6),BC
	JR	L_578
L_576:
; 1135			if (freeOld) {
.LINE 1135

	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_569
; 1136				free(mapTiles[tileIndex]);
.LINE 1136

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_mapTiles
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
; 1137			}
L_569:
.LINE 1137

; 1138			mapTiles[tileIndex] = gfx_MallocSprite(16, 16);
.LINE 1138

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	BC,_malloc
	PUSH	BC
	LD	BC,16
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	DE,_mapTiles
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	(HL),BC
; 1139			if (currentSave.indoors) {
.LINE 1139

	LD	A,(_currentSave+1236)
	OR	A,A
	JR	Z,L_575
; 1140				zx7_Decompress(mapTiles[tileIndex], indoortileset0_tiles_compressed[tileIndex]);
.LINE 1140

	LD	BC,_indoortileset0_tiles_compressed
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,_mapTiles
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
; 1141			}
; 1142			else {
.LINE 1142

	JR	L_577
L_575:
; 1143				if (data_tileSets[currentSave.currentZone] == 0) {
.LINE 1143

	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,_data_tileSets
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_573
; 1144					zx7_Decompress(mapTiles[tileIndex], outdoortileset0_tiles_compressed[tileIndex]);
.LINE 1144

	LD	BC,_outdoortileset0_tiles_compressed
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,_mapTiles
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
; 1145				}
; 1146				else if (data_tileSets[currentSave.currentZone] == 1) {
.LINE 1146

	JR	L_577
L_573:
	LD	BC,(_currentSave+1234)
	CALL	__stoiu
	LD	BC,_data_tileSets
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_571
; 1147					zx7_Decompress(mapTiles[tileIndex], outdoortileset1_tiles_compressed[tileIndex]);
.LINE 1147

	LD	BC,_outdoortileset1_tiles_compressed
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,_mapTiles
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
; 1148				}
; 1149				else {
.LINE 1149

	JR	L_577
L_571:
; 1150					zx7_Decompress(mapTiles[tileIndex], outdoortileset2_tiles_compressed[tileIndex]);
.LINE 1150

	LD	BC,_outdoortileset2_tiles_compressed
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,_mapTiles
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
; 1151				}
; 1152			}
; 1153		}
L_577:
.LINE 1153

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
L_578:
	LD	BC,128
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JP	M,L_576
.LINE 1154

	LD	SP,IX
	POP	IX
	RET	


;**************************** _LoadTileset ***************************
;Name                         Addr/Register   Size   Type
;_outdoortileset2_tiles_compressed      IMPORT    384   variable
;_outdoortileset1_tiles_compressed      IMPORT    384   variable
;_outdoortileset0_tiles_compressed      IMPORT    384   variable
;_data_tileSets                      IMPORT     32   variable
;_indoortileset0_tiles_compressed      IMPORT    384   variable
;_zx7_Decompress                     IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_mapTiles                           STATIC    384   variable
;_free                               IMPORT  -----   function
;tileIndex                             IX-6      3   variable
;G_101                                 IX-3      3   variable
;freeOld                               IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: -31 (instruction)


.ENDFUNC "LoadTileset",1154,"_LoadTileset"
	XREF _PKMNSD8_init:ROM
	XREF _PKMNSD8:ROM
	XREF _PKMNSD7_init:ROM
	XREF _PKMNSD7:ROM
	XREF _PKMNSD4_init:ROM
	XREF _pokeball_tiles_compressed:ROM
	XREF _outdoortileset2_tiles_compressed:ROM
	XREF _outdoortileset1_tiles_compressed:ROM
	XREF _outdoortileset0_tiles_compressed:ROM
	XREF _indoortileset0_tiles_compressed:ROM
	XREF _PKMNSD4:ROM
	XREF _shop_compressed:ROM
	XREF _grassoverlay3_data:ROM
	XREF _grassoverlay2_data:ROM
	XREF _grassoverlay1_data:ROM
	XREF _stats_NewCharacter:ROM
	XREF _stats_CalculateStats:ROM
	XREF _save_SelectSave:ROM
	XREF _save_Load:ROM
	XREF _currentSave:ROM
	XREF _textBoxType:ROM
	XREF _text_AskQuestion2:ROM
	XREF _text_Display:ROM
	XREF _items_IndexToName:ROM
	XREF _colors:ROM
	XREF _str:ROM
	XREF _SetColors:ROM
	XREF _Wait:ROM
	XREF _menu_ItemShop:ROM
	XREF _menu_Box:ROM
	XREF _menu_Menu:ROM
	XREF _battle_SpawnTrainer:ROM
	XREF _battle_SpawnWild:ROM
	XREF _data_tileSets:ROM
	XREF _data_moves:ROM
	XREF _data_pokemon:ROM
	XREF _loadedText:ROM
	XREF _LoadText:ROM
	XREF _zx7_Decompress:ROM
	XREF _dbg_SetBreakpoint:ROM
	XREF _gfx_TransparentSprite_NoClip:ROM
	XREF _gfx_TransparentSprite:ROM
	XREF _gfx_Sprite:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_Tilemap:ROM
	XREF _gfx_AllocSprite:ROM
	XREF _kb_Scan:ROM
	XREF _sprintf:ROM
	XREF _ti_Seek:ROM
	XREF _ti_Read:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF _rand:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF __lcmps:ROM
	XREF __ladd:ROM
	XREF __idivs:ROM
	XREF __imuls:ROM
	XREF __ineg:ROM
	XREF __smulu:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __itol:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __seqcaseD:ROM
	XREF __imul_b:ROM
	XREF __ishl_b:ROM
	XDEF _LoadTileset
	XDEF _map_WinFight
	XDEF _map_LoseFight
	XDEF _map_DrawInformationBar
	XDEF _ProcessNpcs
	XDEF _GetTypeMapData
	XDEF _ShiftTile
	XDEF _GetNextTile
	XDEF _Clamp
	XDEF _LoadMap
	XDEF _map_LoadPokeballs
	XDEF _FightTrainer
	XDEF _ExitZone
	XDEF _ExitBuilding
	XDEF _EnterDoor
	XDEF _ReadText
	XDEF _OpenBox
	XDEF _HealParty
	XDEF _GrassAnimation
	XDEF _DrawPlayer
	XDEF _map_Draw
	XDEF _map_End
	XDEF _map_Loop
	XDEF _map_SetupGfx
	XDEF _map_Setup
	XDEF _map_Initialize
	XDEF _str1
	XDEF _clearcharacter2
	XDEF _tempcharacter2
	XDEF _currentTrainer
	XDEF _currentZoneData
	XDEF _currentTypeMap
	XDEF _currentTileMap
	XDEF _pokeballSprites
	XDEF _mapTiles
	XDEF _tilemap
	XDEF _jumpHeights
	XDEF _jumpState
	XDEF _playerState
	XDEF _moveDir
	XDEF _moveState
	XDEF _nextTile
	XDEF _npcPatterns
	XDEF _npcSaidMessage
	XDEF _npcGrassAnimState
	XDEF _npcToFight
	XDEF _npcOldTiles
	XDEF _npcMoveState
	XDEF _grassAnimY2
	XDEF _grassAnimX2
	XDEF _grassAnimY1
	XDEF _grassAnimX1
	XDEF _grassAnimState2
	XDEF _grassAnimState1
	XDEF _grassAnimNext
	XDEF _currentWater
	XDEF _currentRun
	XDEF _running
	XDEF _ty
	XDEF _tx
	XDEF _screenY
	XDEF _screenX
	XDEF _pokeballdata
	XDEF _battlechance
	END
