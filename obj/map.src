; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MAP.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME1"
.TYPE 104
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME7"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "NONAME8",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME9"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME10"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME10",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME10"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
.BEGREC "NONAME11",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME11"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME15"
.BEGREC "pokemonData",34
.DEFINE "id"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "moves"
.VALUE 1
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "pp"
.VALUE 5
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "level"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xp"
.VALUE 10
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "currenthealth"
.VALUE 13
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "currentstatus"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthIV"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "attackIV"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "defenceIV"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialattackIV"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialdefenceIV"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "speedIV"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthEV"
.VALUE 22
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attackEV"
.VALUE 24
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defenceEV"
.VALUE 26
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattackEV"
.VALUE 28
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefenceEV"
.VALUE 30
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speedEV"
.VALUE 32
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonData"
.BEGREC "pokemonType",51
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 16
.TYPE 98
.ENDEF
.DEFINE "element1"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "element2"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basehealth"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "baseattack"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basedefence"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialattack"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialdefence"
.VALUE 22
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespeed"
.VALUE 23
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "movelevels"
.VALUE 24
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "moveids"
.VALUE 34
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "evolvelevel"
.VALUE 44
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolveid"
.VALUE 45
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolvesfrom"
.VALUE 46
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xpdrop"
.VALUE 47
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "xptype"
.VALUE 49
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "catchrate"
.VALUE 50
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "pokemonType"
.BEGREC "pokemonStats",12
.DEFINE "health"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attack"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defence"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattack"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefence"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speed"
.VALUE 10
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonStats"
.BEGREC "move",21
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 14
.TYPE 98
.ENDEF
.DEFINE "element"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "power"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "accuracy"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "uses"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statustype"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statuschance"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "move"
.BEGREC "zoneData",640
.DEFINE "spawnids"
.VALUE 0
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnminlevels"
.VALUE 80
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnmaxlevels"
.VALUE 160
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "exitzone"
.VALUE 240
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exitx"
.VALUE 256
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exity"
.VALUE 272
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorzones"
.VALUE 288
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorx"
.VALUE 304
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doory"
.VALUE 320
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doornpc1"
.VALUE 336
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doornpc2"
.VALUE 352
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerspawnids"
.VALUE 368
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerspawnlevels"
.VALUE 464
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerx"
.VALUE 560
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainery"
.VALUE 576
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerdir"
.VALUE 592
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "data_trainerText"
.VALUE 608
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerreward"
.VALUE 624
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.ENDREC "zoneData"
	SEGMENT TEXT
_battlechance:
	DW	10
	DB	0
.DEFINE "battlechance"
.ALIAS "_battlechance"
.CLASS 84
.VALUE _battlechance
.TYPE 4
.ENDEF
	SEGMENT DATA
_pokeballdata:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "pokeballdata"
.ALIAS "_pokeballdata"
.CLASS 69
.VALUE _pokeballdata
.DIM 6
.TYPE 108
.ENDEF
_screenX:
	DL	0
.DEFINE "screenX"
.ALIAS "_screenX"
.CLASS 69
.VALUE _screenX
.TYPE 5
.ENDEF
_screenY:
	DL	0
.DEFINE "screenY"
.ALIAS "_screenY"
.CLASS 69
.VALUE _screenY
.TYPE 5
.ENDEF
	SEGMENT BSS
_tx:
	DS	1
.DEFINE "tx"
.ALIAS "_tx"
.CLASS 83
.VALUE _tx
.TYPE 12
.ENDEF
_ty:
	DS	1
.DEFINE "ty"
.ALIAS "_ty"
.CLASS 83
.VALUE _ty
.TYPE 12
.ENDEF
_running:
	DS	1
.DEFINE "running"
.ALIAS "_running"
.CLASS 83
.VALUE _running
.TYPE 12
.ENDEF
_surfing:
	DS	1
.DEFINE "surfing"
.ALIAS "_surfing"
.CLASS 83
.VALUE _surfing
.TYPE 12
.ENDEF
_nextTile:
	DS	1
.DEFINE "nextTile"
.ALIAS "_nextTile"
.CLASS 83
.VALUE _nextTile
.TYPE 12
.ENDEF
	SEGMENT DATA
_moveState:
	DB	0
.DEFINE "moveState"
.ALIAS "_moveState"
.CLASS 69
.VALUE _moveState
.TYPE 12
.ENDEF
_moveDir:
	DB	3
.DEFINE "moveDir"
.ALIAS "_moveDir"
.CLASS 69
.VALUE _moveDir
.TYPE 12
.ENDEF
_playerState:
	DB	0
.DEFINE "playerState"
.ALIAS "_playerState"
.CLASS 69
.VALUE _playerState
.TYPE 12
.ENDEF
	SEGMENT BSS
_tilemap:
	DS	18
.DEFINE "tilemap"
.ALIAS "_tilemap"
.CLASS 83
.VALUE _tilemap
.TAG "NONAME15"
.TYPE 8
.ENDEF
_mapTiles:
	DS	384
.DEFINE "mapTiles"
.ALIAS "_mapTiles"
.CLASS 83
.VALUE _mapTiles
.DIM 128
.TAG "NONAME11"
.TYPE 360
.ENDEF
_playerSprites:
	DS	60
.DEFINE "playerSprites"
.ALIAS "_playerSprites"
.CLASS 83
.VALUE _playerSprites
.DIM 20
.TAG "NONAME11"
.TYPE 360
.ENDEF
_enemySprites:
	DS	12
.DEFINE "enemySprites"
.ALIAS "_enemySprites"
.CLASS 83
.VALUE _enemySprites
.DIM 4
.TAG "NONAME11"
.TYPE 360
.ENDEF
_pokeballSprites:
	DS	9
.DEFINE "pokeballSprites"
.ALIAS "_pokeballSprites"
.CLASS 83
.VALUE _pokeballSprites
.DIM 3
.TAG "NONAME11"
.TYPE 360
.ENDEF
_pauseMenuSprite:
	DS	3
.DEFINE "pauseMenuSprite"
.ALIAS "_pauseMenuSprite"
.CLASS 83
.VALUE _pauseMenuSprite
.TAG "NONAME11"
.TYPE 40
.ENDEF
_currentTileMap:
	DS	1920
.DEFINE "currentTileMap"
.ALIAS "_currentTileMap"
.CLASS 83
.VALUE _currentTileMap
.DIM 1920
.TYPE 108
.ENDEF
_currentTypeMap:
	DS	1920
.DEFINE "currentTypeMap"
.ALIAS "_currentTypeMap"
.CLASS 83
.VALUE _currentTypeMap
.DIM 1920
.TYPE 108
.ENDEF
_currentZoneData:
	DS	640
.DEFINE "currentZoneData"
.ALIAS "_currentZoneData"
.CLASS 83
.VALUE _currentZoneData
.TAG "zoneData"
.TYPE 8
.ENDEF
_npc1:
	DS	1
.DEFINE "npc1"
.ALIAS "_npc1"
.CLASS 83
.VALUE _npc1
.TYPE 12
.ENDEF
_npc2:
	DS	1
.DEFINE "npc2"
.ALIAS "_npc2"
.CLASS 83
.VALUE _npc2
.TYPE 12
.ENDEF
	SEGMENT DATA
_currentTrainer:
	DB	0
.DEFINE "currentTrainer"
.ALIAS "_currentTrainer"
.CLASS 69
.VALUE _currentTrainer
.TYPE 12
.ENDEF
	SEGMENT BSS
_tempcharacter2:
	DS	34
.DEFINE "tempcharacter2"
.ALIAS "_tempcharacter2"
.CLASS 83
.VALUE _tempcharacter2
.TAG "pokemonData"
.TYPE 8
.ENDEF
	SEGMENT TEXT
_clearcharacter2:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	0
	DB	0
	DW	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	0
	DW	0
	DW	0
	DW	0
	DW	0
	DW	0
.DEFINE "clearcharacter2"
.ALIAS "_clearcharacter2"
.CLASS 84
.VALUE _clearcharacter2
.TAG "pokemonData"
.TYPE 8
.ENDEF
	SEGMENT BSS
_str1:
	DS	20
.DEFINE "str1"
.ALIAS "_str1"
.CLASS 83
.VALUE _str1
.DIM 20
.TYPE 98
.ENDEF
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	#include <math.h>
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	#include <keypadc.h>
;   10	#include <graphx.h>
;   11	#include <debug.h>
;   12	#include <compression.h>
;   13	#include <fileioc.h>
;   14	
;   15	#include "map.h"
;   16	#include "battle.h"
;   17	#include "menu.h"
;   18	#include "misc.h"
;   19	#include "data.h"
;   20	#include "items.h"
;   21	#include "text.h"
;   22	#include "savegame.h"
;   23	#include "stats.h"
;   24	#include "gfx/map_gfx.h"
;   25	#include "items.h"
;   26	
;   27	#include "gfx/PKMNSD4.h"
;   28	
;   29	#define OUTDOORWIDTH 48
;   30	#define OUTDOORHEIGHT 40
;   31	#define MAX_X ((OUTDOORWIDTH - 21)*16)
;   32	#define MAX_Y ((OUTDOORHEIGHT - 15)*16)
;   33	
;   34	void HealParty(void);
;   35	void OpenBox(void);
;   36	void TalkToNpc1(void);
;   37	void TalkToNpc2(void);
;   38	void EnterDoor(uint8_t index);
;   39	void ExitBuilding(void);
;   40	void ExitZone(uint8_t index);
;   41	bool FightTrainer(uint8_t index);
;   42	
;   43	int32_t Clamp(int32_t number, int min, int max);
;   44	/* Gets the tile the player is facing*/
;   45	uint8_t GetNextTile(uint8_t tx, uint8_t ty, int width);
;   46	/* Gets the typemap at a specific tile */
;   47	uint8_t GetTypeMapData(uint8_t tx, uint8_t ty, int width);
;   48	/* Draw 16 enemy trainers */
;   49	void DrawEnemies(void);
;   50	/* Loads the tilemap, typemap ,and zonedata for current area */
;   51	void LoadMap(void);
;   52	
;   53	const int battlechance = 10; /* Chance for enemy to spawn out of 100 */
;   54	
;   55	
;   56	uint8_t pokeballdata[] = {
;   57		0,0,0,0,0,0
;   58	};
;   59	
;   60	int32_t screenX = 0;
;   61	int32_t screenY = 0;
;   62	
;   63	uint8_t tx; /* x tile */
;   64	uint8_t ty; /* y tile */
;   65	bool running;
;   66	bool surfing;
;   67	
;   68	uint8_t nextTile;
;   69	uint8_t moveState = 0;
;   70	uint8_t moveDir = 3;
;   71	uint8_t playerState = 0;
;   72	
;   73	gfx_tilemap_t tilemap;
;   74	
;   75	gfx_sprite_t *mapTiles[128];
;   76	gfx_sprite_t *playerSprites[20];
;   77	gfx_sprite_t *enemySprites[4];
;   78	gfx_sprite_t *pokeballSprites[3];
;   79	gfx_sprite_t *pauseMenuSprite;
;   80	
;   81	uint8_t currentTileMap[1920];
;   82	uint8_t currentTypeMap[1920];
;   83	struct zoneData currentZoneData;
;   84	/* zoneData is in header file because battle.c needs it*/
;   85	
;   86	uint8_t npc1;
;   87	uint8_t npc2;
;   88	
;   89	uint8_t currentTrainer = 0; /* 0-15 */
;   90	struct pokemonData tempcharacter2;
;   91	const struct pokemonData clearcharacter2 = {0};
;   92	
;   93	char str1[20];
	SEGMENT CODE
;   94	
;   95	void map_Initialize(void) {
_map_Initialize:
.DEFINE "_map_Initialize"

.VALUE _map_Initialize

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_Initialize",95,"_map_Initialize"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   96		PKMNSD4_init();
.LINE 96

	CALL	_PKMNSD4_init
;   97	
;   98		gfx_SetPalette(map_gfx_pal, sizeof_map_gfx_pal, 0);
.LINE 98

	LD	BC,0
	PUSH	BC
	LD	BC,460
	PUSH	BC
	LD	HL,_PKMNSD4+90
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   99		SetColors(0);
.LINE 99

	LD	BC,0
	PUSH	BC
	CALL	_SetColors
	POP	BC
;  100		gfx_SetTextFGColor(colors[1]);
.LINE 100

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  101		zx7_Decompress(textBoxSprite1, maptextbox1_compressed);
.LINE 101

	LD	HL,_PKMNSD4+72
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(_textBoxSprite1)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  102		zx7_Decompress(textBoxSprite2, maptextbox2_compressed);
.LINE 102

	LD	HL,_PKMNSD4+75
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(_textBoxSprite2)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  103		save_SelectSave();
.LINE 103

	CALL	_save_SelectSave
;  104		save_Load();
.LINE 104

	CALL	_save_Load
;  105	
;  106		/* Initialize the tilemap */
;  107		tilemap.map = currentTileMap;
.LINE 107

	LD	BC,_currentTileMap
	LD	(_tilemap),BC
;  108		tilemap.tiles = mapTiles;
.LINE 108

	LD	BC,_mapTiles
	LD	(_tilemap+3),BC
;  109		tilemap.type_width = gfx_tile_16_pixel;
.LINE 109

	LD	A,4
	LD	(_tilemap+10),A
;  110		tilemap.type_height = gfx_tile_16_pixel;
.LINE 110

	LD	(_tilemap+11),A
;  111		tilemap.tile_height = 16;
.LINE 111

	LD	A,16
	LD	(_tilemap+6),A
;  112		tilemap.tile_width = 16;
.LINE 112

	LD	(_tilemap+7),A
;  113		tilemap.draw_height = 16;
.LINE 113

	LD	(_tilemap+8),A
;  114		tilemap.draw_width = 22;
.LINE 114

	LD	A,22
	LD	(_tilemap+9),A
;  115		tilemap.height = OUTDOORHEIGHT;
.LINE 115

	LD	A,40
	LD	(_tilemap+12),A
;  116		tilemap.width = OUTDOORWIDTH;
.LINE 116

	LD	A,48
	LD	(_tilemap+13),A
;  117		tilemap.y_loc = 8;
.LINE 117

	LD	A,8
	LD	(_tilemap+14),A
;  118		tilemap.x_loc = -8;
.LINE 118

	LD	BC,16777208
	LD	(_tilemap+15),BC
;  119	
;  120		if (indoors) {
.LINE 120

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_1
;  121			tilemap.width = 21;
.LINE 121

	LD	A,21
	LD	(_tilemap+13),A
;  122			tilemap.height = 15;
.LINE 122

	LD	A,15
	LD	(_tilemap+12),A
;  123		}
L_1:
.LINE 123

;  124	
;  125		tx = playerX / 16;
.LINE 125

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  126		ty = playerY / 16;
.LINE 126

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  127		LoadMap();
.LINE 127

	CALL	_LoadMap
;  128	}
.LINE 128

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Initialize ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_playerY                            IMPORT      2   variable
;_tx                                 STATIC      1   variable
;_playerX                            IMPORT      2   variable
;_indoors                            IMPORT      1   variable
;_mapTiles                           STATIC    384   variable
;_tilemap                            STATIC     18   variable
;_currentTileMap                     STATIC   1920   variable
;_save_Load                          IMPORT  -----   function
;_save_SelectSave                    IMPORT  -----   function
;_textBoxSprite2                     IMPORT      3   variable
;_textBoxSprite1                     IMPORT      3   variable
;_zx7_Decompress                     IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_PKMNSD4                            IMPORT     93   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_PKMNSD4_init                       IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_Initialize",128,"_map_Initialize"
;  129	void map_Setup(void) {
_map_Setup:
.DEFINE "_map_Setup"

.VALUE _map_Setup

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_Setup",129,"_map_Setup"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  130		map_SetupGfx();
.LINE 130

	CALL	_map_SetupGfx
;  131	
;  132		tx = playerX / 16;
.LINE 132

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  133		ty = playerY / 16;
.LINE 133

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  134	}
.LINE 134

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Setup ***************************
;Name                         Addr/Register   Size   Type
;_ty                                 STATIC      1   variable
;_playerY                            IMPORT      2   variable
;_tx                                 STATIC      1   variable
;_playerX                            IMPORT      2   variable
;_map_SetupGfx                       IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_Setup",134,"_map_Setup"
;  135	
;  136	void map_SetupGfx(void) {
_map_SetupGfx:
.DEFINE "_map_SetupGfx"

.VALUE _map_SetupGfx

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_SetupGfx",136,"_map_SetupGfx"

.LINE 136

.DEFINE "tileIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
;  137		int tileIndex = 0;
;  138		for (tileIndex = 0; tileIndex < 128; tileIndex++) {
.LINE 138

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_9
L_7:
;  139			mapTiles[tileIndex] = gfx_MallocSprite(16, 16);
.LINE 139

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	BC,_malloc
	PUSH	BC
	LD	BC,16
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	DE,_mapTiles
	LD	HL,(IX+-6)
	ADD	HL,DE
	LD	(HL),BC
;  140			if (indoors) {
.LINE 140

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_6
;  141				zx7_Decompress(mapTiles[tileIndex], indoortileset_tiles_compressed[tileIndex]);
.LINE 141

	LD	BC,_indoortileset_tiles_compressed
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,_mapTiles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  142			}
;  143			else {
.LINE 143

	JR	L_8
L_6:
;  144				zx7_Decompress(mapTiles[tileIndex], outdoortileset_tiles_compressed[tileIndex]);
.LINE 144

	LD	BC,_outdoortileset_tiles_compressed
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,_mapTiles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  145			}
;  146		}
L_8:
.LINE 146

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_9:
	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_7
;  147		for (tileIndex = 0; tileIndex < 12; tileIndex++) {
.LINE 147

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_13
L_11:
;  148			playerSprites[tileIndex] = gfx_MallocSprite(16, 20);
.LINE 148

	LD	BC,_malloc
	PUSH	BC
	LD	BC,20
	PUSH	BC
	LD	BC,16
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,_playerSprites
	ADD	HL,DE
	LD	(HL),BC
;  149			zx7_Decompress(playerSprites[tileIndex], PKMNSD4[0 + tileIndex]);
.LINE 149

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_PKMNSD4
	LD	HL,BC
	ADD	HL,DE
	LD	DE,(HL)
	PUSH	DE
	LD	DE,_playerSprites
	LD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  150		}
L_13:
.LINE 150

	LD	BC,12
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_11
;  151		for (tileIndex = 12; tileIndex < 20; tileIndex++) {
.LINE 151

	LD	(IX+-3),BC
	JR	L_18
L_16:
;  152			playerSprites[tileIndex] = gfx_MallocSprite(22, 26);
.LINE 152

	LD	BC,_malloc
	PUSH	BC
	LD	BC,26
	PUSH	BC
	LD	BC,22
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,_playerSprites
	ADD	HL,DE
	LD	(HL),BC
;  153			zx7_Decompress(playerSprites[tileIndex], PKMNSD4[0 + tileIndex]);
.LINE 153

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_PKMNSD4
	LD	HL,BC
	ADD	HL,DE
	LD	DE,(HL)
	PUSH	DE
	LD	DE,_playerSprites
	LD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  154		}
L_18:
.LINE 154

	LD	BC,20
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_16
;  155		for (tileIndex = 0; tileIndex < 4; tileIndex++) {
.LINE 155

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_23
L_21:
;  156			enemySprites[tileIndex] = gfx_MallocSprite(16, 20);
.LINE 156

	LD	BC,_malloc
	PUSH	BC
	LD	BC,20
	PUSH	BC
	LD	BC,16
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,_enemySprites
	ADD	HL,DE
	LD	(HL),BC
;  157			zx7_Decompress(enemySprites[tileIndex], PKMNSD4[20 + tileIndex]);
.LINE 157

	LD	IY,(IX+-3)
	LEA	HL,IY+20
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD4
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_enemySprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  158		}
L_23:
.LINE 158

	LD	BC,4
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_21
;  159		for (tileIndex = 0; tileIndex < 3; tileIndex++) {
.LINE 159

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_28
L_26:
;  160			pokeballSprites[tileIndex] = gfx_MallocSprite(16, 16);
.LINE 160

	LD	BC,_malloc
	PUSH	BC
	LD	BC,16
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,_pokeballSprites
	ADD	HL,DE
	LD	(HL),BC
;  161			zx7_Decompress(pokeballSprites[tileIndex], pokeball_tiles_compressed[tileIndex]);
.LINE 161

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_pokeball_tiles_compressed
	LD	HL,BC
	ADD	HL,DE
	LD	DE,(HL)
	PUSH	DE
	LD	DE,_pokeballSprites
	LD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  162		}
L_28:
.LINE 162

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_26
;  163		pauseMenuSprite = gfx_MallocSprite(112, 96);
.LINE 163

	LD	BC,_malloc
	PUSH	BC
	LD	BC,96
	PUSH	BC
	LD	BC,112
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(_pauseMenuSprite),HL
;  164		zx7_Decompress(pauseMenuSprite, pausemenu_compressed);
.LINE 164

	LD	HL,_PKMNSD4+78
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(_pauseMenuSprite)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  165		zx7_Decompress(textBoxSprite1, maptextbox1_compressed);
.LINE 165

	LD	HL,_PKMNSD4+72
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(_textBoxSprite1)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  166		zx7_Decompress(textBoxSprite2, maptextbox2_compressed);
.LINE 166

	LD	HL,_PKMNSD4+75
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(_textBoxSprite2)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  167		gfx_SetPalette(map_gfx_pal, sizeof_map_gfx_pal, 0);
.LINE 167

	LD	BC,0
	PUSH	BC
	LD	BC,460
	PUSH	BC
	LD	HL,_PKMNSD4+90
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;  168		SetColors(0);
.LINE 168

	LD	BC,0
	PUSH	BC
	CALL	_SetColors
	POP	BC
;  169		gfx_SetTextScale(1, 1);
.LINE 169

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  170		gfx_SetTextFGColor(colors[1]);
.LINE 170

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  171		map_LoadPokeballs();
.LINE 171

	CALL	_map_LoadPokeballs
;  172	}
.LINE 172

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_SetupGfx ***************************
;Name                         Addr/Register   Size   Type
;_map_LoadPokeballs                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_gfx_SetPalette                     IMPORT  -----   function
;_textBoxSprite2                     IMPORT      3   variable
;_textBoxSprite1                     IMPORT      3   variable
;_pauseMenuSprite                    STATIC      3   variable
;_pokeball_tiles_compressed          IMPORT      9   variable
;_pokeballSprites                    STATIC      9   variable
;_enemySprites                       STATIC     12   variable
;_PKMNSD4                            IMPORT     93   variable
;_playerSprites                      STATIC     60   variable
;_outdoortileset_tiles_compressed      IMPORT    384   variable
;_indoortileset_tiles_compressed      IMPORT    384   variable
;_zx7_Decompress                     IMPORT  -----   function
;_indoors                            IMPORT      1   variable
;_mapTiles                           STATIC    384   variable
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;G_0                                   IX-6      3   variable
;tileIndex                             IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_SetupGfx",172,"_map_SetupGfx"
;  173	
;  174	int map_Loop(void) {
_map_Loop:
.DEFINE "_map_Loop"

.VALUE _map_Loop

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "map_Loop",174,"_map_Loop"

.LINE 174

.DEFINE "shopSpriteOriginal"

.CLASS 65

.VALUE -3

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "wildSpawn"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

.DEFINE "menuReturn"

.CLASS 65

.VALUE -7

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	PUSH	BC
	DEC	SP
;  175		/* Open Menu */
;  176		if (kb_Data[6] & kb_Enter) {
.LINE 176

	LD	A,(16056348)
	AND	A,1
	JR	Z,L_69
;  177			int menuReturn;
;  178			Wait(20);
.LINE 178

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  179			gfx_Blit(gfx_screen);
.LINE 179

	LD	BC,0
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  180			gfx_Sprite(pauseMenuSprite, 195, 25);
.LINE 180

	LD	BC,25
	PUSH	BC
	LD	BC,195
	PUSH	BC
	LD	BC,(_pauseMenuSprite)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
;  181			map_End();
.LINE 181

	CALL	_map_End
;  182	
;  183			menuReturn = menu_Menu();
.LINE 183

	CALL	_menu_Menu
	UEXT	HL
	LD	L,A
	LD	(IX+-7),HL
;  184			map_SetupGfx();
.LINE 184

	CALL	_map_SetupGfx
;  185			map_LoadPokeballs();
.LINE 185

	CALL	_map_LoadPokeballs
;  186			while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
.LINE 186

	JR	L_33
L_34:
	CALL	_kb_Scan
L_33:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_34
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_34
;  187			return menuReturn;
.LINE 187

	LD	HL,(IX+-7)
	JR	L_131
;  188		}
L_69:
.LINE 188

;  189		/* If player presses 2nd */
;  190		if ((kb_Data[1] & kb_2nd)) {
.LINE 190

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_129
;  191			nextTile = GetNextTile(tx, ty, tilemap.width);
.LINE 191

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	LD	(_nextTile),A
;  192			if (nextTile >= 0x10 && nextTile < 0x20 && (GetTypeMapData(tx, ty, tilemap.width) == 2)) {
.LINE 192

	CP	A,16
	JR	C,L_64
	LD	A,(_nextTile)
	CP	A,32
	JR	NC,L_64
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_64
;  193				if (moveDir == 1) {
.LINE 193

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_41
;  194					playerX += 16;
.LINE 194

	LD	IY,(_playerX)
	LEA	BC,IY+16
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  195				}
L_41:
.LINE 195

;  196				if (moveDir == 2) {
.LINE 196

	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_43
;  197					playerX -= 16;
.LINE 197

	LD	IY,(_playerX)
	LEA	BC,IY+-16
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  198				}
L_43:
.LINE 198

;  199				if (moveDir == 3) {
.LINE 199

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_45
;  200					playerY += 16;
.LINE 200

	LD	IY,(_playerY)
	LEA	BC,IY+16
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  201				}
L_45:
.LINE 201

;  202				if (moveDir == 4) {
.LINE 202

	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_46
;  203					playerY -= 16;
.LINE 203

	LD	IY,(_playerY)
	LEA	BC,IY+-16
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  204				}
L_46:
.LINE 204

;  205				surfing = true;
.LINE 205

	LD	A,1
	LD	(_surfing),A
;  206				tx = playerX / 16;
.LINE 206

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  207				ty = playerY / 16;
.LINE 207

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  208			}
L_64:
.LINE 208

;  209			if (nextTile == 0x41) {
.LINE 209

	LD	A,(_nextTile)
	CP	A,65
	JR	NZ,L_63
;  210				HealParty();
.LINE 210

	CALL	_HealParty
;  211			}
;  212			else if (nextTile == 0x42) {
.LINE 212

	JR	L_65
L_63:
	LD	A,(_nextTile)
	CP	A,66
	JR	NZ,L_61
;  213				gfx_sprite_t *shopSpriteOriginal;
;  214				map_End();
.LINE 214

	CALL	_map_End
;  215	
;  216				shopSpriteOriginal = gfx_MallocSprite(134, 84);
.LINE 216

	LD	BC,_malloc
	PUSH	BC
	LD	BC,84
	PUSH	BC
	LD	BC,134
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-3),HL
;  217				zx7_Decompress(shopSpriteOriginal, shop_compressed);
.LINE 217

	LD	BC,_shop_compressed
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  218	
;  219				menu_ItemShop(shopSpriteOriginal);
.LINE 219

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_menu_ItemShop
	POP	BC
;  220	
;  221				free(shopSpriteOriginal);
.LINE 221

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
;  222				map_SetupGfx();
.LINE 222

	CALL	_map_SetupGfx
;  223			}
;  224			else if (nextTile == 0x43) {
.LINE 224

	JR	L_65
L_61:
	LD	A,(_nextTile)
	CP	A,67
	JR	NZ,L_59
;  225				OpenBox();
.LINE 225

	CALL	_OpenBox
;  226			}
;  227			else if (nextTile == 0x44) {
.LINE 227

	JR	L_65
L_59:
	LD	A,(_nextTile)
	CP	A,68
	JR	NZ,L_57
;  228				TalkToNpc1();
.LINE 228

	CALL	_TalkToNpc1
;  229			}
;  230			else if (nextTile == 0x45) {
.LINE 230

	JR	L_65
L_57:
	LD	A,(_nextTile)
	CP	A,69
	JR	NZ,L_55
;  231				TalkToNpc2();
.LINE 231

	CALL	_TalkToNpc2
;  232			}
;  233			else if (nextTile >= 0x50 && nextTile < 0x60) {
.LINE 233

	JR	L_65
L_55:
	LD	A,(_nextTile)
	CP	A,80
	JR	C,L_53
	LD	A,(_nextTile)
	CP	A,96
	JR	NC,L_53
;  234				EnterDoor(nextTile - 80);
.LINE 234

	LD	A,(_nextTile)
	SUB	A,80
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_EnterDoor
	POP	BC
;  235			}
;  236			else if (nextTile >= 0x60 && nextTile < 0x70) {
.LINE 236

	JR	L_65
L_53:
	LD	A,(_nextTile)
	CP	A,96
	JR	C,L_65
	LD	A,(_nextTile)
	CP	A,112
	JR	NC,L_65
;  237				if (FightTrainer(nextTile - 96)) {
.LINE 237

	LD	A,(_nextTile)
	SUB	A,96
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_FightTrainer
	POP	BC
	OR	A,A
	JR	Z,L_65
;  238					return 1;
.LINE 238

	LD	HL,1
	JR	L_131
;  239				}
;  240			}
.LINE 240

;  241			while ((kb_Data[1] & kb_2nd))
.LINE 241

L_66:
;  242			{
;  243				kb_Scan();
.LINE 243

	CALL	_kb_Scan
;  244			}
L_65:
.LINE 244

	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_66
;  245		}
L_129:
.LINE 245

;  246		/* If moving */
;  247		if (moveState > 0) {
.LINE 247

	XOR	A,A
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_128
;  248			moveState--;
.LINE 248

	LD	A,(_moveState)
	DEC	A
	LD	(_moveState),A
;  249			//Wait(1);
;  250			if (moveDir == 1) {
.LINE 250

	LD	A,(_moveDir)
	CP	A,1
	JR	NZ,L_73
;  251				playerX += 2;
.LINE 251

	LD	BC,(_playerX)
	INC	BC
	INC	BC
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  252			}
L_73:
.LINE 252

;  253			if (moveDir == 2) {
.LINE 253

	LD	A,(_moveDir)
	CP	A,2
	JR	NZ,L_75
;  254				playerX -= 2;
.LINE 254

	LD	IY,(_playerX)
	LEA	BC,IY+-2
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  255			}
L_75:
.LINE 255

;  256			if (moveDir == 3) {
.LINE 256

	LD	A,(_moveDir)
	CP	A,3
	JR	NZ,L_77
;  257				playerY += 2;
.LINE 257

	LD	BC,(_playerY)
	INC	BC
	INC	BC
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  258			}
L_77:
.LINE 258

;  259			if (moveDir == 4) {
.LINE 259

	LD	A,(_moveDir)
	CP	A,4
	JR	NZ,L_89
;  260				playerY -= 2;
.LINE 260

	LD	IY,(_playerY)
	LEA	BC,IY+-2
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  261			}
L_89:
.LINE 261

;  262			if (surfing) {
.LINE 262

	LD	A,(_surfing)
	OR	A,A
	JR	Z,L_88
;  263				if (moveState > 3) {
.LINE 263

	LD	A,3
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_79
;  264					playerState = 1;
.LINE 264

	LD	A,1
	LD	(_playerState),A
;  265				}
;  266				else {
.LINE 266

	JR	L_105
L_79:
;  267					playerState = 0;
.LINE 267

	XOR	A,A
	LD	(_playerState),A
;  268				}
;  269			}
;  270			else {
.LINE 270

	JR	L_105
L_88:
;  271				if (moveState > 5) {
.LINE 271

	LD	A,5
	LD	HL,_moveState
	CP	A,(HL)
	JR	NC,L_86
;  272					playerState = 1;
.LINE 272

	LD	A,1
	LD	(_playerState),A
;  273				}
;  274				else if (moveState > 3) {
.LINE 274

	JR	L_105
L_86:
	LD	A,3
	CP	A,(HL)
	JR	NC,L_84
;  275					playerState = 0;
.LINE 275

	XOR	A,A
	LD	(_playerState),A
;  276				}
;  277				else if (moveState > 1) {
.LINE 277

	JR	L_105
L_84:
	LD	A,1
	CP	A,(HL)
	JR	NC,L_82
;  278					playerState = 2;
.LINE 278

	LD	A,2
	LD	(_playerState),A
;  279				}
;  280				else if (moveState > 0) {
.LINE 280

	JR	L_105
L_82:
	XOR	A,A
	CP	A,(HL)
	JR	NC,L_105
;  281					playerState = 0;
.LINE 281

	XOR	A,A
	LD	(_playerState),A
;  282				}
;  283			}
L_105:
.LINE 283

;  284	
;  285			if (moveState == 0) {
.LINE 285

	LD	A,(_moveState)
	OR	A,A
	JR	NZ,L_130
;  286				/* Arrive At Tile*/
;  287				tx = playerX / 16;
.LINE 287

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  288				ty = playerY / 16;
.LINE 288

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  289				nextTile = GetTypeMapData(tx, ty, tilemap.width);
.LINE 289

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	LD	(_nextTile),A
;  290				if (nextTile >= 0x10 && nextTile < 0x20) {
.LINE 290

	CP	A,16
	JR	C,L_103
	LD	A,(_nextTile)
	CP	A,32
	JR	NC,L_103
;  291					/* Grass */
;  292					if ((rand() % 100) <= battlechance) {
.LINE 292

	CALL	_rand
	LD	BC,100
	CALL	__irems
	LD	BC,HL
	LD	HL,10
	OR	A,A
	SBC	HL,BC
	JP	M,L_130
;  293						uint8_t wildSpawn;
;  294						wildSpawn = rand() % 5;
.LINE 294

	CALL	_rand
	LD	BC,5
	CALL	__irems
	LD	(IX+-4),L
;  295						battle_SpawnWild(currentZoneData.spawnids[wildSpawn][nextTile -16], currentZoneData.spawnminlevels[wildSpawn][nextTile - 16], currentZoneData.spawnmaxlevels[wildSpawn][nextTile - 16]);
.LINE 295

	LD	A,(IX+-4)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(IX+-10),HL
	LD	A,(_nextTile)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	DE,IY+-16
	LD	BC,_currentZoneData+160
	LD	HL,(IX+-10)
	ADD	HL,BC
	LD	BC,DE
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData+80
	LD	HL,(IX+-10)
	ADD	HL,BC
	LD	BC,DE
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData
	LD	HL,(IX+-10)
	ADD	HL,BC
	LD	BC,DE
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_battle_SpawnWild
	POP	BC
	POP	BC
	POP	BC
;  296						return 1;
.LINE 296

	LD	HL,1
	JR	L_131
;  297					}
;  298				}
;  299				else if (nextTile == 0x01) {
L_103:
.LINE 299

	LD	A,(_nextTile)
	CP	A,1
	JR	NZ,L_101
;  300					ExitBuilding();
.LINE 300

	CALL	_ExitBuilding
;  301				}
;  302				else if (nextTile == 0x02) {
.LINE 302

	JR	L_130
L_101:
	LD	A,(_nextTile)
	CP	A,2
	JR	NZ,L_99
;  303					surfing = false;
.LINE 303

	XOR	A,A
	LD	(_surfing),A
;  304				}
;  305				else if (nextTile >= 0x20 && nextTile < 0x30) {
.LINE 305

	JR	L_130
L_99:
	LD	A,(_nextTile)
	CP	A,32
	JR	C,L_97
	LD	A,(_nextTile)
	CP	A,48
	JR	NC,L_97
;  306					ExitZone(nextTile - 32);
.LINE 306

	LD	A,(_nextTile)
	SUB	A,32
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_ExitZone
	POP	BC
;  307				}
;  308				else if (nextTile >= 0x30 && nextTile < 0x40) {
.LINE 308

	JR	L_130
L_97:
	LD	A,(_nextTile)
	CP	A,48
	JR	C,L_130
	LD	A,(_nextTile)
	CP	A,64
	JR	NC,L_130
;  309					if (FightTrainer(nextTile - 48)) {
.LINE 309

	LD	A,(_nextTile)
	SUB	A,48
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_FightTrainer
	POP	BC
	OR	A,A
	JR	Z,L_130
;  310						return 1;
.LINE 310

	LD	HL,1
	JR	L_131
;  311					}
;  312				}
;  313			}
;  314		}
;  315	
;  316		/* If not moving */
;  317		else {
L_128:
.LINE 317

;  318			if (kb_Data[7] & kb_Right) {
.LINE 318

	LD	A,(16056350)
	AND	A,4
	JR	Z,L_112
;  319				moveDir = 1;
.LINE 319

	LD	A,1
	LD	(_moveDir),A
;  320			}
;  321			else if (kb_Data[7] & kb_Left) {
.LINE 321

	JR	L_126
L_112:
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_110
;  322				moveDir = 2;
.LINE 322

	LD	A,2
	LD	(_moveDir),A
;  323			}
;  324			else if (kb_Data[7] & kb_Down) {
.LINE 324

	JR	L_126
L_110:
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_108
;  325				moveDir = 3;
.LINE 325

	LD	A,3
	LD	(_moveDir),A
;  326	
;  327			}
;  328			else if (kb_Data[7] & kb_Up) {
.LINE 328

	JR	L_126
L_108:
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_126
;  329				moveDir = 4;
.LINE 329

	LD	A,4
	LD	(_moveDir),A
;  330			}
L_126:
.LINE 330

;  331			
;  332			if (kb_Data[7]) {
.LINE 332

	LD	A,(16056350)
	OR	A,A
	JR	Z,L_125
;  333				if (kb_Data[2] & kb_Alpha) {
.LINE 333

	LD	A,(16056340)
	AND	A,128
	JR	Z,L_118
;  334					running = true;
.LINE 334

	LD	A,1
	LD	(_running),A
;  335				}
L_118:
.LINE 335

;  336				if (GetNextTile(tx, ty, tilemap.width) < 64 && !((GetTypeMapData(tx, ty, tilemap.width) == 2) && (GetNextTile(tx, ty, tilemap.width) >= 0x10) && (GetNextTile(tx, ty, tilemap.width) <= 0x20))) {
.LINE 336

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,64
	OR	A,A
	SBC	HL,BC
	JP	P,L_123
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,2
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_117
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,16
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_117
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,32
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_123
L_117:
;  337					moveState = 8;
.LINE 337

	LD	A,8
	LD	(_moveState),A
;  338				}
L_123:
.LINE 338

;  339				if (GetNextTile(tx, ty, tilemap.width) >= 112 && GetNextTile(tx, ty, tilemap.width) < 120) {
.LINE 339

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,112
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_130
	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	BC,120
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_130
;  340					if (GetNextTile(tx, ty, tilemap.width) - 111 > badgeCount) {
.LINE 340

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+-111
	LD	A,(_badgeCount)
	UEXT	HL
	LD	L,A
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_121
;  341						sprintf(str, "You need %u badges to pass", (GetNextTile(tx, ty, tilemap.width) - 111));
.LINE 341

	LD	A,(_tilemap+13)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	A,(_ty)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_tx)
	LD	C,A
	PUSH	BC
	CALL	_GetNextTile
	POP	BC
	POP	BC
	POP	BC
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	BC,IY+-111
	PUSH	BC
	LD	BC,L__67
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  342						text_Display("This route is closed. Come back later.", true);
.LINE 342

	LD	BC,1
	PUSH	BC
	LD	BC,L__68
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  343					}
;  344					else {
.LINE 344

	JR	L_130
L_121:
;  345						moveState = 8;
.LINE 345

	LD	A,8
	LD	(_moveState),A
;  346					}
;  347				}
;  348			}
;  349			else {
.LINE 349

	JR	L_130
L_125:
;  350				running = false;
.LINE 350

	XOR	A,A
	LD	(_running),A
;  351			}
;  352		}
L_130:
.LINE 352

;  353	
;  354		map_Draw();
.LINE 354

	CALL	_map_Draw
;  355	
;  356		gfx_SwapDraw();
.LINE 356

	CALL	_gfx_SwapDraw
;  357		return 0;
.LINE 357

	OR	A,A
	SBC	HL,HL
;  358	}
L_131:
.LINE 358

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Loop ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SwapDraw                       IMPORT  -----   function
;_map_Draw                           IMPORT  -----   function
;_text_Display                       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_badgeCount                         IMPORT      1   variable
;_running                            STATIC      1   variable
;_ExitZone                           IMPORT  -----   function
;_ExitBuilding                       IMPORT  -----   function
;_currentZoneData                    STATIC    640   variable
;_battle_SpawnWild                   IMPORT  -----   function
;_rand                               IMPORT  -----   function
;_playerState                        STATIC      1   variable
;_moveState                          STATIC      1   variable
;_FightTrainer                       IMPORT  -----   function
;_EnterDoor                          IMPORT  -----   function
;_TalkToNpc2                         IMPORT  -----   function
;_TalkToNpc1                         IMPORT  -----   function
;_OpenBox                            IMPORT  -----   function
;_free                               IMPORT  -----   function
;_menu_ItemShop                      IMPORT  -----   function
;_shop_compressed                    IMPORT     98   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_HealParty                          IMPORT  -----   function
;_surfing                            STATIC      1   variable
;_playerY                            IMPORT      2   variable
;_playerX                            IMPORT      2   variable
;_moveDir                            STATIC      1   variable
;_GetTypeMapData                     IMPORT  -----   function
;_nextTile                           STATIC      1   variable
;_tx                                 STATIC      1   variable
;_ty                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_GetNextTile                        IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_map_LoadPokeballs                  IMPORT  -----   function
;_map_SetupGfx                       IMPORT  -----   function
;_menu_Menu                          IMPORT  -----   function
;_map_End                            IMPORT  -----   function
;_pauseMenuSprite                    STATIC      3   variable
;_gfx_Sprite                         IMPORT  -----   function
;_gfx_Blit                           IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;menuReturn                            IX-7      3   variable
;wildSpawn                             IX-4      1   variable
;shopSpriteOriginal                    IX-3      3   variable


; Stack Frame Size: 16 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_Loop",358,"_map_Loop"
	SEGMENT STRSECT
L__67:
	DB	"You need %u badges to pass"
	DB	0
L__68:
	DB	"This route is closed. Come back later."
	DB	0
	SEGMENT CODE
;  359	void map_End(void) {
_map_End:
.DEFINE "_map_End"

.VALUE _map_End

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_End",359,"_map_End"

.LINE 359

.DEFINE "tileIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  360		int tileIndex = 0;
;  361		for (tileIndex = 0; tileIndex < 128; tileIndex++) {
.LINE 361

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_135
L_133:
;  362			free(mapTiles[tileIndex]);
.LINE 362

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_mapTiles
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  363		}
L_135:
.LINE 363

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_133
;  364		for (tileIndex = 0; tileIndex < 20; tileIndex++) {
.LINE 364

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_139
L_137:
;  365			free(playerSprites[tileIndex]);
.LINE 365

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_playerSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  366		}
L_139:
.LINE 366

	LD	BC,20
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_137
;  367		for (tileIndex = 0; tileIndex < 4; tileIndex++) {
.LINE 367

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_144
L_142:
;  368			free(enemySprites[tileIndex]);
.LINE 368

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_enemySprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  369		}
L_144:
.LINE 369

	LD	BC,4
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_142
;  370		for (tileIndex = 0; tileIndex < 3; tileIndex++) {
.LINE 370

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_149
L_147:
;  371			free(pokeballSprites[tileIndex]);
.LINE 371

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_pokeballSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  372		}
L_149:
.LINE 372

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_147
;  373		free(pauseMenuSprite);
.LINE 373

	LD	BC,(_pauseMenuSprite)
	PUSH	BC
	CALL	_free
	POP	BC
;  374	}
.LINE 374

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_End ***************************
;Name                         Addr/Register   Size   Type
;_pauseMenuSprite                    STATIC      3   variable
;_pokeballSprites                    STATIC      9   variable
;_enemySprites                       STATIC     12   variable
;_playerSprites                      STATIC     60   variable
;_mapTiles                           STATIC    384   variable
;_free                               IMPORT  -----   function
;tileIndex                             IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "map_End",374,"_map_End"
;  375	
;  376	void map_Draw(void) {
_map_Draw:
.DEFINE "_map_Draw"

.VALUE _map_Draw

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_Draw",376,"_map_Draw"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-12
	LD	SP,HL
;  377		/* Move Screen and Redraw */
;  378		if (indoors) {
.LINE 378

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_154
;  379			screenX = 0;
.LINE 379

	LD	BC,0
	XOR	A,A
	LD	(_screenX),BC
	LD	(_screenX+3),A
;  380			screenY = 0;
.LINE 380

	XOR	A,A
	LD	(_screenY),BC
	LD	(_screenY+3),A
;  381	
;  382			gfx_Tilemap(&tilemap, screenX, screenY);
.LINE 382

	PUSH	BC
	PUSH	BC
	LD	BC,_tilemap
	PUSH	BC
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;  383	
;  384			gfx_TransparentSprite_NoClip(playerSprites[moveDir * 3 + playerState - 3], playerX - 8, playerY + 4);
.LINE 384

	LD	A,(_playerY)
	ADD	A,4
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_playerX)
	CALL	__stoiu
	LD	IY,HL
	LEA	BC,IY+-8
	PUSH	BC
	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_playerState)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	DEC	HL
	DEC	HL
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_playerSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  385		}
;  386		else {
.LINE 386

	JR	L_155
L_154:
;  387			screenX = Clamp(playerX - 160, 0, MAX_X);
.LINE 387

	LD	BC,432
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,HL
	CALL	__itol
	LD	E,A
	LD	HL,BC
	LD	BC,16777056
	LD	A,255
	CALL	__ladd
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_Clamp
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(_screenX),HL
	LD	A,E
	LD	(_screenX+3),A
;  388			screenY = Clamp(playerY - 112, 0, MAX_Y);
.LINE 388

	LD	BC,400
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,HL
	CALL	__itol
	LD	E,A
	LD	HL,BC
	LD	BC,16777104
	LD	A,255
	CALL	__ladd
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_Clamp
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(_screenY),HL
	LD	A,E
	LD	(_screenY+3),A
;  389	
;  390			gfx_Tilemap(&tilemap, screenX, screenY);
.LINE 390

	LD	BC,(_screenY)
	PUSH	BC
	LD	BC,(_screenX)
	PUSH	BC
	LD	BC,_tilemap
	PUSH	BC
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;  391			
;  392			gfx_TransparentSprite_NoClip(playerSprites[(12*surfing) + (moveDir - 1) * (3 - surfing) + playerState], playerX - screenX - 8, playerY - screenY + 4);
.LINE 392

	LD	A,(_playerY)
	LD	B,A
	LD	A,(_screenY)
	LD	C,A
	LD	A,B
	SUB	A,C
	ADD	A,4
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_playerX)
	CALL	__stoiu
	LD	IY,(_screenX)
	LEA	BC,IY+8
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	A,(_surfing)
	UEXT	HL
	LD	L,A
	LD	A,12
	CALL	__imul_b
	LD	(IX+-6),HL	; spill
	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	DEC	DE
	LD	A,(_surfing)
	UEXT	HL
	LD	L,A
	LD	(IX+-9),DE	; spill
	LD	(IX+-12),HL	; spill
	LD	DE,(IX+-9)	; unspill
	LD	HL,3
	OR	A,A
	LD	(IX+-9),DE	; spill
	LD	DE,(IX+-12)	; unspill
	SBC	HL,DE
	LD	BC,HL
	LD	HL,(IX+-9)
	CALL	__imuls
	LD	BC,(IX+-6)	; unspill
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_playerState)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_playerSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  393		}
L_155:
.LINE 393

;  394		DrawEnemies();
.LINE 394

	CALL	_DrawEnemies
;  395		map_DrawInformationBar();
.LINE 395

	CALL	_map_DrawInformationBar
;  396	}
.LINE 396

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_Draw ***************************
;Name                         Addr/Register   Size   Type
;_map_DrawInformationBar             IMPORT  -----   function
;_DrawEnemies                        IMPORT  -----   function
;_surfing                            STATIC      1   variable
;_Clamp                              IMPORT  -----   function
;_playerState                        STATIC      1   variable
;_moveDir                            STATIC      1   variable
;_playerSprites                      STATIC     60   variable
;_playerX                            IMPORT      2   variable
;_playerY                            IMPORT      2   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_tilemap                            STATIC     18   variable
;_gfx_Tilemap                        IMPORT  -----   function
;_screenY                            STATIC      4   variable
;_screenX                            STATIC      4   variable
;_indoors                            IMPORT      1   variable


; Stack Frame Size: 18 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "map_Draw",396,"_map_Draw"
;  397	
;  398	void HealParty(void) {
_HealParty:
.DEFINE "_HealParty"

.VALUE _HealParty

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HealParty",398,"_HealParty"

.LINE 398

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-33
	LD	SP,HL
;  399		int pokemonIndex, moveIndex;
;  400		for (pokemonIndex = 0; pokemonIndex < 6; pokemonIndex++) {
.LINE 400

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_164
L_162:
;  401			party[pokemonIndex].currenthealth = stats_CalculateStats(party[pokemonIndex]).health;
.LINE 401

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-18),HL
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-9),HL
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-30
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	LD	IY,(IX+-18)
	LD	(IY+13),C
	LD	(IY+14),B
;  402			party[pokemonIndex].currentstatus = 0;
.LINE 402

	LD	(IY+15),0
;  403			for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 403

	LD	BC,0
	LD	(IX+-6),BC
	LD	BC,(IX+-9)
	LD	(IX+-15),BC
	LD	BC,(IX+-9)
	LD	HL,_party
	ADD	HL,BC
	LD	(IX+-12),HL
	JR	L_161
L_159:
;  404				party[pokemonIndex].pp[moveIndex] = data_moves[party[pokemonIndex].moves[moveIndex]].uses;
.LINE 404

	LD	BC,_party
	LD	HL,(IX+-9)
	ADD	HL,BC
	LD	(IX+-33),HL
	LD	BC,(IX+-6)
	LD	IY,(IX+-33)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	BC,HL
	LD	DE,(IX+-6)
	LEA	HL,IY+5
	ADD	HL,DE
	LD	IY,BC
	LD	A,(IY+18)
	LD	(HL),A
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  405			}
L_161:
.LINE 405

	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JP	M,L_159
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  406		}
L_164:
.LINE 406

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_162
;  407		text_Display("Your party has been healed", false);
.LINE 407

	LD	BC,0
	PUSH	BC
	LD	BC,L__79
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  408		map_LoadPokeballs();
.LINE 408

	CALL	_map_LoadPokeballs
;  409	}
.LINE 409

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HealParty ***************************
;Name                         Addr/Register   Size   Type
;_map_LoadPokeballs                  IMPORT  -----   function
;_text_Display                       IMPORT  -----   function
;_data_moves                         IMPORT  unknown variable
;_stats_CalculateStats               IMPORT  -----   function
;_party                              IMPORT   1224   variable
;O_10                                 IX-15      3   variable
;O_11                                 IX-12      3   variable
;G_2                                   IX-9      3   variable
;moveIndex                             IX-6      3   variable
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 39 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "HealParty",409,"_HealParty"
	SEGMENT STRSECT
L__79:
	DB	"Your party has been healed"
	DB	0
	SEGMENT CODE
;  410	void OpenBox(void) {
_OpenBox:
.DEFINE "_OpenBox"

.VALUE _OpenBox

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "OpenBox",410,"_OpenBox"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  411		map_End();
.LINE 411

	CALL	_map_End
;  412		
;  413		menu_Box();
.LINE 413

	CALL	_menu_Box
;  414	
;  415		map_SetupGfx();
.LINE 415

	CALL	_map_SetupGfx
;  416		map_LoadPokeballs();
.LINE 416

	CALL	_map_LoadPokeballs
;  417	}
.LINE 417

	LD	SP,IX
	POP	IX
	RET	


;**************************** _OpenBox ***************************
;Name                         Addr/Register   Size   Type
;_map_LoadPokeballs                  IMPORT  -----   function
;_map_SetupGfx                       IMPORT  -----   function
;_menu_Box                           IMPORT  -----   function
;_map_End                            IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "OpenBox",417,"_OpenBox"
;  418	void TalkToNpc1(void) {
_TalkToNpc1:
.DEFINE "_TalkToNpc1"

.VALUE _TalkToNpc1

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "TalkToNpc1",418,"_TalkToNpc1"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
;  419		text_Display(data_npcText[npc1], false);
.LINE 419

	LD	BC,0
	PUSH	BC
	LD	A,(_npc1)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_data_npcText
	ADD	HL,BC
	PUSH	HL
	CALL	_text_Display
	POP	BC
	POP	BC
;  420		if (!takenGifts[npc1] && data_npcReward[npc1] > 0) {
.LINE 420

	LD	A,(_npc1)
	UEXT	HL
	LD	L,A
	LD	BC,_takenGifts
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_174
	LD	A,(_npc1)
	UEXT	HL
	LD	L,A
	LD	BC,_data_npcReward
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_174
;  421			playerItems[data_npcReward[npc1] - 1]++;
.LINE 421

	LD	HL,(IX+-3)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,_playerItems
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	IY,(IX+-6)
	LD	A,(HL)
	INC	A
	LD	(IY),A
;  422			items_IndexToName(str1, data_npcReward[npc1] - 1);
.LINE 422

	LD	HL,(IX+-3)
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	LD	BC,_str1
	PUSH	BC
	CALL	_items_IndexToName
	POP	BC
	POP	BC
;  423			if (data_npcReward[npc1] - 1 >= 20) {
.LINE 423

	LD	A,(_npc1)
	UEXT	HL
	LD	L,A
	LD	BC,_data_npcReward
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_171
;  424				sprintf(str, "Recieved the TM for %s", str1);
.LINE 424

	LD	BC,_str1
	PUSH	BC
	LD	BC,L__85
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  425			}
;  426			else {
.LINE 426

	JR	L_172
L_171:
;  427				sprintf(str, "Recieved a %s", str1);
.LINE 427

	LD	BC,_str1
	PUSH	BC
	LD	BC,L__86
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  428			}
L_172:
.LINE 428

;  429			text_Display(str, false);
.LINE 429

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  430			takenGifts[npc1] = true;
.LINE 430

	LD	A,(_npc1)
	UEXT	HL
	LD	L,A
	LD	BC,_takenGifts
	ADD	HL,BC
	LD	(HL),1
;  431		}
;  432	}
L_174:
.LINE 432

	LD	SP,IX
	POP	IX
	RET	


;**************************** _TalkToNpc1 ***************************
;Name                         Addr/Register   Size   Type
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_str1                               STATIC     20   variable
;_items_IndexToName                  IMPORT  -----   function
;_playerItems                        IMPORT    185   variable
;_data_npcReward                     IMPORT  unknown variable
;_takenGifts                         IMPORT  unknown variable
;_npc1                               STATIC      1   variable
;_data_npcText                       IMPORT  unknown variable
;_text_Display                       IMPORT  -----   function
;G_3                                   IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "TalkToNpc1",432,"_TalkToNpc1"
	SEGMENT STRSECT
L__85:
	DB	"Recieved the TM for %s"
	DB	0
L__86:
	DB	"Recieved a %s"
	DB	0
	SEGMENT CODE
;  433	void TalkToNpc2(void) {
_TalkToNpc2:
.DEFINE "_TalkToNpc2"

.VALUE _TalkToNpc2

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "TalkToNpc2",433,"_TalkToNpc2"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  434		text_Display(data_npcText[npc2], false);
.LINE 434

	LD	BC,0
	PUSH	BC
	LD	A,(_npc2)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_data_npcText
	ADD	HL,BC
	PUSH	HL
	CALL	_text_Display
	POP	BC
	POP	BC
;  435		if (!takenGifts[npc2]) {
.LINE 435

	LD	A,(_npc2)
	UEXT	HL
	LD	L,A
	LD	BC,_takenGifts
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_180
;  436			playerItems[data_npcReward[npc2] - 1]++;
.LINE 436

	LD	A,(_npc2)
	UEXT	HL
	LD	L,A
	LD	BC,_data_npcReward
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,_playerItems
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	IY,(IX+-3)
	LD	A,(HL)
	INC	A
	LD	(IY),A
;  437			items_IndexToName(str1, data_npcReward[npc2] - 1);
.LINE 437

	LD	A,(_npc2)
	UEXT	HL
	LD	L,A
	LD	BC,_data_npcReward
	ADD	HL,BC
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	LD	BC,_str1
	PUSH	BC
	CALL	_items_IndexToName
	POP	BC
	POP	BC
;  438			if (data_npcReward[npc2] - 1 >= 20) {
.LINE 438

	LD	A,(_npc2)
	UEXT	HL
	LD	L,A
	LD	BC,_data_npcReward
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	M,L_177
;  439				sprintf(str, "Recieved the TM for %s", str1);
.LINE 439

	LD	BC,_str1
	PUSH	BC
	LD	BC,L__90
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  440			}
;  441			else {
.LINE 441

	JR	L_178
L_177:
;  442				sprintf(str, "Recieved a %s", str1);
.LINE 442

	LD	BC,_str1
	PUSH	BC
	LD	BC,L__91
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  443			}
L_178:
.LINE 443

;  444			text_Display(str, false);
.LINE 444

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  445			takenGifts[npc2] = true;
.LINE 445

	LD	A,(_npc2)
	UEXT	HL
	LD	L,A
	LD	BC,_takenGifts
	ADD	HL,BC
	LD	(HL),1
;  446		}
;  447	}
L_180:
.LINE 447

	LD	SP,IX
	POP	IX
	RET	


;**************************** _TalkToNpc2 ***************************
;Name                         Addr/Register   Size   Type
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_str1                               STATIC     20   variable
;_items_IndexToName                  IMPORT  -----   function
;_playerItems                        IMPORT    185   variable
;_data_npcReward                     IMPORT  unknown variable
;_takenGifts                         IMPORT  unknown variable
;_npc2                               STATIC      1   variable
;_data_npcText                       IMPORT  unknown variable
;_text_Display                       IMPORT  -----   function


; Stack Frame Size: 9 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "TalkToNpc2",447,"_TalkToNpc2"
	SEGMENT STRSECT
L__90:
	DB	"Recieved the TM for %s"
	DB	0
L__91:
	DB	"Recieved a %s"
	DB	0
	SEGMENT CODE
;  448	void EnterDoor(uint8_t index) {
_EnterDoor:
.DEFINE "_EnterDoor"

.VALUE _EnterDoor

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "EnterDoor",448,"_EnterDoor"

.LINE 448

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "tileIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  449		int tileIndex;
;  450		lastPlayerX = playerX;
.LINE 450

	LD	BC,(_playerX)
	LD	HL,_lastPlayerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  451		lastPlayerY = playerY;
.LINE 451

	LD	BC,(_playerY)
	LD	HL,_lastPlayerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  452		indoors = true;
.LINE 452

	LD	A,1
	LD	(_indoors),A
;  453		currentBuilding = currentZoneData.doorzones[index];
.LINE 453

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+288
	ADD	HL,BC
	LD	A,(HL)
	LD	(_currentBuilding),A
;  454	
;  455		for (tileIndex = 0; tileIndex < 128; tileIndex++) {
.LINE 455

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_184
L_182:
;  456			zx7_Decompress(mapTiles[tileIndex], indoortileset_tiles_compressed[tileIndex]);
.LINE 456

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_indoortileset_tiles_compressed
	LD	HL,BC
	ADD	HL,DE
	LD	DE,(HL)
	PUSH	DE
	LD	DE,_mapTiles
	LD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  457		}
L_184:
.LINE 457

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_182
;  458		tilemap.width = 21;
.LINE 458

	LD	A,21
	LD	(_tilemap+13),A
;  459		tilemap.height = 15;
.LINE 459

	LD	A,15
	LD	(_tilemap+12),A
;  460		playerX = currentZoneData.doorx[index] * 16;
.LINE 460

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+304
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  461		playerY = currentZoneData.doory[index] * 16;
.LINE 461

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+320
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  462		tx = playerX / 16;
.LINE 462

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  463		ty = playerY / 16;
.LINE 463

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  464		npc1 = currentZoneData.doornpc1[index];
.LINE 464

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+336
	ADD	HL,BC
	LD	A,(HL)
	LD	(_npc1),A
;  465		npc2 = currentZoneData.doornpc2[index];
.LINE 465

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+352
	ADD	HL,BC
	LD	A,(HL)
	LD	(_npc2),A
;  466		LoadMap();
.LINE 466

	CALL	_LoadMap
;  467	}
.LINE 467

	LD	SP,IX
	POP	IX
	RET	


;**************************** _EnterDoor ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_npc2                               STATIC      1   variable
;_npc1                               STATIC      1   variable
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_mapTiles                           STATIC    384   variable
;_indoortileset_tiles_compressed      IMPORT    384   variable
;_zx7_Decompress                     IMPORT  -----   function
;_currentBuilding                    IMPORT      1   variable
;_currentZoneData                    STATIC    640   variable
;_indoors                            IMPORT      1   variable
;_lastPlayerY                        IMPORT      2   variable
;_playerY                            IMPORT      2   variable
;_lastPlayerX                        IMPORT      2   variable
;_playerX                            IMPORT      2   variable
;tileIndex                             IX-3      3   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "EnterDoor",467,"_EnterDoor"
;  468	void ExitBuilding(void) {
_ExitBuilding:
.DEFINE "_ExitBuilding"

.VALUE _ExitBuilding

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "ExitBuilding",468,"_ExitBuilding"

.LINE 468

.DEFINE "tileIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  469		int tileIndex;
;  470		playerX = lastPlayerX;
.LINE 470

	LD	BC,(_lastPlayerX)
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  471		playerY = lastPlayerY;
.LINE 471

	LD	BC,(_lastPlayerY)
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  472		indoors = false;
.LINE 472

	XOR	A,A
	LD	(_indoors),A
;  473		for (tileIndex = 0; tileIndex < 128; tileIndex++) {
.LINE 473

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_190
L_188:
;  474			zx7_Decompress(mapTiles[tileIndex], outdoortileset_tiles_compressed[tileIndex]);
.LINE 474

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,_outdoortileset_tiles_compressed
	LD	HL,BC
	ADD	HL,DE
	LD	DE,(HL)
	PUSH	DE
	LD	DE,_mapTiles
	LD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  475		}
L_190:
.LINE 475

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_188
;  476		tilemap.width = OUTDOORWIDTH;
.LINE 476

	LD	A,48
	LD	(_tilemap+13),A
;  477		tilemap.height = OUTDOORHEIGHT;
.LINE 477

	LD	A,40
	LD	(_tilemap+12),A
;  478		tx = playerX / 16;
.LINE 478

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  479		ty = playerY / 16;
.LINE 479

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  480		LoadMap();
.LINE 480

	CALL	_LoadMap
;  481	}
.LINE 481

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ExitBuilding ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_mapTiles                           STATIC    384   variable
;_outdoortileset_tiles_compressed      IMPORT    384   variable
;_zx7_Decompress                     IMPORT  -----   function
;_indoors                            IMPORT      1   variable
;_playerY                            IMPORT      2   variable
;_lastPlayerY                        IMPORT      2   variable
;_playerX                            IMPORT      2   variable
;_lastPlayerX                        IMPORT      2   variable
;tileIndex                             IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "ExitBuilding",481,"_ExitBuilding"
;  482	void ExitZone(uint8_t index) {
_ExitZone:
.DEFINE "_ExitZone"

.VALUE _ExitZone

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "ExitZone",482,"_ExitZone"

.LINE 482

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  483		playerX = currentZoneData.exitx[index] * 16;
.LINE 483

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+256
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_playerX
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  484		playerY = currentZoneData.exity[index] * 16;
.LINE 484

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+272
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	LD	HL,_playerY
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  485		currentZone = currentZoneData.exitzone[index];
.LINE 485

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+240
	ADD	HL,BC
	LD	C,(HL)
	LD	HL,_currentZone
	LD	(HL),C
	INC	HL
	LD	(HL),0
;  486		tx = playerX / 16;
.LINE 486

	LD	BC,(_playerX)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_tx),A
;  487		ty = playerY / 16;
.LINE 487

	LD	BC,(_playerY)
	CALL	__stoiu
	LD	BC,16
	CALL	__idivs
	LD	A,L
	LD	(_ty),A
;  488		LoadMap();
.LINE 488

	CALL	_LoadMap
;  489	}
.LINE 489

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ExitZone ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_currentZone                        IMPORT      2   variable
;_playerY                            IMPORT      2   variable
;_playerX                            IMPORT      2   variable
;_currentZoneData                    STATIC    640   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "ExitZone",489,"_ExitZone"
;  490	bool FightTrainer(uint8_t index) {
_FightTrainer:
.DEFINE "_FightTrainer"

.VALUE _FightTrainer

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "FightTrainer",490,"_FightTrainer"

.LINE 490

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  491		currentTrainer = index;
.LINE 491

	LD	A,(IX+6)
	LD	(_currentTrainer),A
;  492		if (indoors && !defeatedTrainersIndoors[currentBuilding][currentTrainer]) {
.LINE 492

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_198
	LD	A,(_currentBuilding)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_defeatedTrainersIndoors
	ADD	HL,BC
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_198
;  493			text_Display(data_trainerText[currentZoneData.data_trainerText[index]], true);
.LINE 493

	LD	BC,1
	PUSH	BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+608
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_data_trainerText
	ADD	HL,BC
	PUSH	HL
	CALL	_text_Display
	POP	BC
	POP	BC
;  494			battle_SpawnTrainer(currentZoneData.trainerspawnids, currentZoneData.trainerspawnlevels, index);
.LINE 494

	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData+464
	PUSH	BC
	LD	BC,_currentZoneData+368
	PUSH	BC
	CALL	_battle_SpawnTrainer
	POP	BC
	POP	BC
	POP	BC
;  495			return true;
.LINE 495

	LD	A,1
	JR	L_200
;  496		}
;  497		else if (!indoors && !defeatedTrainers[currentZone][currentTrainer]) {
L_198:
.LINE 497

	LD	A,(_indoors)
	OR	A,A
	JR	NZ,L_199
	LD	BC,(_currentZone)
	CALL	__stoiu
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_defeatedTrainers
	ADD	HL,BC
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_199
;  498			text_Display(data_trainerText[currentZoneData.data_trainerText[index]], true);
.LINE 498

	LD	BC,1
	PUSH	BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+608
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_data_trainerText
	ADD	HL,BC
	PUSH	HL
	CALL	_text_Display
	POP	BC
	POP	BC
;  499			battle_SpawnTrainer(currentZoneData.trainerspawnids, currentZoneData.trainerspawnlevels, index);
.LINE 499

	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	LD	BC,_currentZoneData+464
	PUSH	BC
	LD	BC,_currentZoneData+368
	PUSH	BC
	CALL	_battle_SpawnTrainer
	POP	BC
	POP	BC
	POP	BC
;  500			return true;
.LINE 500

	LD	A,1
	JR	L_200
;  501		}
L_199:
.LINE 501

;  502		return false;
.LINE 502

	XOR	A,A
;  503	}
L_200:
.LINE 503

	LD	SP,IX
	POP	IX
	RET	


;**************************** _FightTrainer ***************************
;Name                         Addr/Register   Size   Type
;_currentZone                        IMPORT      2   variable
;_defeatedTrainers                   IMPORT  unknown variable
;_battle_SpawnTrainer                IMPORT  -----   function
;_currentZoneData                    STATIC    640   variable
;_data_trainerText                   IMPORT  unknown variable
;_text_Display                       IMPORT  -----   function
;_currentBuilding                    IMPORT      1   variable
;_defeatedTrainersIndoors            IMPORT  unknown variable
;_indoors                            IMPORT      1   variable
;_currentTrainer                     STATIC      1   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "FightTrainer",503,"_FightTrainer"
;  504	
;  505	void map_LoadPokeballs(void) {
_map_LoadPokeballs:
.DEFINE "_map_LoadPokeballs"

.VALUE _map_LoadPokeballs

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_LoadPokeballs",505,"_map_LoadPokeballs"

.LINE 505

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
;  506		int pokemonIndex;
;  507		/* Generate pokemon info To Display At Top of Screen */
;  508		for (pokemonIndex = 0; pokemonIndex < 6; pokemonIndex++) {
.LINE 508

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_208
L_206:
;  509			if (party[pokemonIndex].id == 0) {
.LINE 509

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	IY,(IX+-6)
	LD	A,(IY+0)
	OR	A,A
	JR	NZ,L_205
;  510				pokeballdata[pokemonIndex] = 2;
.LINE 510

	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),2
;  511			}
;  512			else {
.LINE 512

	JR	L_207
L_205:
;  513				if (party[pokemonIndex].currenthealth > 0) {
.LINE 513

	LD	IY,(IX+-6)
	LD	BC,(IY+13)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_203
;  514					pokeballdata[pokemonIndex] = 0;
.LINE 514

	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
;  515				}
;  516				else {
.LINE 516

	JR	L_207
L_203:
;  517					pokeballdata[pokemonIndex] = 1;
.LINE 517

	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),1
;  518				}
;  519			}
;  520		}
L_207:
.LINE 520

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_208:
	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_206
;  521	}
.LINE 521

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_LoadPokeballs ***************************
;Name                         Addr/Register   Size   Type
;_pokeballdata                       STATIC      6   variable
;_party                              IMPORT   1224   variable
;G_4                                   IX-6      3   variable
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "map_LoadPokeballs",521,"_map_LoadPokeballs"
;  522	void LoadMap(void) {
_LoadMap:
.DEFINE "_LoadMap"

.VALUE _LoadMap

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "LoadMap",522,"_LoadMap"

.LINE 522

.DEFINE "mapAV"

.CLASS 65

.VALUE -1

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	DEC	SP
;  523		ti_var_t mapAV;
;  524		if (indoors) {
.LINE 524

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_211
;  525			mapAV = ti_Open("PKMNMD1", "r");
.LINE 525

	LD	BC,L__108
	PUSH	BC
	LD	BC,L__109
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-1),A
;  526			ti_Seek(((int)currentBuilding) * 1270, 0, mapAV);
.LINE 526

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	A,(_currentBuilding)
	UEXT	HL
	LD	L,A
	LD	BC,1270
	CALL	__imuls
	PUSH	HL
	CALL	_ti_Seek
	POP	BC
	POP	BC
	POP	BC
;  527			ti_Read(&currentTileMap, 315, 1, mapAV);
.LINE 527

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,315
	PUSH	BC
	LD	BC,_currentTileMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  528			ti_Read(&currentTypeMap, 315, 1, mapAV);
.LINE 528

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,315
	PUSH	BC
	LD	BC,_currentTypeMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  529			ti_Read(&currentZoneData, 640, 1, mapAV);
.LINE 529

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,640
	PUSH	BC
	LD	BC,_currentZoneData
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  530		}
;  531		else {
.LINE 531

	JR	L_212
L_211:
;  532			mapAV = ti_Open("PKMNMD0", "r");
.LINE 532

	LD	BC,L__110
	PUSH	BC
	LD	BC,L__111
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-1),A
;  533			ti_Seek(((int)currentZone) * 4480, 0, mapAV);
.LINE 533

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_currentZone)
	CALL	__stoiu
	LD	BC,4480
	CALL	__imuls
	PUSH	HL
	CALL	_ti_Seek
	POP	BC
	POP	BC
	POP	BC
;  534			ti_Read(&currentTileMap, 1920, 1, mapAV);
.LINE 534

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,1920
	PUSH	BC
	LD	BC,_currentTileMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  535			ti_Read(&currentTypeMap, 1920, 1, mapAV);
.LINE 535

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,1920
	PUSH	BC
	LD	BC,_currentTypeMap
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  536			ti_Read(&currentZoneData, 640, 1, mapAV);
.LINE 536

	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,640
	PUSH	BC
	LD	BC,_currentZoneData
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  537		}
L_212:
.LINE 537

;  538		ti_CloseAll();
.LINE 538

	CALL	_ti_CloseAll
;  539	}
.LINE 539

	LD	SP,IX
	POP	IX
	RET	


;**************************** _LoadMap ***************************
;Name                         Addr/Register   Size   Type
;_ti_CloseAll                        IMPORT  -----   function
;_currentZone                        IMPORT      2   variable
;_currentZoneData                    STATIC    640   variable
;_currentTypeMap                     STATIC   1920   variable
;_currentTileMap                     STATIC   1920   variable
;_ti_Read                            IMPORT  -----   function
;_currentBuilding                    IMPORT      1   variable
;_ti_Seek                            IMPORT  -----   function
;_ti_Open                            IMPORT  -----   function
;_indoors                            IMPORT      1   variable
;mapAV                                 IX-1      1   variable


; Stack Frame Size: 7 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "LoadMap",539,"_LoadMap"
	SEGMENT STRSECT
L__108:
	DB	"r"
	DB	0
L__109:
	DB	"PKMNMD1"
	DB	0
L__110:
	DB	"r"
	DB	0
L__111:
	DB	"PKMNMD0"
	DB	0
	SEGMENT CODE
;  540	
;  541	int32_t Clamp(int32_t number, int min, int max) {
_Clamp:
.DEFINE "_Clamp"

.VALUE _Clamp

.CLASS 2

.TYPE 69

.ENDEF

.BEGFUNC "Clamp",541,"_Clamp"

.LINE 541

.DEFINE "number"

.CLASS 65

.VALUE 6

.TYPE 5

.ENDEF

.DEFINE "min"

.CLASS 65

.VALUE 12

.TYPE 4

.ENDEF

.DEFINE "max"

.CLASS 65

.VALUE 15

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  542		if (number < min) {
.LINE 542

	LD	BC,(IX+12)
	CALL	__itol
	LD	HL,(IX+6)
	LD	E,(IX+9)
	CALL	__lcmps
	JP	P,L_216
;  543			number = min;
.LINE 543

	LD	BC,(IX+12)
	CALL	__itol
	LD	(IX+6),BC
	LD	(IX+9),A
;  544		}
L_216:
.LINE 544

;  545		if (number > max) {
.LINE 545

	LD	BC,(IX+15)
	CALL	__itol
	LD	E,A
	LD	HL,BC
	LD	BC,(IX+6)
	LD	A,(IX+9)
	CALL	__lcmps
	CALL	__setflag
	JP	P,L_217
;  546			number = max;
.LINE 546

	LD	BC,(IX+15)
	CALL	__itol
	LD	(IX+6),BC
	LD	(IX+9),A
;  547		}
L_217:
.LINE 547

;  548		return number;
.LINE 548

	LD	HL,(IX+6)
	LD	E,(IX+9)
;  549	}
.LINE 549

	LD	SP,IX
	POP	IX
	RET	


;**************************** _Clamp ***************************
;Name                         Addr/Register   Size   Type
;max                                  IX+15      3   parameter
;min                                  IX+12      3   parameter
;number                                IX+6      4   parameter


; Stack Frame Size: 18 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "Clamp",549,"_Clamp"
;  550	uint8_t GetNextTile(uint8_t tx, uint8_t ty, int width) {
_GetNextTile:
.DEFINE "_GetNextTile"

.VALUE _GetNextTile

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "GetNextTile",550,"_GetNextTile"

.LINE 550

.DEFINE "tx"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "ty"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "width"

.CLASS 65

.VALUE 12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  551	
;  552		switch (moveDir) {
.LINE 552

	LD	A,(_moveDir)
	UEXT	HL
	LD	L,A
	CALL	__seqcaseD
	JP	(HL)
L__116:
	DW	4
	DW	1
	DB	0
	DW24	L_219	

	DW24	L_220	

	DW24	L_221	

	DW24	L_222	

	DW24	L_223	

;  553		case 1:
L_219:
.LINE 553

;  554			return(GetTypeMapData(tx + 1, ty, width));
.LINE 554

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	INC	C
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_224
;  555		case 2:
L_220:
.LINE 555

;  556			return(GetTypeMapData(tx - 1, ty, width));
.LINE 556

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	DEC	C
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_224
;  557		case 3:
L_221:
.LINE 557

;  558			return(GetTypeMapData(tx, ty + 1, width));
.LINE 558

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	INC	C
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_224
;  559		case 4:
L_222:
.LINE 559

;  560			return(GetTypeMapData(tx, ty - 1, width));
.LINE 560

	LD	BC,(IX+12)
	PUSH	BC
	LD	C,(IX+9)
	DEC	C
	LD	B,0
	PUSH	BC
	LD	C,(IX+6)
	PUSH	BC
	CALL	_GetTypeMapData
	POP	BC
	POP	BC
	POP	BC
	JR	L_224
;  561		}
L_223:
.LINE 561

;  562		return 0;
.LINE 562

	XOR	A,A
;  563	}
L_224:
.LINE 563

	LD	SP,IX
	POP	IX
	RET	


;**************************** _GetNextTile ***************************
;Name                         Addr/Register   Size   Type
;_GetTypeMapData                     IMPORT  -----   function
;_moveDir                            STATIC      1   variable
;width                                IX+12      3   parameter
;ty                                    IX+9      1   parameter
;tx                                    IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "GetNextTile",563,"_GetNextTile"
;  564	
;  565	uint8_t GetTypeMapData(uint8_t tx, uint8_t ty, int width) {
_GetTypeMapData:
.DEFINE "_GetTypeMapData"

.VALUE _GetTypeMapData

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "GetTypeMapData",565,"_GetTypeMapData"

.LINE 565

.DEFINE "tx"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "ty"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "width"

.CLASS 65

.VALUE 12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  566		if (indoors) {
.LINE 566

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_226
;  567			return (currentTypeMap[(tx)+(ty)* width]);
.LINE 567

	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+12)
	CALL	__imuls
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
	JR	L_227
;  568		}
;  569		else {
L_226:
.LINE 569

;  570			return (currentTypeMap[(tx)+(ty)* width]);
.LINE 570

	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,(IX+12)
	CALL	__imuls
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentTypeMap
	ADD	HL,BC
	LD	A,(HL)
;  571		}
;  572	}
L_227:
.LINE 572

	LD	SP,IX
	POP	IX
	RET	


;**************************** _GetTypeMapData ***************************
;Name                         Addr/Register   Size   Type
;_currentTypeMap                     STATIC   1920   variable
;_indoors                            IMPORT      1   variable
;width                                IX+12      3   parameter
;ty                                    IX+9      1   parameter
;tx                                    IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "GetTypeMapData",572,"_GetTypeMapData"
;  573	
;  574	void DrawEnemies(void) {
_DrawEnemies:
.DEFINE "_DrawEnemies"

.VALUE _DrawEnemies

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "DrawEnemies",574,"_DrawEnemies"

.LINE 574

.DEFINE "xloc"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "yloc"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-12
	LD	SP,HL
;  575		int xloc = 0;
;  576		int yloc = 0;
;  577		for (i = 0; i < 16; i++) {
.LINE 577

	LD	HL,_i
	LD	(HL),0
	INC	HL
	LD	(HL),0
	JR	L_239
L_237:
;  578			if (indoors){
.LINE 578

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_236
;  579				if (currentZoneData.trainerdir[i] != 0) {
.LINE 579

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,_currentZoneData+592
	ADD	HL,BC
	LD	(IX+-9),HL
	LD	A,(HL)
	OR	A,A
	JR	Z,L_238
;  580					xloc = currentZoneData.trainerx[i] * 16;
.LINE 580

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,_currentZoneData+560
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(IX+-3),HL
;  581					yloc = currentZoneData.trainery[i] * 16;
.LINE 581

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,_currentZoneData+576
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	(IX+-6),HL
;  582					gfx_TransparentSprite(enemySprites[currentZoneData.trainerdir[i] - 1], xloc - 8, yloc + 4);
.LINE 582

	LD	IY,(IX+-6)
	LEA	BC,IY+4
	PUSH	BC
	LD	IY,(IX+-3)
	LEA	BC,IY+-8
	PUSH	BC
	LD	HL,(IX+-9)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_enemySprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  583				}
;  584			}
;  585			else {
.LINE 585

	JR	L_238
L_236:
;  586				if (currentZoneData.trainerdir[i] != 0) {
.LINE 586

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,_currentZoneData+592
	ADD	HL,BC
	LD	(IX+-12),HL
	LD	A,(HL)
	OR	A,A
	JR	Z,L_238
;  587					xloc = currentZoneData.trainerx[i] * 16 - screenX;
.LINE 587

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,_currentZoneData+560
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_screenX)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-3),HL
;  588					yloc = currentZoneData.trainery[i] * 16 - screenY;
.LINE 588

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,_currentZoneData+576
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_screenY)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;  589					if (xloc < 336 && yloc < 240 && xloc >= 0 && yloc >= 0) {
.LINE 589

	LD	BC,336
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	P,L_238
	LD	BC,240
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_238
	LD	HL,(IX+-3)
	CALL	__icmpzero
	CALL	__setflag
	JP	M,L_238
	LD	HL,(IX+-6)
	CALL	__icmpzero
	CALL	__setflag
	JP	M,L_238
;  590						gfx_TransparentSprite(enemySprites[currentZoneData.trainerdir[i] - 1], xloc - 8, yloc + 4);
.LINE 590

	LD	IY,(IX+-6)
	LEA	BC,IY+4
	PUSH	BC
	LD	IY,(IX+-3)
	LEA	BC,IY+-8
	PUSH	BC
	LD	HL,(IX+-12)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_enemySprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite
	POP	BC
	POP	BC
	POP	BC
;  591					}
;  592				}
;  593			}
;  594			
;  595		}
L_238:
.LINE 595

	LD	BC,(_i)
	INC	BC
	LD	HL,_i
	LD	(HL),C
	INC	HL
	LD	(HL),B
L_239:
	LD.LIS	BC,16
	LD	HL,(_i)
	OR	A,A
	SBC.SIS	HL,BC
	JR	C,L_237
;  596	}
.LINE 596

	LD	SP,IX
	POP	IX
	RET	


;**************************** _DrawEnemies ***************************
;Name                         Addr/Register   Size   Type
;_screenY                            STATIC      4   variable
;_screenX                            STATIC      4   variable
;_enemySprites                       STATIC     12   variable
;_gfx_TransparentSprite              IMPORT  -----   function
;_currentZoneData                    STATIC    640   variable
;_indoors                            IMPORT      1   variable
;_i                                  IMPORT      2   variable
;G_9                                  IX-12      3   variable
;G_7                                   IX-9      3   variable
;yloc                                  IX-6      3   variable
;xloc                                  IX-3      3   variable


; Stack Frame Size: 18 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "DrawEnemies",596,"_DrawEnemies"
;  597	
;  598	void map_DrawInformationBar(void) {
_map_DrawInformationBar:
.DEFINE "_map_DrawInformationBar"

.VALUE _map_DrawInformationBar

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_DrawInformationBar",598,"_map_DrawInformationBar"

.LINE 598

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  599		int pokemonIndex;
;  600		gfx_SetColor(colors[0]);
.LINE 600

	LD	A,(_colors)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  601		gfx_FillRectangle(0, 0, 320, 16);
.LINE 601

	LD	BC,16
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  602		for (pokemonIndex = 0; pokemonIndex < 6; pokemonIndex++) {
.LINE 602

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_244
L_242:
;  603			gfx_TransparentSprite_NoClip(pokeballSprites[pokeballdata[pokemonIndex]], 16 * pokemonIndex, 0);
.LINE 603

	LD	BC,0
	PUSH	BC
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	PUSH	HL
	LD	BC,_pokeballdata
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_pokeballSprites
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  604		}
L_244:
.LINE 604

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_242
;  605		sprintf(str, "%u$", playerMoney);
.LINE 605

	LD	A,(_playerMoney+3)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_playerMoney)
	PUSH	BC
	LD	BC,L__130
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  606		gfx_PrintStringXY(str, 100, 5);
.LINE 606

	LD	BC,5
	PUSH	BC
	LD	BC,100
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  607	}
.LINE 607

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_DrawInformationBar ***************************
;Name                         Addr/Register   Size   Type
;_gfx_PrintStringXY                  IMPORT  -----   function
;_str                                IMPORT    100   variable
;_playerMoney                        IMPORT      4   variable
;_sprintf                            IMPORT  -----   function
;_pokeballdata                       STATIC      6   variable
;_pokeballSprites                    STATIC      9   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetColor                       IMPORT  -----   function
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "map_DrawInformationBar",607,"_map_DrawInformationBar"
	SEGMENT STRSECT
L__130:
	DB	"%u$"
	DB	0
	SEGMENT CODE
;  608	
;  609	void map_LoseFight(void) {
_map_LoseFight:
.DEFINE "_map_LoseFight"

.VALUE _map_LoseFight

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_LoseFight",609,"_map_LoseFight"

.LINE 609

.DEFINE "partyIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-33
	LD	SP,HL
;  610		int tileIndex, partyIndex, moveIndex;
;  611		text_Display("All your pokemon have fainted", false);
.LINE 611

	LD	BC,0
	PUSH	BC
	LD	BC,L__132
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  612		for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 612

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_254
L_252:
;  613			party[partyIndex].currenthealth = stats_CalculateStats(party[partyIndex]).health;
.LINE 613

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-18),HL
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-9),HL
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-30
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	LD	IY,(IX+-18)
	LD	(IY+13),C
	LD	(IY+14),B
;  614			party[partyIndex].currentstatus = 0;
.LINE 614

	LD	(IY+15),0
;  615			for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 615

	LD	BC,0
	LD	(IX+-6),BC
	LD	BC,(IX+-9)
	LD	(IX+-15),BC
	LD	BC,(IX+-9)
	LD	HL,_party
	ADD	HL,BC
	LD	(IX+-12),HL
	JR	L_251
L_249:
;  616				party[partyIndex].pp[moveIndex] = data_moves[party[partyIndex].moves[moveIndex]].uses;
.LINE 616

	LD	BC,_party
	LD	HL,(IX+-9)
	ADD	HL,BC
	LD	(IX+-33),HL
	LD	BC,(IX+-6)
	LD	IY,(IX+-33)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	BC,HL
	LD	DE,(IX+-6)
	LEA	HL,IY+5
	ADD	HL,DE
	LD	IY,BC
	LD	A,(IY+18)
	LD	(HL),A
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  617			}
L_251:
.LINE 617

	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_249
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  618		}
L_254:
.LINE 618

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_252
;  619		playerX = 5*16;
.LINE 619

	LD	HL,_playerX
	LD	(HL),80
	INC	HL
	LD	(HL),0
;  620		playerY = 7*16;
.LINE 620

	LD	HL,_playerY
	LD	(HL),112
	INC	HL
	LD	(HL),0
;  621		indoors = false;
.LINE 621

	XOR	A,A
	LD	(_indoors),A
;  622		currentZone = 0;
.LINE 622

	LD	HL,_currentZone
	LD	(HL),0
	INC	HL
	LD	(HL),0
;  623		moveDir = 3;
.LINE 623

	LD	A,3
	LD	(_moveDir),A
;  624		tilemap.width = OUTDOORWIDTH;
.LINE 624

	LD	A,48
	LD	(_tilemap+13),A
;  625		tilemap.height = OUTDOORHEIGHT;
.LINE 625

	LD	A,40
	LD	(_tilemap+12),A
;  626		tx = playerX / 16;
.LINE 626

	LD	A,5
	LD	(_tx),A
;  627		ty = playerY / 16;
.LINE 627

	LD	A,7
	LD	(_ty),A
;  628		LoadMap();
.LINE 628

	CALL	_LoadMap
;  629	}
.LINE 629

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_LoseFight ***************************
;Name                         Addr/Register   Size   Type
;_LoadMap                            IMPORT  -----   function
;_ty                                 STATIC      1   variable
;_tx                                 STATIC      1   variable
;_tilemap                            STATIC     18   variable
;_moveDir                            STATIC      1   variable
;_currentZone                        IMPORT      2   variable
;_indoors                            IMPORT      1   variable
;_playerY                            IMPORT      2   variable
;_playerX                            IMPORT      2   variable
;_data_moves                         IMPORT  unknown variable
;_stats_CalculateStats               IMPORT  -----   function
;_party                              IMPORT   1224   variable
;_text_Display                       IMPORT  -----   function
;O_24                                 IX-15      3   variable
;O_25                                 IX-12      3   variable
;G_10                                  IX-9      3   variable
;moveIndex                             IX-6      3   variable
;partyIndex                            IX-3      3   variable


; Stack Frame Size: 39 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "map_LoseFight",629,"_map_LoseFight"
	SEGMENT STRSECT
L__132:
	DB	"All your pokemon have fainted"
	DB	0
	SEGMENT CODE
;  630	
;  631	void map_WinFight(bool wild, uint16_t rewardMoney) {
_map_WinFight:
.DEFINE "_map_WinFight"

.VALUE _map_WinFight

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "map_WinFight",631,"_map_WinFight"

.LINE 631

.DEFINE "wild"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "rewardMoney"

.CLASS 65

.VALUE 9

.TYPE 13

.ENDEF

.DEFINE "str1"

.CLASS 65

.VALUE -22

.DIM 16

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-30
	LD	SP,HL
;  632		char str1[16];
;  633		if (!wild) {
.LINE 633

	LD	A,(IX+6)
	OR	A,A
	JR	NZ,L_273
;  634			playerMoney += rewardMoney;
.LINE 634

	LD	BC,(IX+9)
	CALL	__stoiu
	LD	BC,HL
	LD	E,0
	LD	(IX+-30),E	; spill
	LD	HL,(_playerMoney)
	LD	A,(_playerMoney+3)
	LD	(IX+-29),A	; spill
	LD	E,(IX+-30)	; unspill
	LD	A,E
	LD	E,(IX+-29)	; unspill
	CALL	__ladd
	LD	(_playerMoney),HL
	LD	A,E
	LD	(_playerMoney+3),A
;  635			if (indoors) {
.LINE 635

	LD	A,(_indoors)
	OR	A,A
	JR	Z,L_271
;  636				defeatedTrainersIndoors[currentBuilding][currentTrainer] = true;
.LINE 636

	LD	A,(_currentBuilding)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_defeatedTrainersIndoors
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(HL),1
;  637				if (currentZoneData.trainerreward[currentTrainer] != 0) {
.LINE 637

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+624
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	Z,L_273
;  638					if (currentZoneData.trainerreward[currentTrainer] == 255) {
.LINE 638

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,255
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_262
;  639						badgeCount++;
.LINE 639

	LD	A,(_badgeCount)
	INC	A
	LD	(_badgeCount),A
;  640						sprintf(str, "Recieved a badge");
.LINE 640

	LD	BC,L__140
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  641					}
;  642					else {
.LINE 642

	JR	L_263
L_262:
;  643						playerItems[currentZoneData.trainerreward[currentTrainer] - 1]++;
.LINE 643

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+624
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,_playerItems
	ADD	HL,BC
	LD	(IX+-25),HL
	LD	IY,(IX+-25)
	LD	A,(HL)
	INC	A
	LD	(IY),A
;  644						items_IndexToName(str1, currentZoneData.trainerreward[currentTrainer] - 1);
.LINE 644

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+624
	ADD	HL,BC
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	PEA	IX+-22
	CALL	_items_IndexToName
	POP	BC
	POP	BC
;  645						if (currentZoneData.trainerreward[currentTrainer] - 1 >= 20) {
.LINE 645

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+624
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	M,L_260
;  646							sprintf(str, "Recieved the TM for %s", str1);
.LINE 646

	PEA	IX+-22
	LD	BC,L__142
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  647						}
;  648						else {
.LINE 648

	JR	L_263
L_260:
;  649							sprintf(str, "Recieved a %s", str1);
.LINE 649

	PEA	IX+-22
	LD	BC,L__143
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  650						}
;  651					}
L_263:
.LINE 651

;  652					text_Display(str, false);
.LINE 652

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  653				}
;  654			}
;  655			else {
.LINE 655

	JR	L_273
L_271:
;  656				defeatedTrainers[currentZone][currentTrainer] = true;
.LINE 656

	LD	BC,(_currentZone)
	CALL	__stoiu
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_defeatedTrainers
	ADD	HL,BC
	LD	BC,HL
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(HL),1
;  657				if (currentZoneData.trainerreward[currentTrainer] != 0) {
.LINE 657

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+624
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	Z,L_273
;  658					playerItems[currentZoneData.trainerreward[currentTrainer]-1]++;
.LINE 658

	LD	(IX+-3),BC
	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,_playerItems
	ADD	HL,BC
	LD	(IX+-28),HL
	LD	IY,(IX+-28)
	LD	A,(HL)
	INC	A
	LD	(IY),A
;  659					items_IndexToName(str1, currentZoneData.trainerreward[currentTrainer] - 1);
.LINE 659

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,_currentZoneData+624
	ADD	HL,BC
	LD	C,(HL)
	DEC	C
	LD	B,0
	PUSH	BC
	PEA	IX+-22
	CALL	_items_IndexToName
	POP	BC
	POP	BC
;  660					if (currentZoneData.trainerreward[currentTrainer] - 1 >= 20) {
.LINE 660

	LD	A,(_currentTrainer)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	M,L_267
;  661						sprintf(str, "Recieved the TM for %s", str1);
.LINE 661

	PEA	IX+-22
	LD	BC,L__146
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  662					}
;  663					else {
.LINE 663

	JR	L_268
L_267:
;  664						sprintf(str, "Recieved a %s", str1);
.LINE 664

	PEA	IX+-22
	LD	BC,L__147
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  665					}
L_268:
.LINE 665

;  666					text_Display(str, false);
.LINE 666

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  667				}
;  668			}
;  669		}
L_273:
.LINE 670

	LD	SP,IX
	POP	IX
	RET	


;**************************** _map_WinFight ***************************
;Name                         Addr/Register   Size   Type
;_currentZone                        IMPORT      2   variable
;_defeatedTrainers                   IMPORT  unknown variable
;_text_Display                       IMPORT  -----   function
;_items_IndexToName                  IMPORT  -----   function
;_playerItems                        IMPORT    185   variable
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_badgeCount                         IMPORT      1   variable
;_currentZoneData                    STATIC    640   variable
;_currentTrainer                     STATIC      1   variable
;_currentBuilding                    IMPORT      1   variable
;_defeatedTrainersIndoors            IMPORT  unknown variable
;_indoors                            IMPORT      1   variable
;_playerMoney                        IMPORT      4   variable
;str1                                 IX-22     16   variable
;G_12                                  IX-6      3   variable
;G_16                                  IX-3      3   variable
;rewardMoney                           IX+9      2   parameter
;wild                                  IX+6      1   parameter


; Stack Frame Size: 42 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "map_WinFight",670,"_map_WinFight"
	SEGMENT STRSECT
L__140:
	DB	"Recieved a badge"
	DB	0
L__142:
	DB	"Recieved the TM for %s"
	DB	0
L__143:
	DB	"Recieved a %s"
	DB	0
L__146:
	DB	"Recieved the TM for %s"
	DB	0
L__147:
	DB	"Recieved a %s"
	DB	0
	XREF _PKMNSD4_init:ROM
	XREF _indoortileset_tiles_compressed:ROM
	XREF _outdoortileset_tiles_compressed:ROM
	XREF _pokeball_tiles_compressed:ROM
	XREF _PKMNSD4:ROM
	XREF _shop_compressed:ROM
	XREF _stats_CalculateStats:ROM
	XREF _save_SelectSave:ROM
	XREF _save_Load:ROM
	XREF _badgeCount:ROM
	XREF _takenGifts:ROM
	XREF _defeatedTrainersIndoors:ROM
	XREF _defeatedTrainers:ROM
	XREF _playerItems:ROM
	XREF _playerMoney:ROM
	XREF _currentBuilding:ROM
	XREF _indoors:ROM
	XREF _currentZone:ROM
	XREF _party:ROM
	XREF _lastPlayerY:ROM
	XREF _lastPlayerX:ROM
	XREF _playerY:ROM
	XREF _playerX:ROM
	XREF _textBoxSprite2:ROM
	XREF _textBoxSprite1:ROM
	XREF _text_Display:ROM
	XREF _items_IndexToName:ROM
	XREF _colors:ROM
	XREF _i:ROM
	XREF _str:ROM
	XREF _SetColors:ROM
	XREF _Wait:ROM
	XREF _menu_ItemShop:ROM
	XREF _menu_Box:ROM
	XREF _menu_Menu:ROM
	XREF _battle_SpawnTrainer:ROM
	XREF _battle_SpawnWild:ROM
	XREF _data_npcReward:ROM
	XREF _data_npcText:ROM
	XREF _data_trainerText:ROM
	XREF _data_moves:ROM
	XREF _zx7_Decompress:ROM
	XREF _gfx_TransparentSprite_NoClip:ROM
	XREF _gfx_TransparentSprite:ROM
	XREF _gfx_Sprite:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_Tilemap:ROM
	XREF _gfx_AllocSprite:ROM
	XREF _kb_Scan:ROM
	XREF _sprintf:ROM
	XREF _ti_Seek:ROM
	XREF _ti_Read:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF _rand:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF __lcmps:ROM
	XREF __ladd:ROM
	XREF __idivs:ROM
	XREF __imuls:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __itol:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __seqcaseD:ROM
	XREF __imul_b:ROM
	XDEF _map_WinFight
	XDEF _map_LoseFight
	XDEF _map_DrawInformationBar
	XDEF _DrawEnemies
	XDEF _GetTypeMapData
	XDEF _GetNextTile
	XDEF _Clamp
	XDEF _LoadMap
	XDEF _map_LoadPokeballs
	XDEF _FightTrainer
	XDEF _ExitZone
	XDEF _ExitBuilding
	XDEF _EnterDoor
	XDEF _TalkToNpc2
	XDEF _TalkToNpc1
	XDEF _OpenBox
	XDEF _HealParty
	XDEF _map_Draw
	XDEF _map_End
	XDEF _map_Loop
	XDEF _map_SetupGfx
	XDEF _map_Setup
	XDEF _map_Initialize
	XDEF _str1
	XDEF _clearcharacter2
	XDEF _tempcharacter2
	XDEF _currentTrainer
	XDEF _npc2
	XDEF _npc1
	XDEF _currentZoneData
	XDEF _currentTypeMap
	XDEF _currentTileMap
	XDEF _pauseMenuSprite
	XDEF _pokeballSprites
	XDEF _enemySprites
	XDEF _playerSprites
	XDEF _mapTiles
	XDEF _tilemap
	XDEF _playerState
	XDEF _moveDir
	XDEF _moveState
	XDEF _nextTile
	XDEF _surfing
	XDEF _running
	XDEF _ty
	XDEF _tx
	XDEF _screenY
	XDEF _screenX
	XDEF _pokeballdata
	XDEF _battlechance
	END
