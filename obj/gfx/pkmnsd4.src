; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\GFX\PKMNSD4.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
.BEGREC "NONAME3",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME3"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME3"
.TYPE 8
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME3"
.TYPE 104
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME4"
.TYPE 104
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME3"
.TYPE 104
.ENDEF
.ENDREC "NONAME7"
.BEGREC "NONAME8",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME9"
.BEGREC "NONAME10",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME10"
	SEGMENT DATA
_PKMNSD4:
	DW24	0
	DW24	7197
	DW24	9782
	DW24	12584
	DW24	20690
	DW24	28127
	DW24	35015
	DW24	42285
	DW24	42351
	DW24	42490
.DEFINE "PKMNSD4"
.ALIAS "_PKMNSD4"
.CLASS 69
.VALUE _PKMNSD4
.DIM 10
.TYPE 364
.ENDEF
;    1	// convpng v7.0
;    2	#include <stdint.h>
;    3	#include "PKMNSD4.h"
;    4	
;    5	#include <fileioc.h>
;    6	uint8_t *PKMNSD4[10] = {
	SEGMENT CODE
;    7	 (uint8_t*)0,
;    8	 (uint8_t*)7197,
;    9	 (uint8_t*)9782,
;   10	 (uint8_t*)12584,
;   11	 (uint8_t*)20690,
;   12	 (uint8_t*)28127,
;   13	 (uint8_t*)35015,
;   14	 (uint8_t*)42285,
;   15	 (uint8_t*)42351,
;   16	 (uint8_t*)42490,
;   17	};
;   18	
;   19	bool PKMNSD4_init(void) {
_PKMNSD4_init:
.DEFINE "_PKMNSD4_init"

.VALUE _PKMNSD4_init

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "PKMNSD4_init",19,"_PKMNSD4_init"

.LINE 19

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 14

.ENDEF

.DEFINE "data"

.CLASS 65

.VALUE -6

.TYPE 14

.ENDEF

.DEFINE "appvar"

.CLASS 65

.VALUE -7

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-34
	LD	SP,HL
;   20	    unsigned int data, i;
;   21	    ti_var_t appvar;
;   22	
;   23	    ti_CloseAll();
.LINE 23

	CALL	_ti_CloseAll
;   24	
;   25	    appvar = ti_Open("PKMNSD4", "r");
.LINE 25

	LD	BC,L__0
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-7),A
;   26	    data = (unsigned int)ti_GetDataPtr(appvar) - (unsigned int)PKMNSD4[0];
.LINE 26

	LD	C,(IX+-7)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetDataPtr
	POP	BC
	LD	BC,(_PKMNSD4)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   27	    for (i = 0; i < PKMNSD4_num; i++) {
.LINE 27

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_3
L_1:
;   28	        PKMNSD4[i] += data;
.LINE 28

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD4
	ADD	HL,BC
	LD	(IX+-10),HL
	LD	IY,(IX+-10)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   29	    }
L_3:
.LINE 29

	LD	BC,10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_1
;   30	
;   31	    ti_CloseAll();
.LINE 31

	CALL	_ti_CloseAll
;   32	
;   33	    data = (unsigned int)PKMNSD4[0] - (unsigned int)indoortileset0_tiles_compressed[0];
.LINE 33

	LD	HL,(_PKMNSD4)
	LD	BC,(_indoortileset0_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   34	    for (i = 0; i < indoortileset0_tiles_num; i++) {
.LINE 34

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_8
L_6:
;   35	        indoortileset0_tiles_compressed[i] += data;
.LINE 35

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_indoortileset0_tiles_compressed
	ADD	HL,BC
	LD	(IX+-13),HL
	LD	IY,(IX+-13)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   36	    }
L_8:
.LINE 36

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_6
;   37	
;   38	    data = (unsigned int)PKMNSD4[1] - (unsigned int)indoortileset1_tiles_compressed[0];
.LINE 38

	LD	HL,_PKMNSD4+3
	LD	HL,(HL)
	LD	BC,(_indoortileset1_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   39	    for (i = 0; i < indoortileset1_tiles_num; i++) {
.LINE 39

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_13
L_11:
;   40	        indoortileset1_tiles_compressed[i] += data;
.LINE 40

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_indoortileset1_tiles_compressed
	ADD	HL,BC
	LD	(IX+-16),HL
	LD	IY,(IX+-16)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   41	    }
L_13:
.LINE 41

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_11
;   42	
;   43	    data = (unsigned int)PKMNSD4[2] - (unsigned int)indoortileset2_tiles_compressed[0];
.LINE 43

	LD	HL,_PKMNSD4+6
	LD	HL,(HL)
	LD	BC,(_indoortileset2_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   44	    for (i = 0; i < indoortileset2_tiles_num; i++) {
.LINE 44

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_18
L_16:
;   45	        indoortileset2_tiles_compressed[i] += data;
.LINE 45

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_indoortileset2_tiles_compressed
	ADD	HL,BC
	LD	(IX+-19),HL
	LD	IY,(IX+-19)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   46	    }
L_18:
.LINE 46

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_16
;   47	
;   48	    data = (unsigned int)PKMNSD4[3] - (unsigned int)outdoortileset0_tiles_compressed[0];
.LINE 48

	LD	HL,_PKMNSD4+9
	LD	HL,(HL)
	LD	BC,(_outdoortileset0_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   49	    for (i = 0; i < outdoortileset0_tiles_num; i++) {
.LINE 49

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_23
L_21:
;   50	        outdoortileset0_tiles_compressed[i] += data;
.LINE 50

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_outdoortileset0_tiles_compressed
	ADD	HL,BC
	LD	(IX+-22),HL
	LD	IY,(IX+-22)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   51	    }
L_23:
.LINE 51

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_21
;   52	
;   53	    data = (unsigned int)PKMNSD4[4] - (unsigned int)outdoortileset1_tiles_compressed[0];
.LINE 53

	LD	HL,_PKMNSD4+12
	LD	HL,(HL)
	LD	BC,(_outdoortileset1_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   54	    for (i = 0; i < outdoortileset1_tiles_num; i++) {
.LINE 54

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_28
L_26:
;   55	        outdoortileset1_tiles_compressed[i] += data;
.LINE 55

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_outdoortileset1_tiles_compressed
	ADD	HL,BC
	LD	(IX+-25),HL
	LD	IY,(IX+-25)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   56	    }
L_28:
.LINE 56

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_26
;   57	
;   58	    data = (unsigned int)PKMNSD4[5] - (unsigned int)outdoortileset2_tiles_compressed[0];
.LINE 58

	LD	HL,_PKMNSD4+15
	LD	HL,(HL)
	LD	BC,(_outdoortileset2_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   59	    for (i = 0; i < outdoortileset2_tiles_num; i++) {
.LINE 59

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_33
L_31:
;   60	        outdoortileset2_tiles_compressed[i] += data;
.LINE 60

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_outdoortileset2_tiles_compressed
	ADD	HL,BC
	LD	(IX+-28),HL
	LD	IY,(IX+-28)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   61	    }
L_33:
.LINE 61

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_31
;   62	
;   63	    data = (unsigned int)PKMNSD4[6] - (unsigned int)outdoortileset3_tiles_compressed[0];
.LINE 63

	LD	HL,_PKMNSD4+18
	LD	HL,(HL)
	LD	BC,(_outdoortileset3_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   64	    for (i = 0; i < outdoortileset3_tiles_num; i++) {
.LINE 64

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_38
L_36:
;   65	        outdoortileset3_tiles_compressed[i] += data;
.LINE 65

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_outdoortileset3_tiles_compressed
	ADD	HL,BC
	LD	(IX+-31),HL
	LD	IY,(IX+-31)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   66	    }
L_38:
.LINE 66

	LD	BC,128
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_36
;   67	
;   68	    data = (unsigned int)PKMNSD4[8] - (unsigned int)pokeball_tiles_compressed[0];
.LINE 68

	LD	HL,_PKMNSD4+24
	LD	HL,(HL)
	LD	BC,(_pokeball_tiles_compressed)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-6),HL
;   69	    for (i = 0; i < pokeball_tiles_num; i++) {
.LINE 69

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_43
L_41:
;   70	        pokeball_tiles_compressed[i] += data;
.LINE 70

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_pokeball_tiles_compressed
	ADD	HL,BC
	LD	(IX+-34),HL
	LD	IY,(IX+-34)
	LD	BC,(IX+-6)
	LD	HL,(HL)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   71	    }
L_43:
.LINE 71

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_41
;   72	
;   73	    return (bool)appvar;
.LINE 73

	LD	A,(IX+-7)
;   74	}
.LINE 74

	LD	SP,IX
	POP	IX
	RET	


;**************************** _PKMNSD4_init ***************************
;Name                         Addr/Register   Size   Type
;_pokeball_tiles_compressed          IMPORT      9   variable
;_outdoortileset3_tiles_compressed      IMPORT    384   variable
;_outdoortileset2_tiles_compressed      IMPORT    384   variable
;_outdoortileset1_tiles_compressed      IMPORT    384   variable
;_outdoortileset0_tiles_compressed      IMPORT    384   variable
;_indoortileset2_tiles_compressed      IMPORT    384   variable
;_indoortileset1_tiles_compressed      IMPORT    384   variable
;_indoortileset0_tiles_compressed      IMPORT    384   variable
;_PKMNSD4                            STATIC     30   variable
;_ti_GetDataPtr                      IMPORT  -----   function
;_ti_Open                            IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;appvar                                IX-7      1   variable
;data                                  IX-6      3   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 40 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "PKMNSD4_init",74,"_PKMNSD4_init"
	SEGMENT STRSECT
L__0:
	DB	"r"
	DB	0
L__1:
	DB	"PKMNSD4"
	DB	0
	XREF _ti_GetDataPtr:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF _pokeball_tiles_compressed:ROM
	XREF _outdoortileset3_tiles_compressed:ROM
	XREF _outdoortileset2_tiles_compressed:ROM
	XREF _outdoortileset1_tiles_compressed:ROM
	XREF _outdoortileset0_tiles_compressed:ROM
	XREF _indoortileset2_tiles_compressed:ROM
	XREF _indoortileset1_tiles_compressed:ROM
	XREF _indoortileset0_tiles_compressed:ROM
	XDEF _PKMNSD4_init
	XDEF _PKMNSD4
	END
