; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\..\SRC\GFX\PKMNSD0.C"
	.assume ADL=1
	SEGMENT DATA
_PKMNSD0:
	DW24	0
	DW24	10
	DW24	271
	DW24	655
	DW24	1251
	DW24	1620
	DW24	2123
	DW24	2752
	DW24	3060
	DW24	3557
	DW24	4278
	DW24	4497
	DW24	4746
	DW24	5332
	DW24	5646
	DW24	5925
	DW24	6589
	DW24	6954
	DW24	7387
	DW24	7961
	DW24	8295
	DW24	8807
	DW24	9136
	DW24	9647
	DW24	10010
	DW24	10643
	DW24	10974
	DW24	11500
	DW24	11892
	DW24	12455
	DW24	12797
	DW24	13305
	DW24	13963
	DW24	14335
	DW24	14872
	DW24	15678
	DW24	16030
	DW24	16508
	DW24	17010
	DW24	17691
	DW24	18025
	DW24	18450
	DW24	18771
	DW24	19330
	DW24	19559
	DW24	19984
	DW24	20375
	DW24	20757
	DW24	21266
	DW24	21652
	DW24	22250
	DW24	22470
	DW24	22897
	DW24	23344
	DW24	23900
	DW24	24296
	DW24	24871
	DW24	25290
	DW24	25894
	DW24	26302
	DW24	27007
	DW24	27322
	DW24	27836
	DW24	28384
	DW24	28784
	DW24	29404
	DW24	30079
	DW24	30480
	DW24	31085
	DW24	31906
	DW24	32256
	DW24	32628
	DW24	33195
	DW24	33531
	DW24	34051
	DW24	34390
	DW24	34938
	DW24	35460
	DW24	35965
	DW24	36682
;    1	// convpng v6.8
;    2	#include <stdint.h>
;    3	#include "PKMNSD0.h"
;    4	
;    5	#include <fileioc.h>
;    6	uint8_t *PKMNSD0[80] = {
	SEGMENT CODE
;    7	 (uint8_t*)0,
;    8	 (uint8_t*)10,
;    9	 (uint8_t*)271,
;   10	 (uint8_t*)655,
;   11	 (uint8_t*)1251,
;   12	 (uint8_t*)1620,
;   13	 (uint8_t*)2123,
;   14	 (uint8_t*)2752,
;   15	 (uint8_t*)3060,
;   16	 (uint8_t*)3557,
;   17	 (uint8_t*)4278,
;   18	 (uint8_t*)4497,
;   19	 (uint8_t*)4746,
;   20	 (uint8_t*)5332,
;   21	 (uint8_t*)5646,
;   22	 (uint8_t*)5925,
;   23	 (uint8_t*)6589,
;   24	 (uint8_t*)6954,
;   25	 (uint8_t*)7387,
;   26	 (uint8_t*)7961,
;   27	 (uint8_t*)8295,
;   28	 (uint8_t*)8807,
;   29	 (uint8_t*)9136,
;   30	 (uint8_t*)9647,
;   31	 (uint8_t*)10010,
;   32	 (uint8_t*)10643,
;   33	 (uint8_t*)10974,
;   34	 (uint8_t*)11500,
;   35	 (uint8_t*)11892,
;   36	 (uint8_t*)12455,
;   37	 (uint8_t*)12797,
;   38	 (uint8_t*)13305,
;   39	 (uint8_t*)13963,
;   40	 (uint8_t*)14335,
;   41	 (uint8_t*)14872,
;   42	 (uint8_t*)15678,
;   43	 (uint8_t*)16030,
;   44	 (uint8_t*)16508,
;   45	 (uint8_t*)17010,
;   46	 (uint8_t*)17691,
;   47	 (uint8_t*)18025,
;   48	 (uint8_t*)18450,
;   49	 (uint8_t*)18771,
;   50	 (uint8_t*)19330,
;   51	 (uint8_t*)19559,
;   52	 (uint8_t*)19984,
;   53	 (uint8_t*)20375,
;   54	 (uint8_t*)20757,
;   55	 (uint8_t*)21266,
;   56	 (uint8_t*)21652,
;   57	 (uint8_t*)22250,
;   58	 (uint8_t*)22470,
;   59	 (uint8_t*)22897,
;   60	 (uint8_t*)23344,
;   61	 (uint8_t*)23900,
;   62	 (uint8_t*)24296,
;   63	 (uint8_t*)24871,
;   64	 (uint8_t*)25290,
;   65	 (uint8_t*)25894,
;   66	 (uint8_t*)26302,
;   67	 (uint8_t*)27007,
;   68	 (uint8_t*)27322,
;   69	 (uint8_t*)27836,
;   70	 (uint8_t*)28384,
;   71	 (uint8_t*)28784,
;   72	 (uint8_t*)29404,
;   73	 (uint8_t*)30079,
;   74	 (uint8_t*)30480,
;   75	 (uint8_t*)31085,
;   76	 (uint8_t*)31906,
;   77	 (uint8_t*)32256,
;   78	 (uint8_t*)32628,
;   79	 (uint8_t*)33195,
;   80	 (uint8_t*)33531,
;   81	 (uint8_t*)34051,
;   82	 (uint8_t*)34390,
;   83	 (uint8_t*)34938,
;   84	 (uint8_t*)35460,
;   85	 (uint8_t*)35965,
;   86	 (uint8_t*)36682,
;   87	};
;   88	
;   89	bool PKMNSD0_init(void) {
_PKMNSD0_init:
	LD	HL,-10
	CALL	__frameset
;   90	    unsigned int data, i;
;   91	    ti_var_t appvar;
;   92	
;   93	    ti_CloseAll();
	CALL	_ti_CloseAll
;   94	
;   95	    appvar = ti_Open("PKMNSD0", "r");
	LD	BC,L__0
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-4),A
;   96	    data = (unsigned int)ti_GetDataPtr(appvar) - (unsigned int)PKMNSD0[0];
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetDataPtr
	POP	BC
	LD	BC,(_PKMNSD0)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-7),HL
;   97	    for (i = 0; i < PKMNSD0_num; i++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_3
L_1:
;   98	        PKMNSD0[i] += data;
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	(IX+-10),HL
	LD	HL,(HL)
	LD	IY,(IX+-10)
	LD	BC,(IX+-7)
	ADD	HL,BC
	LD	(IY),HL
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   99	    }
L_3:
	LD	BC,80
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_1
;  100	
;  101	    ti_CloseAll();
	CALL	_ti_CloseAll
;  102	
;  103	    return (bool)appvar;
	LD	A,(IX+-4)
;  104	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _PKMNSD0_init ***************************
;Name                         Addr/Register   Size   Type
;_PKMNSD0                            STATIC    240   variable
;_ti_GetDataPtr                      IMPORT  -----   function
;_ti_Open                            IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;data                                  IX-7      3   variable
;appvar                                IX-4      1   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 16 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__0:
	DB	"r"
	DB	0
L__1:
	DB	"PKMNSD0"
	DB	0
	XREF _ti_GetDataPtr:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF __frameset:ROM
	XDEF _PKMNSD0_init
	XDEF _PKMNSD0
	END
