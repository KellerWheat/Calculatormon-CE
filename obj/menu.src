; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MENU.C"
	.assume ADL=1
	SEGMENT BSS
_switchMode:
	DS	1
_pokemonToSwitch:
	DS	1
_tempcharacter:
	DS	34
	SEGMENT DATA
_menuState1:
	DB	0
_menuState2:
	DB	0
_menuCurrent:
	DB	1
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	#include <math.h>
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	#include <keypadc.h>
;   10	#include <graphx.h>
;   11	#include <compression.h>
;   12	#include <debug.h>
;   13	
;   14	#include "map.h"
;   15	#include "battle.h"
;   16	#include "menu.h"
;   17	#include "misc.h"
;   18	#include "data.h"
;   19	#include "text.h"
;   20	#include "savegame.h"
;   21	#include "stats.h"
;   22	#include "gfx/battle_gfx.h"
;   23	#include "gfx/map_gfx.h"
;   24	#include "items.h"
;   25	#include "gfx/PKMNSD0.h"
;   26	#include "gfx/PKMNSD1.h"
;   27	#include "gfx/PKMNSD2.h"
;   28	#include "gfx/PKMNSD3.h"
;   29	#include "gfx/PKMNSD5.h"
;   30	#include "gfx/PKMNSD6.h"
;   31	
;   32	void MoveMenuCursor(int max);
;   33	
;   34	void ItemMenu(void);
;   35	void FastTravelMenu(void);
;   36	
;   37	
;   38	/* Press enter to toggle; allows player to switch pokemon around */
;   39	bool switchMode;
;   40	uint8_t pokemonToSwitch;
;   41	struct pokemonData tempcharacter;
;   42	
;   43	
;   44	
;   45	uint8_t menuState1 = 0;
;   46	uint8_t menuState2 = 0;
;   47	uint8_t menuCurrent = 1;
	SEGMENT CODE
;   48	
;   49	void menu_Setup(void) {
_menu_Setup:
;   50	
;   51		dbg_SetWatchpoint(&party[0].id, 1);
;   52		dbg_SetWatchpoint(&party[0].moves[0], 1);
;   53		dbg_SetWatchpoint(&party[0].moves[1], 1);
;   54		dbg_SetWatchpoint(&party[0].moves[2], 1);
;   55		dbg_SetWatchpoint(&party[0].moves[3], 1);
;   56	
;   57		textBoxType = 3;
	LD	BC,3
;   58	
;   59		gfx_SetPalette(battle_gfx_pal, sizeof_battle_gfx_pal, 0);
	LD	DE,0
	PUSH	DE
	LD	HL,_PKMNSD5+114
	LD	(_textBoxType),BC
	LD	BC,512
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   60		SetColors(1);
	LD	BC,1
	PUSH	BC
	CALL	_SetColors
	POP	BC
;   61		gfx_SetTextFGColor(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   62	
;   63	
;   64	}
	RET	


;**************************** _menu_Setup ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_PKMNSD5                            IMPORT    117   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_textBoxType                        IMPORT      3   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;   65	
;   66	uint8_t menu_Menu(void) {
_menu_Menu:
	LD	HL,-7
	CALL	__frameset
;   67		int8_t cursorState = 0;
	LD	(IX+-1),0
;   68		
;   69	
;   70		gfx_PrintStringXY("Pokemon", 215, 35);
	LD	BC,35
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   71		gfx_PrintStringXY("Bag", 215, 50);
	LD	BC,50
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__2
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   72		gfx_PrintStringXY("Close Menu", 215, 65);
	LD	BC,65
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__3
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   73		gfx_PrintStringXY("Save", 215, 80);
	LD	BC,80
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__4
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   74		gfx_PrintStringXY("Exit Game", 215, 95);
	LD	BC,95
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__5
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   75		gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
	LD	BC,35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__6
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   76	
;   77		gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   78		gfx_SetDrawScreen();
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   79	
;   80		while (!(kb_Data[6] & kb_Clear)) {
	JR	L_25
L_26:
;   81			kb_Scan();
	CALL	_kb_Scan
;   82			if ((kb_Data[7] & kb_Down)) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_7
;   83				cursorState += 1;
	INC	(IX+-1)
;   84				if (cursorState == 5) {
	LD	A,(IX+-1)
	CP	A,5
	JR	NZ,L_2
;   85					cursorState = 0;
	LD	(IX+-1),0
;   86				}
L_2:
;   87				gfx_FillRectangle(205, 35, 10, 70);
	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,205
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   88				gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	A,15
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   89				Wait(20);
	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;   90			}
L_7:
;   91			if ((kb_Data[7] & kb_Up)) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_24
;   92				cursorState -= 1;
	DEC	(IX+-1)
;   93				if (cursorState == -1) {
	LD	A,(IX+-1)
	CP	A,-1
	JR	NZ,L_5
;   94					cursorState = 4;
	LD	(IX+-1),4
;   95				}
L_5:
;   96				gfx_FillRectangle(205, 35, 10, 70);
	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,205
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   97				gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	A,15
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__12
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   98				Wait(20);
	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;   99			}
L_24:
;  100			if (kb_Data[1] & kb_2nd) {
	LD	A,(16056338)
	AND	A,32
	JR	Z,L_25
;  101				gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  102				if (cursorState == 0) {
	LD	A,(IX+-1)
	OR	A,A
	JR	NZ,L_16
;  103					int chosenPokemon;
;  104					choosePokemon:
L_8:
;  105					chosenPokemon = menu_PokemonMenu(true);
	LD	BC,1
	PUSH	BC
	CALL	_menu_PokemonMenu
	POP	BC
	LD	(IX+-7),HL
;  106					if (chosenPokemon != 0) {
	CALL	__icmpzero
	JR	Z,L_10
;  107						menu_PokemonDetails(chosenPokemon - 1);
	LD	BC,(IX+-7)
	DEC	BC
	PUSH	BC
	CALL	_menu_PokemonDetails
	POP	BC
;  108						goto choosePokemon;
	JR	L_8
;  109					}
L_10:
;  110					return 0;
	XOR	A,A
	JR	L_28
;  111				}
L_16:
;  112				if (cursorState == 1) {
	LD	A,(IX+-1)
	CP	A,1
	JR	NZ,L_18
;  113					int chosenItem;
;  114					chooseItem:
L_12:
;  115					chosenItem = menu_Items(false);
	LD	BC,0
	PUSH	BC
	CALL	_menu_Items
	POP	BC
	LD	(IX+-4),HL
;  116					if (chosenItem != -1) {
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	Z,L_14
;  117						items_UseItem(chosenItem);
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	CALL	_items_UseItem
	POP	BC
;  118						goto chooseItem;
	JR	L_12
;  119					}
L_14:
;  120					return 0;
	XOR	A,A
	JR	L_28
;  121				}
L_18:
;  122				if (cursorState == 2) {
	LD	A,(IX+-1)
	CP	A,2
	JR	NZ,L_22
;  123					return 0;
	XOR	A,A
	JR	L_28
;  124				}
L_22:
;  125				if (cursorState == 3) {
	LD	A,(IX+-1)
	CP	A,3
	JR	NZ,L_21
;  126					save_Save();
	CALL	_save_Save
;  127					return 0;
	XOR	A,A
	JR	L_28
;  128				}
;  129				else if (cursorState == 4) {
L_21:
	LD	A,(IX+-1)
	CP	A,4
	JR	NZ,L_25
;  130					return 2;
	LD	A,2
	JR	L_28
;  131				}
;  132			}
;  133		}
L_25:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_26
;  134		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  135		return 0;
	XOR	A,A
;  136	}
L_28:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Menu ***************************
;Name                         Addr/Register   Size   Type
;_save_Save                          IMPORT  -----   function
;_items_UseItem                      IMPORT  -----   function
;_menu_Items                         IMPORT  -----   function
;_menu_PokemonDetails                IMPORT  -----   function
;_menu_PokemonMenu                   IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;chosenPokemon                         IX-7      3   variable
;chosenItem                            IX-4      3   variable
;cursorState                           IX-1      1   variable


; Stack Frame Size: 13 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__1:
	DB	"Pokemon"
	DB	0
L__2:
	DB	"Bag"
	DB	0
L__3:
	DB	"Close Menu"
	DB	0
L__4:
	DB	"Save"
	DB	0
L__5:
	DB	"Exit Game"
	DB	0
L__6:
	DB	">"
	DB	0
L__9:
	DB	">"
	DB	0
L__12:
	DB	">"
	DB	0
	SEGMENT CODE
;  137	
;  138	int menu_PokemonMenu(bool pressEnter) {
_menu_PokemonMenu:
	LD	HL,-97
	CALL	__frameset
;  139		int partyIndex, statusIndex, menuState;
;  140		gfx_sprite_t *backgroundSprite;
;  141		gfx_sprite_t *pokemonSprite;
;  142		int baseX[6] = { 20,175,20,175,20,175 };
	LEA	DE,IX+-43
	LD	HL,_0temp29
	LD	BC,18
	LDIR	
;  143		int baseY[6] = { 20,20,70,70,120,120 };
	LEA	DE,IX+-61
	LD	HL,_1temp30
	LD	BC,18
	LDIR	
;  144	
;  145	
;  146		menuState = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  147		backgroundSprite = gfx_MallocSprite(160, 120);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-19),HL
;  148		pokemonSprite = gfx_MallocSprite(133, 36);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,36
	PUSH	BC
	LD	BC,133
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
;  149		zx7_Decompress(backgroundSprite, pokemonlist_compressed);
	LD	IY,_PKMNSD5
	LD	(IX+-22),HL
	LD	BC,(IY+90)
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  150		zx7_Decompress(pokemonSprite, menupokemon_compressed);
	LD	HL,_PKMNSD5+93
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  151		MallocIcons();
	CALL	_MallocIcons
;  152	
;  153	
;  154		menu_Setup();
	CALL	_menu_Setup
;  155	
;  156		redraw_PokemonMenu:
L_31:
;  157		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  158	
;  159		gfx_FillScreen(colors[1]);
	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  160		text_DrawTextBox();
	CALL	_text_DrawTextBox
;  161		gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  162		for (partyIndex = 0; partyIndex < 6; partyIndex++) {
	LD	BC,0
	LD	(IX+-6),BC
	JR	L_43
L_41:
;  163			int healthRatio;
;  164			if (party[partyIndex].id != 0) {
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-12),HL
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-9),HL
	LD	IY,(IX+-9)
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_42
;  165				gfx_TransparentSprite_NoClip(pokemonSprite, baseX[partyIndex], baseY[partyIndex]);
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LEA	HL,IX+-43
	LD	BC,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  166				gfx_PrintStringXY(data_pokemon[party[partyIndex].id].name, baseX[partyIndex] + 4, baseY[partyIndex] + 4);
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+4
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+4
	PUSH	BC
	LD	IY,(IX+-9)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  167				sprintf(str, "Lv%u", party[partyIndex].level);
	LD	IY,(IX+-9)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__24
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  168				gfx_PrintStringXY(str, baseX[partyIndex] + 92, baseY[partyIndex] + 4);
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+4
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+92
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  169	
;  170				if (party[partyIndex].currentstatus > 0) {
	LD	BC,(IX+-9)
	LD	(IX+-25),BC
	LD	IY,(IX+-9)
	XOR	A,A
	CP	A,(IY+15)
	JR	NC,L_34
;  171					gfx_TransparentSprite_NoClip(statusIcons[party[partyIndex].currentstatus - 1], baseX[partyIndex] + 7, baseY[partyIndex] + 14);
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,(IX+-9)
	LD	(IX+-25),BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+14
	LD	C,L
	LD	B,0
	PUSH	BC
	LEA	HL,IX+-43
	ADD	HL,DE
	LD	IY,(HL)
	LEA	BC,IY+7
	PUSH	BC
	LD	IY,(IX+-9)
	LD	A,(IY+15)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_statusIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  172				}
L_34:
;  173				healthRatio = (party[partyIndex].currenthealth * 78) / stats_CalculateStats(party[partyIndex]).health;
	LD	BC,(IX+-12)
	LD	HL,_party
	ADD	HL,BC
	LD	(IX+-64),HL
	LD	IY,(IX+-64)
	LD	BC,(IY+13)
	CALL	__stoiu
	LD	A,78
	CALL	__imul_b
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-97),HL
	LD	HL,(IX+-64)
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	PEA	IX+-76
	LD	DE,IY
	LD	BC,34
	LDIR	
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	HL,(IX+-97)
	CALL	__idivs
	LD	(IX+-16),HL
;  174				if (healthRatio > 34) {
	LD	BC,HL
	LD	HL,34
	OR	A,A
	SBC	HL,BC
	JP	P,L_38
;  175					gfx_SetColor(colors[8]);
	LD	HL,_colors+8
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  176				}
;  177				else if (healthRatio > 14) {
	JR	L_39
L_38:
	LD	BC,(IX+-16)
	LD	HL,14
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_36
;  178					gfx_SetColor(colors[9]);
	LD	HL,_colors+9
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  179				}
;  180				else {
	JR	L_39
L_36:
;  181					gfx_SetColor(colors[10]);
	LD	HL,_colors+10
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  182				}
L_39:
;  183				gfx_FillRectangle(baseX[partyIndex] + 47, baseY[partyIndex] + 16, healthRatio, 4);
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LD	HL,4
	PUSH	HL
	LD	HL,(IX+-16)
	PUSH	HL
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+16
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+47
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  184	
;  185				sprintf(str, "%u/%u", party[partyIndex].currenthealth, stats_CalculateStats(party[partyIndex]).health);
	LD	HL,(IX+-9)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	PEA	IX+-88
	LD	BC,34
	LDIR	
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	IY,(IX+-25)
	LD	BC,(IY+13)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__28
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  186				gfx_PrintStringXY(str, baseX[partyIndex] + 32, baseY[partyIndex] + 24);
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+24
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+32
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  187			}
;  188		}
L_42:
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
L_43:
	LD	BC,6
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_41
;  189		gfx_PrintStringXY("Select a pokemon", 30, 190);
	LD	BC,190
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__30
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  190		if (pressEnter) {
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_46
;  191			gfx_PrintStringXY("Press Enter to move pokemon", 30, 205);
	LD	BC,205
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__32
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  192		}
L_46:
;  193	
;  194		gfx_SetDrawScreen();
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  195	
;  196		gfx_Blit(gfx_buffer);
	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  197		gfx_TransparentSprite_NoClip(menucursor, baseX[menuState] - 15, baseY[menuState] + 8);
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+8
	LD	C,L
	LD	B,0
	PUSH	BC
	LEA	HL,IX+-43
	ADD	HL,DE
	LD	IY,(HL)
	LEA	BC,IY+-15
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  198	
;  199		
;  200	
;  201	
;  202		Wait(20);
	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  203		kb_Scan();
	CALL	_kb_Scan
;  204	
;  205		while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
	JR	L_48
L_49:
	CALL	_kb_Scan
L_48:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_49
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_49
;  206		while (!(((kb_Data[1] & kb_2nd) && party[menuState].id != 0) || (kb_Data[6] & kb_Clear))) {
	JR	L_77
L_78:
;  207			kb_Scan();
	CALL	_kb_Scan
;  208			if ((kb_Data[6] & kb_Enter) && pressEnter) {
	LD	A,(16056348)
	AND	A,1
	JR	Z,L_71
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_71
;  209				tempcharacter = party[menuState];
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	DE,_tempcharacter
	LD	BC,34
	LDIR	
;  210				for (partyIndex = menuState; partyIndex > 0; partyIndex--) {
	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	JR	L_56
L_54:
;  211					party[partyIndex] = party[partyIndex - 1];
	LD	HL,(IX+-6)
	LD	(IX+-94),HL	; spill
	DEC	HL
	LD	(IX+-94),HL	; spill
	LD	BC,HL
	LD	HL,34
	CALL	__imulu
	LD	BC,_party
	ADD	HL,BC
	LD	BC,HL
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	DE,_party
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,34
	LDIR	
	LD	HL,(IX+-94)	; unspill
	LD	(IX+-6),HL
;  212				}
L_56:
	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	M,L_54
;  213				party[0] = tempcharacter;
	LD	DE,_party
	LD	HL,_tempcharacter
	LD	BC,34
	LDIR	
;  214				goto redraw_PokemonMenu;
	JR	L_31
;  215			}
L_71:
;  216			if (kb_Data[7] & kb_Down) {
	LD	A,(16056350)
	AND	A,1
	LD	(IX+-13),A
	OR	A,A
	JR	Z,L_70
;  217				menuState+=2;
	LD	IY,(IX+-3)
	LEA	IY,IY+2
	LD	(IX+-3),IY
;  218				if (menuState == 6 || menuState == 7) {
	LD	HL,(IX+-3)
	LD	BC,6
	OR	A,A
	SBC	HL,BC
	JR	Z,L_60
	LD	BC,7
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
L_60:
;  219					menuState -= 6;
	LD	IY,(IX+-3)
	LEA	IY,IY+-6
	LD	(IX+-3),IY
;  220				}
;  221			}
;  222			else if (kb_Data[7] & kb_Up) {
	JR	L_76
L_70:
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_68
;  223				menuState-=2;
	LD	IY,(IX+-3)
	LEA	IY,IY+-2
	LD	(IX+-3),IY
;  224				if (menuState == -1 || menuState == -2) {
	LD	HL,(IX+-3)
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	Z,L_62
	LD	BC,16777214
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
L_62:
;  225					menuState += 6;
	LD	IY,(IX+-3)
	LEA	IY,IY+6
	LD	(IX+-3),IY
;  226				}
;  227			}
;  228			else if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) {
	JR	L_76
L_68:
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_66
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_76
L_66:
;  229				if (menuState % 2 == 0) {
	LD	BC,2
	LD	HL,(IX+-3)
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_65
;  230					menuState += 1;
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  231				}
;  232				else {
	JR	L_76
L_65:
;  233					menuState -= 1;
	LD	BC,(IX+-3)
	DEC	BC
	LD	(IX+-3),BC
;  234				}
;  235			}
L_76:
;  236			if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[7] & kb_Down) || (kb_Data[7] & kb_Up)) {
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_75
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_75
	LD	A,(IX+-13)
	OR	A,A
	JR	NZ,L_75
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_77
L_75:
;  237				gfx_Blit(gfx_buffer);
	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  238				gfx_TransparentSprite_NoClip(menucursor, baseX[menuState] - 15, baseY[menuState] + 8);
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+8
	LD	C,L
	LD	B,0
	PUSH	BC
	LEA	HL,IX+-43
	ADD	HL,DE
	LD	IY,(HL)
	LEA	BC,IY+-15
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  239				Wait(20);
	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  240			}
;  241		}
L_77:
	LD	A,(16056338)
	AND	A,32
	JR	Z,L_51
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	OR	A,A
	JR	NZ,L_80
L_51:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_78
L_80:
;  242		free(backgroundSprite);
	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_free
	POP	BC
;  243		free(pokemonSprite);
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_free
	POP	BC
;  244		FreeIcons();
	CALL	_FreeIcons
;  245		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  246		if (kb_Data[6] & kb_Clear) {
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_82
	OR	A,A
;  247			return 0;
	SBC	HL,HL
	JR	L_83
;  248		}
L_82:
;  249		return menuState + 1;
	LD	HL,(IX+-3)
	INC	HL
;  250	}
L_83:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_PokemonMenu ***************************
;Name                         Addr/Register   Size   Type
;_FreeIcons                          IMPORT  -----   function
;_free                               IMPORT  -----   function
;_tempcharacter                      STATIC     34   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menucursor_data                    IMPORT    262   variable
;_gfx_Blit                           IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_stats_CalculateStats               IMPORT  -----   function
;_statusIcons                        IMPORT     15   variable
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_party                              IMPORT   1224   variable
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_text_DrawTextBox                   IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_FillScreen                     IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_MallocIcons                        IMPORT  -----   function
;_PKMNSD5                            IMPORT    117   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_1temp30                            STATIC     18   variable
;_0temp29                            STATIC     18   variable
;baseY                                IX-61     18   variable
;baseX                                IX-43     18   variable
;G_10                                 IX-25      3   variable
;pokemonSprite                        IX-22      3   variable
;backgroundSprite                     IX-19      3   variable
;healthRatio                          IX-16      3   variable
;G_11                                 IX-13      1   variable
;G_8                                  IX-12      3   variable
;G_9                                   IX-9      3   variable
;partyIndex                            IX-6      3   variable
;menuState                             IX-3      3   variable
;pressEnter                            IX+6      1   parameter


; Stack Frame Size: 106 (bytes)
;       Spill Code: -2 (instruction)


	SEGMENT STRSECT
L__24:
	DB	"Lv%u"
	DB	0
L__28:
	DB	"%u/%u"
	DB	0
L__30:
	DB	"Select a pokemon"
	DB	0
L__32:
	DB	"Press Enter to move pokemon"
	DB	0
	SEGMENT TEXT
_0temp29:
	DW	20
	DB	0
	DW	175
	DB	0
	DW	20
	DB	0
	DW	175
	DB	0
	DW	20
	DB	0
	DW	175
	DB	0
_1temp30:
	DW	20
	DB	0
	DW	20
	DB	0
	DW	70
	DB	0
	DW	70
	DB	0
	DW	120
	DB	0
	DW	120
	DB	0
	SEGMENT CODE
;  251	void menu_PokemonDetails(int pokemonIndex) {
_menu_PokemonDetails:
	LD	HL,-199
	CALL	__frameset
;  252		int page, menuState, tempMove, moveIndex;
;  253		gfx_sprite_t *backgroundSprite;
;  254	
;  255		backgroundSprite = gfx_MallocSprite(160, 120);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-42),HL
;  256		
;  257	
;  258		menu_Setup();
	CALL	_menu_Setup
;  259	
;  260		page = 1;
	LD	BC,1
	LD	(IX+-24),BC
;  261		menuState = 0;
	LD	BC,0
	LD	(IX+-6),BC
;  262		while (page != 0) {
	JR	L_150
L_151:
;  263			Wait(20);
	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  264			kb_Scan();
	CALL	_kb_Scan
;  265			if (page == 1) {
	LD	BC,1
	LD	HL,(IX+-24)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_119
;  266				gfx_sprite_t *pokemonSprite;
;  267				zx7_Decompress(backgroundSprite, infoscreen1_compressed);
	LD	HL,_PKMNSD5+99
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-42)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  268				gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-42)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  269	
;  270	
;  271				gfx_SetTextScale(2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  272	
;  273	
;  274				
;  275				gfx_PrintStringXY(data_pokemon[party[pokemonIndex].id].name, 4, 32);
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-33),HL
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	BC,32
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  276				pokemonSprite = gfx_MallocSprite(56, 56);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,56
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-48),HL
;  277				if (party[pokemonIndex].id < 80) {
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	CP	A,80
	JR	NC,L_85
;  278					zx7_Decompress(pokemonSprite, PKMNSD0[party[pokemonIndex].id]);
	LD	BC,(IX+-3)
	LD	(IX+-63),BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-48)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  279				}
;  280				else {
	JR	L_86
L_85:
;  281					zx7_Decompress(pokemonSprite, PKMNSD1[party[pokemonIndex].id - 80]);
	LD	BC,(IX+-3)
	LD	(IX+-63),BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-48)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  282				}
L_86:
;  283				gfx_ScaledTransparentSprite_NoClip(pokemonSprite, 26, 52, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,52
	PUSH	BC
	LD	BC,26
	PUSH	BC
	LD	BC,(IX+-48)
	PUSH	BC
	CALL	_gfx_ScaledTransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  284				free(pokemonSprite);
	LD	BC,(IX+-48)
	PUSH	BC
	CALL	_free
	POP	BC
;  285	
;  286				sprintf(str, "%u/%u", party[pokemonIndex].currenthealth, stats_CalculateStats(party[pokemonIndex]).health);
	LD	BC,(IX+-63)
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-27),BC
	LD	HL,(IX+-3)
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	PEA	IX+-100
	LD	DE,IY
	LD	BC,34
	LDIR	
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	IY,(IX+-27)
	LD	BC,(IY+13)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__58
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  287				gfx_PrintStringXY(str, 208, 38);
	LD	BC,38
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  288				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).attack);
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	PEA	IX+-112
	LD	BC,34
	LDIR	
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	INC	HL
	INC	HL
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__59
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  289				gfx_PrintStringXY(str, 228, 62);
	LD	BC,62
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  290				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).defence);
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	PEA	IX+-124
	LD	BC,34
	LDIR	
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+4
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__60
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  291				gfx_PrintStringXY(str, 228, 86);
	LD	BC,86
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  292				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).specialattack);
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-59),HL
	LD	(IY+-68),IX	; unspill
	LD	HL,(IY+-59)
	POP	IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	BC,-136
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-68)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-68),HL	; unspill
	LD	HL,(IY+-68)
	POP	IY
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+6
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__61
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  293				gfx_PrintStringXY(str, 228, 110);
	LD	BC,110
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  294				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).specialdefence);
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-59),HL
	LD	(IY+-65),IX	; unspill
	LD	HL,(IY+-59)
	POP	IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	BC,-148
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-65)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-65),HL	; unspill
	LD	HL,(IY+-65)
	POP	IY
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+8
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__62
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  295				gfx_PrintStringXY(str, 228, 134);
	LD	BC,134
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  296				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).speed);
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-59),HL
	LD	(IY+-62),IX	; unspill
	LD	HL,(IY+-59)
	POP	IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	BC,-160
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-62)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-62),HL	; unspill
	LD	HL,(IY+-62)
	POP	IY
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+10
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__63
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  297				gfx_PrintStringXY(str, 228, 158);
	LD	BC,158
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  298	
;  299				sprintf(str, "%u", party[pokemonIndex].level);
	LD	IY,(IX+-27)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  300				gfx_PrintStringXY(str, 64, 186);
	LD	BC,186
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  301				gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element1 - 1], 218, 187);
	LD	BC,_data_pokemon
	LD	DE,187
	PUSH	DE
	LD	DE,218
	PUSH	DE
	LD	IY,(IX+-27)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  302				if (data_pokemon[party[pokemonIndex].id].element2 != 0) {
	LD	IY,(IX+-27)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	OR	A,A
	JR	Z,L_88
;  303					gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element2 - 1], 254, 187);
	LD	DE,187
	PUSH	DE
	LD	DE,254
	PUSH	DE
	LD	IY,(IX+-27)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  304				}
L_88:
;  305				sprintf(str, "%i/%i", party[pokemonIndex].xp, xpPerLevel[data_pokemon[party[pokemonIndex].id].xptype][party[pokemonIndex].level + 1]);
	LD	BC,_party
	LD	HL,(IX+-33)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-35),HL
	LD	IY,(IY+-35)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+49)
	UEXT	HL
	LD	L,A
	LD	BC,303
	CALL	__imulu
	LEA	IY,IX+-128
	LD	BC,_xpPerLevel
	ADD	HL,BC
	LD	IY,(IY+-35)
	LD	A,(IY+9)
	LD	BC,HL
	UEXT	HL
	LD	L,A
	INC	HL
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LEA	IY,IX+-128
	LD	IY,(IY+-35)
	LD	BC,(IY+10)
	PUSH	BC
	LD	BC,L__66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  306				gfx_PrintStringXY(str, 64, 210);
	LD	BC,210
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  307	
;  308				gfx_SetTextScale(1, 1);
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  309	
;  310				gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  311				while (!((kb_Data[7] & kb_Right) || (kb_Data[6] & kb_Clear))) {
	JR	L_90
L_91:
;  312					kb_Scan();
	CALL	_kb_Scan
;  313				}
L_90:
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_121
	JR	L_91
;  314			}
;  315			else if (page == 2) {
L_119:
	LD	BC,2
	LD	HL,(IX+-24)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_121
;  316				char description[19] = { 0 };
	LEA	DE,IX+-88
	LD	HL,_2temp92
	LD	BC,19
;  317				zx7_Decompress(backgroundSprite, infoscreen2_compressed);
	LD	IY,_PKMNSD5
	LDIR	
	LD	BC,(IY+102)
	PUSH	BC
	LD	BC,(IX+-42)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  318				gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-42)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  319	
;  320				gfx_SetTextScale(2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  321	
;  322				gfx_PrintStringXY(data_pokemon[party[pokemonIndex].id].name, 4, 32);
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-21),HL
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-60),HL
	LD	HL,(IX+-21)
	ADD	HL,BC
	LD	(IX+-18),HL
	LD	BC,32
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  323				gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element1 - 1], 164, 34);
	LD	BC,_data_pokemon
	LD	DE,34
	PUSH	DE
	LD	DE,164
	PUSH	DE
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  324				if (data_pokemon[party[pokemonIndex].id].element2 != 0) {
	LD	BC,(IX+-18)
	LD	(IX+-45),BC
	LD	BC,(IX+-18)
	LD	(IX+-30),BC
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	OR	A,A
	JR	Z,L_94
;  325					gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element2 - 1], 200, 34);
	LD	BC,(IX+-18)
	LD	(IX+-45),BC
	LD	BC,(IX+-18)
	LD	(IX+-30),BC
	LD	BC,_data_pokemon
	LD	DE,34
	PUSH	DE
	LD	DE,200
	PUSH	DE
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  326				}
L_94:
;  327	
;  328				gfx_TransparentSprite_NoClip(menucursor, 8, 56 + 24 * menuState);
	LD	B,(IX+-6)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,56
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,8
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  329				for (moveIndex = 0; moveIndex < 4; moveIndex++) {
	LD	BC,0
	LD	(IX+-9),BC
	JR	L_103
L_101:
;  330					if (party[pokemonIndex].moves[moveIndex] > 0) {
	LD	BC,(IX+-45)
	LD	(IX+-30),BC
	LD	IY,(IX+-30)
	LEA	HL,IY+1
	LD	BC,(IX+-9)
	ADD	HL,BC
	LD	(IX+-51),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_102
;  331						gfx_PrintStringXY(data_moves[party[pokemonIndex].moves[moveIndex]].name, 30, 58 + 24 * moveIndex);
	LD	HL,(IX+-51)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-54),HL
	LD	HL,(IX+-9)
	LD	A,24
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+58
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	IY,(IX+-54)
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  332						gfx_TransparentSprite_NoClip(typeIcons[data_moves[party[pokemonIndex].moves[moveIndex]].element - 1], 242, 60 + 24 * moveIndex);
	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,60
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,242
	PUSH	BC
	LD	IY,(IX+-54)
	LD	A,(IY+14)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  333						if(data_moves[party[pokemonIndex].moves[moveIndex]].type == 0)
	LD	BC,(IX+-60)
	LD	(IX+-12),BC
	LD	(IX+-45),BC
	LD	BC,(IX+-12)
	LD	(IX+-30),BC
	LD	IY,(IX+-12)
	LEA	HL,IY+1
	LD	BC,(IX+-9)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	OR	A,A
	JR	NZ,L_99
;  334							gfx_TransparentSprite_NoClip(categoryIcons[0], 280, 59 + 24 * moveIndex);
	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(_categoryIcons)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  335						else if (data_moves[party[pokemonIndex].moves[moveIndex]].type == 1) {
	JR	L_102
L_99:
	LD	BC,(IX+-12)
	LD	(IX+-12),BC
	LD	(IX+-60),BC
	LD	BC,(IX+-12)
	LD	(IX+-45),BC
	LD	BC,(IX+-12)
	LD	(IX+-30),BC
	LD	IY,(IX+-12)
	LEA	HL,IY+1
	LD	BC,(IX+-9)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	CP	A,1
	JR	NZ,L_97
;  336							gfx_TransparentSprite_NoClip(categoryIcons[1], 280, 59 + 24 * moveIndex);
	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	HL,_categoryIcons+3
	LD	BC,280
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  337						}
;  338						else {
	JR	L_102
L_97:
;  339							gfx_TransparentSprite_NoClip(categoryIcons[2], 280, 59 + 24 * moveIndex);
	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	HL,_categoryIcons+6
	LD	BC,280
	PUSH	BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  340						}
;  341					}
;  342				}
L_102:
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
L_103:
	LD	BC,4
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	JP	M,L_101
;  343	
;  344				if (party[pokemonIndex].moves[menuState] != 0) {
	LD	IY,(IX+-30)
	LEA	HL,IY+1
	LD	BC,(IX+-6)
	ADD	HL,BC
	LD	(IX+-15),HL
	LD	(IX+-57),HL
	LD	HL,(IX+-15)
	LD	A,(HL)
	OR	A,A
	JR	Z,L_106
;  345					gfx_SetTextScale(1, 1);
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  346					strncpy(description, data_moveDescriptions[party[pokemonIndex].moves[menuState] - 1], 18);
	LD	BC,18
	PUSH	BC
	LD	HL,(IX+-15)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	PUSH	HL
	PEA	IX+-88
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  347					gfx_PrintStringXY(description, 170, 185);
	LD	BC,185
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-88
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  348					strncpy(description, data_moveDescriptions[party[pokemonIndex].moves[menuState] - 1] + 18, 18);
	LD	BC,_data_moveDescriptions
	LD	DE,18
	PUSH	DE
	LD	HL,(IX+-15)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+18
	PUSH	BC
	PEA	IX+-88
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  349					gfx_PrintStringXY(description, 170, 194);
	LD	BC,194
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-88
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  350					strncpy(description, data_moveDescriptions[party[pokemonIndex].moves[menuState] - 1] + 36, 18);
	LD	BC,_data_moveDescriptions
	LD	DE,18
	PUSH	DE
	LD	HL,(IX+-15)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+36
	PUSH	BC
	PEA	IX+-88
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  351					gfx_PrintStringXY(description, 170, 203);
	LD	BC,203
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-88
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  352					strncpy(description, data_moveDescriptions[party[pokemonIndex].moves[menuState] - 1] + 54, 18);
	LD	BC,_data_moveDescriptions
	LD	DE,18
	PUSH	DE
	LD	HL,(IX+-15)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+54
	PUSH	BC
	PEA	IX+-88
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  353					gfx_PrintStringXY(description, 170, 212);
	LD	BC,212
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-88
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  354					strncpy(description, data_moveDescriptions[party[pokemonIndex].moves[menuState] - 1]+72, 6);
	LD	BC,(IX+-15)
	LD	(IX+-57),BC
	LD	BC,_data_moveDescriptions
	LD	DE,6
	PUSH	DE
	LD	HL,(IX+-15)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+72
	PUSH	BC
	PEA	IX+-88
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  355					gfx_PrintStringXY(description, 170, 221);
	LD	BC,221
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-88
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  356					gfx_SetTextScale(2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  357				}
L_106:
;  358	
;  359				sprintf(str, "%u", data_moves[party[pokemonIndex].moves[menuState]].power);
	LD	HL,(IX+-57)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-36),HL
	LD	IY,(IX+-36)
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__76
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  360				if (data_moves[party[pokemonIndex].moves[menuState]].power < 5) {
	LD	IY,(IX+-36)
	LD	A,(IY+16)
	CP	A,5
	JR	NC,L_108
;  361					sprintf(str, "-");
	LD	BC,L__78
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  362				}
L_108:
;  363				gfx_PrintStringXY(str, 66, 168);
	LD	BC,168
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  364				sprintf(str, "%u", data_moves[party[pokemonIndex].moves[menuState]].accuracy);
	LD	IY,(IX+-36)
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__79
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  365				gfx_PrintStringXY(str, 66, 194);
	LD	BC,194
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  366				sprintf(str, "%u/%u", party[pokemonIndex].pp[menuState], data_moves[party[pokemonIndex].moves[menuState]].uses);
	LD	HL,(IX+-21)
	LD	BC,_party
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-38),HL
	LD	IY,(IY+-38)
	LD	BC,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+18)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LEA	IY,IX+-128
	LD	IY,(IY+-38)
	LD	BC,(IX+-6)
	LEA	HL,IY+5
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__80
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  367				gfx_PrintStringXY(str, 66, 216);
	LD	BC,216
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  368	
;  369				gfx_SetTextScale(1, 1);
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  370	
;  371	
;  372				gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  373				while (!((kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down) || (kb_Data[6] & kb_Enter) || (kb_Data[6] & kb_Sub) || (kb_Data[6] & kb_Add))) {
	JR	L_115
L_116:
;  374					kb_Scan();
	CALL	_kb_Scan
;  375				}
L_115:
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_121
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_121
	LD	A,(16056350)
	AND	A,1
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,1
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,4
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,2
	JR	Z,L_116
;  376			}
L_121:
;  377			if (kb_Data[7] & kb_Right) {
	LD	A,(16056350)
	AND	A,4
	JR	Z,L_123
;  378				page = 2;
	LD	BC,2
	LD	(IX+-24),BC
;  379			}
L_123:
;  380			if (kb_Data[7] & kb_Left) {
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_127
;  381				page = 1;
	LD	BC,1
	LD	(IX+-24),BC
;  382			}
L_127:
;  383			if (kb_Data[7] & kb_Up) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_131
;  384				if (menuState > 0) {
	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_131
;  385					menuState--;
	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  386				}
;  387			}
L_131:
;  388			if (kb_Data[7] & kb_Down) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_139
;  389				if (menuState < 3) {
	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JP	P,L_139
;  390					menuState++;
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  391				}
;  392			}
L_139:
;  393			if ((kb_Data[6] & kb_Sub) || (kb_Data[6] & kb_Add) && page == 2) {
	LD	A,(16056348)
	AND	A,4
	JR	NZ,L_138
	LD	A,(16056348)
	AND	A,2
	JR	Z,L_147
	LD	BC,2
	LD	HL,(IX+-24)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_147
L_138:
;  394				if (kb_Data[6] & kb_Add) {
	LD	A,(16056348)
	AND	A,2
	JR	Z,L_137
;  395					party[pokemonIndex].moves[menuState]++;
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-44),HL
	LD	IY,(IY+-44)
	LD	BC,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-41),HL
	LD	HL,(IY+-41)
	LD	IY,(IY+-44)
	LD	BC,(IX+-6)
	LD	A,(HL)
	LEA	HL,IY+1
	ADD	HL,BC
	INC	A
	LD	(HL),A
;  396				}
;  397				else {
	JR	L_147
L_137:
;  398					party[pokemonIndex].moves[menuState]--;
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-50),HL
	LD	IY,(IY+-50)
	LD	BC,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-47),HL
	LD	HL,(IY+-47)
	LD	IY,(IY+-50)
	LD	BC,(IX+-6)
	LD	A,(HL)
	LEA	HL,IY+1
	ADD	HL,BC
	DEC	A
	LD	(HL),A
;  399				}
;  400			}
L_147:
;  401			if ((kb_Data[6] & kb_Enter) && page == 2) {
	LD	A,(16056348)
	AND	A,1
	JR	Z,L_149
	LD	BC,2
	LD	HL,(IX+-24)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_149
;  402				tempMove = party[pokemonIndex].moves[menuState];
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-39),HL
	LD	(IX+-66),HL
	LD	HL,(IX+-39)
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+1
	LD	BC,(IX+-6)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	(IX+-69),HL
;  403				for (moveIndex = menuState; moveIndex > 0; moveIndex--) {
	LD	BC,(IX+-6)
	LD	(IX+-9),BC
	JR	L_144
L_142:
;  404					party[pokemonIndex].moves[moveIndex] = party[pokemonIndex].moves[moveIndex - 1];
	LD	BC,(IX+-39)
	LD	(IX+-66),BC
	LD	HL,(IX+-39)
	LD	BC,_party
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-56),HL
	LD	IY,(IY+-56)
	LEA	BC,IY+1
	LEA	IY,IX+-128
	LD	(IY+-53),BC
	LD	BC,(IX+-9)
	DEC	BC
	LD	DE,IX
	LD	HL,-181
	ADD	HL,DE
	LD	HL,(HL)
	LD	DE,BC
	ADD	HL,DE
	LD	DE,IX
	LD	IY,-181
	ADD	IY,DE
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-59),HL
	LD	(IY+-71),HL	; unspill
	LD	HL,(IY+-59)
	POP	IY
	LD	HL,(IY)
	LD	DE,(IX+-9)
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-59),HL
	LD	HL,(IY+-71)
	POP	IY
	LD	A,(HL)
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-59)
	POP	IY
	LD	(HL),A
	LD	(IX+-9),BC
;  405				}
L_144:
	LD	BC,(IX+-9)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	M,L_142
;  406				party[pokemonIndex].moves[0] = tempMove;
	LD	A,(IX+-69)
	LD	HL,(IX+-66)
;  407				menuState = 0;
	LD	DE,0
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	(IY+1),A
	LD	(IX+-6),DE
;  408			}
L_149:
;  409			if (kb_Data[6] & kb_Clear) {
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_150
;  410				page = 0;
	LD	BC,0
	LD	(IX+-24),BC
;  411			}
;  412		}
L_150:
	LD	HL,(IX+-24)
	CALL	__icmpzero
	JR	NZ,L_151
;  413		free(backgroundSprite);
	LD	BC,(IX+-42)
	PUSH	BC
	CALL	_free
	POP	BC
;  414	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_PokemonDetails ***************************
;Name                         Addr/Register   Size   Type
;_data_moveDescriptions              IMPORT  unknown variable
;_strncpy                            IMPORT  -----   function
;_categoryIcons                      IMPORT      9   variable
;_data_moves                         IMPORT  unknown variable
;_menucursor_data                    IMPORT    262   variable
;_2temp92                            STATIC     19   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_xpPerLevel                         IMPORT   1212   variable
;_typeIcons                          IMPORT     51   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_stats_CalculateStats               IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_free                               IMPORT  -----   function
;_gfx_ScaledTransparentSprite_NoClip      IMPORT  -----   function
;_PKMNSD1                            IMPORT    216   variable
;_PKMNSD0                            IMPORT    240   variable
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_party                              IMPORT   1224   variable
;_gfx_SetTextScale                   IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_PKMNSD5                            IMPORT    117   variable
;_zx7_Decompress                     IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;description                          IX-88     19   variable
;tempMove                             IX-69      3   variable
;G_62                                 IX-66      3   variable
;G_19                                 IX-63      3   variable
;G_46                                 IX-60      3   variable
;G_55                                 IX-57      3   variable
;G_45                                 IX-54      3   variable
;G_43                                 IX-51      3   variable
;pokemonSprite                        IX-48      3   variable
;G_41                                 IX-45      3   variable
;backgroundSprite                     IX-42      3   variable
;G_61                                 IX-39      3   variable
;G_56                                 IX-36      3   variable
;G_33                                 IX-33      3   variable
;G_49                                 IX-30      3   variable
;G_26                                 IX-27      3   variable
;page                                 IX-24      3   variable
;G_60                                 IX-21      3   variable
;G_35                                 IX-18      3   variable
;G_50                                 IX-15      3   variable
;G_40                                 IX-12      3   variable
;moveIndex                             IX-9      3   variable
;menuState                             IX-6      3   variable
;G_18                                  IX-3      3   variable
;pokemonIndex                          IX+6      3   parameter


; Stack Frame Size: 208 (bytes)
;       Spill Code: -14 (instruction)


	SEGMENT STRSECT
L__58:
	DB	"%u/%u"
	DB	0
L__59:
	DB	"%u"
	DB	0
L__60:
	DB	"%u"
	DB	0
L__61:
	DB	"%u"
	DB	0
L__62:
	DB	"%u"
	DB	0
L__63:
	DB	"%u"
	DB	0
L__64:
	DB	"%u"
	DB	0
L__66:
	DB	"%i/%i"
	DB	0
L__76:
	DB	"%u"
	DB	0
L__78:
	DB	"-"
	DB	0
L__79:
	DB	"%u"
	DB	0
L__80:
	DB	"%u/%u"
	DB	0
	SEGMENT TEXT
_2temp92:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT CODE
;  415	int menu_Items(bool inBattle) {
_menu_Items:
	LD	HL,-674
	CALL	__frameset
;  416		int page, menuState, cursorState, itemIndex, usableItemCount, usableItems[20], usableTMCount, usableTMs[165];
;  417		gfx_sprite_t *backgroundSprite;
;  418	
;  419	
;  420		/* Generate Usable Items List */
;  421		usableItemCount = 0;
	LD	BC,0
	LD	(IX+-15),BC
;  422		usableTMCount = 0;
	LD	(IX+-18),BC
;  423		for (itemIndex = 0; itemIndex < 20; itemIndex++) {
	LD	(IX+-3),BC
	JR	L_159
L_157:
;  424			if (playerItems[itemIndex] > 0) {
	LD	BC,_playerItems
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_158
;  425				usableItems[usableItemCount] = itemIndex;
	LD	HL,(IX+-15)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+-3)
	LD	BC,-671	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-167
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-674	; spill
	CALL	__istix
	POP	HL
	LD	BC,-671	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-671	; spill
	CALL	__istix
	POP	HL
	LD	BC,-674	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-671	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,BC
	LD	(HL),DE
;  426				usableItemCount++;
	LD	BC,(IX+-15)
	INC	BC
	LD	(IX+-15),BC
;  427			}
;  428		}
L_158:
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_159:
	LD	BC,20
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_157
;  429		for (itemIndex = 0; itemIndex < 165; itemIndex++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_165
L_163:
;  430			if (playerItems[itemIndex + 20] > 0) {
	LD	IY,(IX+-3)
	LEA	IY,IY+20
	LD	(IX+-27),IY
	LD	HL,(IX+-27)
	LD	BC,_playerItems
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_164
;  431				usableTMs[usableTMCount] = itemIndex + 20;
	LD	HL,(IX+-18)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+-27)
	LD	BC,-665	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-662
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-668	; spill
	CALL	__istix
	POP	HL
	LD	BC,-665	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-665	; spill
	CALL	__istix
	POP	HL
	LD	BC,-668	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-665	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,BC
	LD	(HL),DE
;  432				usableTMCount++;
	LD	BC,(IX+-18)
	INC	BC
	LD	(IX+-18),BC
;  433			}
;  434		}
L_164:
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_165:
	LD	BC,165
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_163
;  435		backgroundSprite = gfx_MallocSprite(160, 88);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,88
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
;  436		zx7_Decompress(backgroundSprite, bag_compressed);
	LD	IY,_PKMNSD5
	LD	(IX+-24),HL
	LD	BC,(IY+96)
	PUSH	BC
	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  437	
;  438		menu_Setup();
	CALL	_menu_Setup
;  439	
;  440	
;  441		page = 1;
	LD	BC,1
	LD	(IX+-12),BC
;  442		menuState = 0;
	LD	BC,0
	LD	(IX+-6),BC
;  443		cursorState = 0;
	LD	(IX+-9),BC
;  444		while (page != 0)
	JR	L_237
L_238:
;  445		{
;  446	
;  447			gfx_FillScreen(colors[1]);
	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  448			text_DrawTextBox();
	CALL	_text_DrawTextBox
;  449			gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  450			gfx_TransparentSprite_NoClip(menucursorsmall, 132, 19 + 14 * cursorState);
	LD	B,(IX+-9)
	LD	C,14
	MLT	BC
	LD	A,C
	ADD	A,19
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,132
	PUSH	BC
	LD	BC,_menucursorsmall_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  451			
;  452			Wait(15);
	LD	BC,15
	PUSH	BC
	CALL	_Wait
	POP	BC
;  453	
;  454			kb_Scan();
	CALL	_kb_Scan
;  455			if (page == 1) {
	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_198
;  456				char description[37] = { 0 };
	LEA	DE,IX+-107
;  457				gfx_SetTextScale(2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	HL,_3temp168
	LD	BC,37
	LDIR	
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  458				gfx_PrintStringXY("Items", 12, 19);
	LD	BC,19
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__109
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  459				gfx_SetTextScale(1, 1);
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  460				for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < usableItemCount; itemIndex++) {
	LD	BC,(IX+-6)
	LD	(IX+-3),BC
	JR	L_173
L_171:
;  461					gfx_PrintStringXY(itemNames[usableItems[itemIndex]], 140, 21 + 14 * (itemIndex - menuState));
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LD	BC,-167
	LEA	DE,IY+21
	PUSH	DE
	LD	DE,140
	PUSH	DE
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,HL
	LD	HL,IX
	ADD	HL,BC
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  462					sprintf(str, "%u", playerItems[usableItems[itemIndex]]);
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-167
	ADD	HL,DE
	ADD	HL,BC
	LD	HL,(HL)
	LD	BC,_playerItems
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__110
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  463					gfx_PrintStringXY(str, 274, 21 + 14 * (itemIndex - menuState));
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,274
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  464				}
L_173:
	LD	IY,(IX+-6)
	LEA	BC,IY+10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_174
	LD	BC,(IX+-15)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_171
L_174:
;  465	
;  466				strncpy(description, itemDescriptions[usableItems[menuState + cursorState]], 36);
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-167
	ADD	HL,DE
	ADD	HL,BC
	LD	(IX+-30),HL
	LD	BC,36
	PUSH	BC
	LD	HL,(IX+-30)
	LD	HL,(HL)
	LD	A,68
	CALL	__imul_b
	LD	BC,_itemDescriptions
	ADD	HL,BC
	PUSH	HL
	PEA	IX+-107
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  467				gfx_PrintStringXY(description, 14, 185);
	LD	BC,185
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-107
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  468				strncpy(description, itemDescriptions[usableItems[menuState + cursorState]] + 36, 32);
	LD	A,68
	LD	BC,_itemDescriptions
	LD	DE,32
	PUSH	DE
	LD	HL,(IX+-30)
	LD	HL,(HL)
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+36
	PUSH	BC
	PEA	IX+-107
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  469				gfx_PrintStringXY(description, 14, 200);
	LD	BC,200
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-107
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  470	
;  471				gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  472				while (!((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
	JR	L_180
L_181:
;  473					kb_Scan();
	CALL	_kb_Scan
;  474				}
L_180:
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_206
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_206
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_206
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_206
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_206
	LD	A,(16056350)
	AND	A,1
	JR	NZ,L_206
	JR	L_181
;  475			}
;  476			else if (page == 2) {
L_198:
	LD	BC,2
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_206
;  477				char description[37] = { 0 };
	LEA	DE,IX+-70
;  478				gfx_SetTextScale(2, 2);
	PUSH	BC
	PUSH	BC
	LD	HL,_4temp182
	LD	BC,37
	LDIR	
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  479				gfx_PrintStringXY("TMs", 12, 19);
	LD	BC,19
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__120
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  480				gfx_SetTextScale(1, 1);
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  481				for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < usableTMCount; itemIndex++) {
	LD	BC,(IX+-6)
	LD	(IX+-3),BC
	JR	L_187
L_185:
;  482					sprintf(str, "TM%u %s", usableTMs[itemIndex] - 19, data_moves[usableTMs[itemIndex] - 19].name);
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-662
	ADD	HL,DE
	ADD	HL,BC
	LD	IY,(HL)
	LEA	DE,IY+-19
	LD	BC,DE
	LD	HL,21
	CALL	__imulu
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,DE
	PUSH	BC
	LD	BC,L__121
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  483					gfx_PrintStringXY(str, 140, 21 + 14 * (itemIndex - menuState));
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  484				}
L_187:
	LD	IY,(IX+-6)
	LEA	BC,IY+10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	P,L_188
	LD	BC,(IX+-18)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_185
L_188:
;  485	
;  486				strncpy(description, data_moveDescriptions[usableTMs[menuState + cursorState] - 20], 36);
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-662
	ADD	HL,DE
	ADD	HL,BC
	LD	(IX+-21),HL
	LD	BC,36
	PUSH	BC
	LD	HL,(IX+-21)
	LD	IY,(HL)
	LEA	HL,IY+-20
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	PUSH	HL
	PEA	IX+-70
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  487				gfx_PrintStringXY(description, 14, 185);
	LD	BC,185
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-70
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  488				strncpy(description, data_moveDescriptions[usableTMs[menuState + cursorState] - 20] + 36, 36);
	LD	A,78
	LD	BC,_data_moveDescriptions
	LD	DE,36
	PUSH	DE
	LD	HL,(IX+-21)
	LD	IY,(HL)
	LEA	HL,IY+-20
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+36
	PUSH	BC
	PEA	IX+-70
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  489				gfx_PrintStringXY(description, 14, 200);
	LD	BC,200
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-70
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  490				strncpy(description, data_moveDescriptions[usableTMs[menuState + cursorState] - 20] + 72, 6);
	LD	A,78
	LD	BC,_data_moveDescriptions
	LD	DE,6
	PUSH	DE
	LD	HL,(IX+-21)
	LD	IY,(HL)
	LEA	HL,IY+-20
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+72
	PUSH	BC
	PEA	IX+-70
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  491				gfx_PrintStringXY(description, 14, 215);
	LD	BC,215
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-70
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  492	
;  493				gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  494				while (!((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
	JR	L_194
L_195:
;  495					kb_Scan();
	CALL	_kb_Scan
;  496				}
L_194:
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_206
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_206
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_206
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_206
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_206
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_195
;  497			}
L_206:
;  498			if (kb_Data[7] & kb_Up) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_222
;  499				if (menuState > 0 && cursorState <= 2) {
	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_204
	LD	BC,(IX+-9)
	LD	HL,2
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_204
;  500					menuState--;
	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  501				}
;  502				else if(menuState + cursorState > 0) {
	JR	L_222
L_204:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_222
;  503					cursorState--;
	LD	BC,(IX+-9)
	DEC	BC
	LD	(IX+-9),BC
;  504				}
;  505			}
L_222:
;  506			if (kb_Data[7] & kb_Down) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_229
;  507				if (page == 1) {
	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_220
;  508					if (menuState + 10 < usableItemCount && cursorState >= 3) {
	LD	IY,(IX+-6)
	LEA	HL,IY+10
	LD	BC,(IX+-15)
	OR	A,A
	SBC	HL,BC
	JP	P,L_212
	LD	BC,3
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_212
;  509						menuState++;
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  510					}
;  511					else if (menuState + cursorState < usableItemCount - 1) {
	JR	L_229
L_212:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IX+-15)
	DEC	BC
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_229
;  512						cursorState++;
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  513					}
;  514				}
;  515				else {
	JR	L_229
L_220:
;  516					if (menuState + 10 < usableTMCount && cursorState >= 7) {
	LD	IY,(IX+-6)
	LEA	HL,IY+10
	LD	BC,(IX+-18)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_218
	LD	BC,7
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_218
;  517						menuState++;
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  518					}
;  519					else if (menuState + cursorState < usableTMCount - 1) {
	JR	L_229
L_218:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IX+-18)
	DEC	BC
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_229
;  520						cursorState++;
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  521					}
;  522				}
;  523			}
L_229:
;  524			if (((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) && !inBattle) {
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_224
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_231
L_224:
	LD	A,(IX+6)
	OR	A,A
	JR	NZ,L_231
;  525				if (page == 1) {
	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_226
;  526					page = 2;
	LD	BC,2
	LD	(IX+-12),BC
;  527				}
;  528				else {
	JR	L_227
L_226:
;  529					page = 1;
	LD	(IX+-12),BC
;  530				}
L_227:
;  531				menuState = 0;
	LD	BC,0
	LD	(IX+-6),BC
;  532				cursorState = 0;
	LD	(IX+-9),BC
;  533			}
L_231:
;  534			if (kb_Data[6] & kb_Clear) {
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_236
;  535				page = 0;
	LD	BC,0
	LD	(IX+-12),BC
;  536			}
L_236:
;  537			if (kb_Data[1] & kb_2nd) {
	LD	A,(16056338)
	AND	A,32
	JR	Z,L_237
;  538				int itemToUse;
;  539				if (page == 1) {
	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_233
;  540					itemToUse = usableItems[menuState + cursorState];
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-167
	ADD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	LD	(IX+-33),BC
;  541				}
;  542				else {
	JR	L_234
L_233:
;  543					itemToUse = usableTMs[menuState + cursorState];
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-662
	ADD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	LD	(IX+-33),BC
;  544				}
L_234:
;  545				free(backgroundSprite);
	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_free
	POP	BC
;  546				gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  547				return itemToUse;
	LD	HL,(IX+-33)
	JR	L_240
;  548			}
;  549		}
L_237:
	LD	HL,(IX+-12)
	CALL	__icmpzero
	JR	NZ,L_238
;  550		free(backgroundSprite);
	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_free
	POP	BC
;  551		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  552		return -1;
	LD	HL,16777215
;  553	}
L_240:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Items ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SetDraw                        IMPORT  -----   function
;_free                               IMPORT  -----   function
;_data_moveDescriptions              IMPORT  unknown variable
;_data_moves                         IMPORT  unknown variable
;_4temp182                           STATIC     37   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_itemDescriptions                   IMPORT   1360   variable
;_strncpy                            IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_itemNames                          IMPORT    320   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_3temp168                           STATIC     37   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menucursorsmall_data               IMPORT     72   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_text_DrawTextBox                   IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_FillScreen                     IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_PKMNSD5                            IMPORT    117   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_playerItems                        IMPORT    185   variable
;usableTMs                           IX-662    495   variable
;usableItems                         IX-167     60   variable
;description                         IX-107     37   variable
;description                          IX-70     37   variable
;itemToUse                            IX-33      3   variable
;G_64                                 IX-30      3   variable
;G_63                                 IX-27      3   variable
;backgroundSprite                     IX-24      3   variable
;G_65                                 IX-21      3   variable
;usableTMCount                        IX-18      3   variable
;usableItemCount                      IX-15      3   variable
;page                                 IX-12      3   variable
;cursorState                           IX-9      3   variable
;menuState                             IX-6      3   variable
;itemIndex                             IX-3      3   variable
;inBattle                              IX+6      1   parameter


; Stack Frame Size: 683 (bytes)
;       Spill Code: -14 (instruction)


	SEGMENT STRSECT
L__109:
	DB	"Items"
	DB	0
L__110:
	DB	"%u"
	DB	0
L__120:
	DB	"TMs"
	DB	0
L__121:
	DB	"TM%u %s"
	DB	0
	SEGMENT TEXT
_3temp168:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_4temp182:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT CODE
;  554	void menu_Box() {
_menu_Box:
	LD	HL,-182
	CALL	__frameset
;  555		int pokemonIndex, memIndex, menuState;
;  556		bool grabbingPokemon;
;  557		gfx_sprite_t *tempSprite;
;  558		gfx_sprite_t *backgroundSprite;
;  559		gfx_sprite_t *pokemonSprites[36];
;  560		gfx_sprite_t *largeSprite;
;  561	
;  562		
;  563	
;  564	
;  565		menu_Setup();
	CALL	_menu_Setup
;  566		gfx_SetTextFGColor(colors[1]);
	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  567	
;  568	
;  569		backgroundSprite = gfx_MallocSprite(160, 120);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
;  570		zx7_Decompress(backgroundSprite, pc_compressed);
	LD	IY,_PKMNSD5
	LD	(IX+-17),HL
	LD	BC,(IY+105)
	PUSH	BC
	LD	BC,(IX+-17)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  571		largeSprite = gfx_MallocSprite(56, 56);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,56
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_AllocSprite
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-13),HL
;  572		for (pokemonIndex = 0; pokemonIndex < 36; pokemonIndex++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_244
L_242:
;  573			pokemonSprites[pokemonIndex] = gfx_MallocSprite(30, 24);
	LD	BC,_malloc
	PUSH	BC
	LD	BC,24
	PUSH	BC
	LD	BC,30
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_AllocSprite
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,HL
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-48),DE
	POP	IY
	LD	DE,-134
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-51),DE	; unspill
	LD	DE,(IY+-48)
	LD	(IY+-48),DE
	LD	DE,(IY+-51)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-48)
	POP	IY
	ADD	HL,DE
	LD	(HL),BC
;  574			zx7_Decompress(pokemonSprites[pokemonIndex], PKMNSD6[party[pokemonIndex].id]);
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD6
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-134
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  575		}
L_244:
	LD	BC,36
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_242
;  576		
;  577	
;  578		if (party[pokemonIndex].id < 80) {
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	CP	A,80
	JR	NC,L_246
;  579			zx7_Decompress(largeSprite, PKMNSD0[party[0].id]);
	LD	A,(_party)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  580		}
;  581		else {
	JR	L_248
L_246:
;  582			zx7_Decompress(largeSprite, PKMNSD1[party[0].id - 80]);
	LD	A,(_party)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  583		}
L_248:
;  584	
;  585		menuState = 0;
	LD	BC,0
	LD	(IX+-6),BC
;  586		grabbingPokemon = false;
	LD	(IX+-7),0
;  587		
;  588		while (!(kb_Data[6] & kb_Clear)) {
	JR	L_288
L_289:
;  589			gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-17)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  590			for (pokemonIndex = 0; pokemonIndex < 36; pokemonIndex++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_253
L_251:
;  591				if (party[pokemonIndex].id != 0) {
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_252
;  592					gfx_TransparentSprite_NoClip(pokemonSprites[pokemonIndex], 121 + 32 * (pokemonIndex % 6), 18 + 32 * (pokemonIndex / 6) + 18 * ((pokemonIndex / 6) > 0));
	LD	BC,6
	LD	HL,(IX+-3)
	CALL	__idivs
	LD	DE,HL
	LD	HL,DE
	LD	A,L
	LD	B,5
	CALL	__bshl
	ADD	A,18
	OR	A,A
	OR	A,A
	SBC	HL,HL
	LD	BC,DE
	SBC	HL,BC
	LD	D,A
	JP	P,L__155
	LD	A,1
	JR	L__156
L__155:
	XOR	A,A
L__156:
	LD	B,A
	LD	C,18
	MLT	BC
	LD	A,D
	ADD	A,C
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,6
	LD	HL,(IX+-3)
	CALL	__irems
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+121
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-134
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  593				}
;  594			}
L_252:
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_253:
	LD	BC,36
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_251
;  595			if (grabbingPokemon) {
	LD	A,(IX+-7)
	OR	A,A
	JR	Z,L_255
;  596				gfx_TransparentSprite_NoClip(closedhand, 127 + 32 * (menuState % 6), 12 + 32 * (menuState / 6) + 18 * ((menuState / 6) > 0));
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	DE,HL
	LD	HL,DE
	LD	A,L
	LD	B,5
	CALL	__bshl
	ADD	A,12
	OR	A,A
	OR	A,A
	SBC	HL,HL
	SBC	HL,DE
	LD	D,A
	JP	P,L__160
	LD	A,1
	JR	L__161
L__160:
	XOR	A,A
L__161:
	LD	B,A
	LD	C,18
	MLT	BC
	LD	A,D
	ADD	A,C
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+127
	PUSH	BC
	LD	BC,_closedhand_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  597			}
;  598			else {
	JR	L_258
L_255:
;  599				gfx_TransparentSprite_NoClip(openhand, 127 + 32 * (menuState % 6), 2 + 32 * (menuState / 6) + 18 * ((menuState / 6) > 0));
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	DE,HL
	LD	HL,DE
	LD	A,L
	LD	B,5
	CALL	__bshl
	INC	A
	INC	A
	OR	A,A
	OR	A,A
	SBC	HL,HL
	LD	BC,DE
	SBC	HL,BC
	CALL	__setflag
	LD	D,A
	JP	P,L__163
	LD	A,1
	JR	L__164
L__163:
	XOR	A,A
L__164:
	LD	B,A
	LD	C,18
	MLT	BC
	LD	A,D
	ADD	A,C
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+127
	PUSH	BC
	LD	BC,_openhand_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  600			}
L_258:
;  601			if (party[menuState].id != 0) {
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-10),HL
	LD	IY,(IX+-10)
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_259
;  602				gfx_TransparentSprite_NoClip(largeSprite, 32, 114);
	LD	BC,114
	PUSH	BC
	LD	BC,32
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  603				
;  604				gfx_PrintStringXY(data_pokemon[party[menuState].id].name, 20, 186);
	LD	BC,186
	PUSH	BC
	LD	BC,20
	PUSH	BC
	LD	IY,(IX+-10)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  605				sprintf(str, "Level %u", party[menuState].level);
	LD	IY,(IX+-10)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__166
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  606				gfx_PrintStringXY(str, 20, 196);
	LD	BC,196
	PUSH	BC
	LD	BC,20
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintStringXY
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  607			}
L_259:
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
;  608	
;  609			
;  610	
;  611			gfx_SwapDraw();
	CALL	_gfx_SwapDraw
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
;  612	
;  613			Wait(20);
	LD	BC,20
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_Wait
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
;  614			kb_Scan();
	CALL	_kb_Scan
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
;  615			/* Wait until a key is pressed */
;  616			while (!((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear) || kb_Data[7])) { kb_Scan(); }
	JR	L_262
L_263:
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-182
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_kb_Scan
	PUSH	BC
	LD	BC,-182
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
L_262:
	LD	A,(16056338)
	AND	A,32
	LD	(IX+-14),A
	OR	A,A
	JR	NZ,L_269
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_269
	LD	A,(16056350)
	OR	A,A
	JR	Z,L_263
L_269:
;  617			if (kb_Data[1] & kb_2nd) {
	LD	A,(IX+-14)
	OR	A,A
	JR	Z,L_287
;  618				grabbingPokemon = !grabbingPokemon;
	LD	A,(IX+-7)
	OR	A,A
	JR	NZ,L_265
	LD	BC,1
	LD	(IX+-23),BC
	JR	L_266
L_265:
	LD	BC,0
	LD	(IX+-23),BC
L_266:
	LD	A,(IX+-23)
	LD	(IX+-7),A
;  619			}
L_287:
;  620			if (kb_Data[7]) {
	LD	A,(16056350)
	OR	A,A
	JR	Z,L_288
;  621				int oldState = menuState;
	LD	BC,(IX+-6)
	LD	(IX+-20),BC
;  622				if ((kb_Data[7] & kb_Up) && menuState / 6 > 0) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_274
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_274
;  623					menuState -= 6;
	LD	IY,(IX+-6)
	LEA	IY,IY+-6
	LD	(IX+-6),IY
;  624				}
L_274:
;  625				if ((kb_Data[7] & kb_Down) && menuState / 6 < 5) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_277
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	BC,5
	OR	A,A
	SBC	HL,BC
	JP	P,L_277
;  626					menuState += 6;
	LD	IY,(IX+-6)
	LEA	IY,IY+6
	LD	(IX+-6),IY
;  627				}
L_277:
;  628				if ((kb_Data[7] & kb_Left) && menuState % 6 > 0) {
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_280
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_280
;  629					menuState -= 1;
	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  630				}
L_280:
;  631				if ((kb_Data[7] & kb_Right) && menuState % 6 < 5) {
	LD	A,(16056350)
	AND	A,4
	JR	Z,L_282
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	LD	BC,5
	OR	A,A
	SBC	HL,BC
	JP	P,L_282
;  632					menuState += 1;
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  633				}
L_282:
;  634	
;  635				if (grabbingPokemon) {
	LD	A,(IX+-7)
	OR	A,A
	JR	Z,L_285
;  636					tempcharacter = party[menuState];
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-15),HL
	LD	BC,(IY+-15)
	POP	IY
	LD	HL,BC
	LD	DE,_party
	ADD	HL,DE
	LD	DE,_tempcharacter
	LD	BC,34
	LDIR	
;  637					party[menuState] = party[oldState];
	LD	HL,(IX+-20)
	LD	A,34
	CALL	__imul_b
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-12),HL
	LD	BC,(IY+-12)
	POP	IY
	LD	HL,BC
	LD	DE,_party
	ADD	HL,DE
	LD	DE,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-21),DE
	LD	BC,(IY+-15)
	POP	IY
	LD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-24),DE
	POP	IY
	LD	DE,_party
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-27),DE	; unspill
	LD	DE,(IY+-24)
	LD	DE,(IY+-27)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-18),HL
	LD	DE,(IY+-21)
	POP	IY
	LD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-18)
	POP	IY
	LD	BC,34
	LDIR	
;  638					party[oldState] = tempcharacter;
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-12)
	POP	IY
	LD	HL,BC
	LD	BC,_party
	ADD	HL,BC
	LD	DE,HL
	LD	HL,_tempcharacter
	LD	BC,34
	LDIR	
;  639					tempSprite = pokemonSprites[menuState];
	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-134
	ADD	HL,BC
	LD	BC,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-26),BC
;  640					pokemonSprites[menuState] = pokemonSprites[oldState];
	LD	HL,(IX+-20)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-30),BC
	POP	IY
	LD	BC,-134
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-33),BC	; unspill
	LD	BC,(IY+-30)
	LD	(IY+-30),BC
	LD	BC,(IY+-33)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-30)
	LD	(IY+-36),BC
	LD	(IY+-39),BC	; unspill
	LD	BC,(IY+-36)
	LD	(IY+-36),BC
	LD	BC,(IY+-39)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-36)
	POP	IY
	LD	IY,HL
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-42),BC
	POP	IY
	LD	BC,-134
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-45),BC	; unspill
	LD	BC,(IY+-42)
	LD	(IY+-42),BC
	LD	BC,(IY+-45)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-42)
	POP	IY
	ADD	HL,DE
	LD	DE,(IY)
	LD	(HL),DE
;  641					pokemonSprites[oldState] = tempSprite;
	LD	HL,IX
	LD	DE,-134
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IX+-26)
	LD	(HL),BC
;  642				}
L_285:
;  643	
;  644	
;  645				if (party[pokemonIndex].id < 80) {
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	CP	A,80
	JR	NC,L_284
;  646					zx7_Decompress(largeSprite, PKMNSD0[party[menuState].id]);
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  647				}
;  648				else {
	JR	L_288
L_284:
;  649					zx7_Decompress(largeSprite, PKMNSD1[party[menuState].id - 80]);
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  650				}
;  651			}
;  652		}
L_288:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_289
;  653	
;  654	
;  655		for (pokemonIndex = 0; pokemonIndex < 36; pokemonIndex++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_293
L_291:
;  656			free(pokemonSprites[pokemonIndex]);
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-134
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  657		}
L_293:
	LD	BC,36
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_291
;  658		free(largeSprite);
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_free
	POP	BC
;  659		free(backgroundSprite);
	LD	BC,(IX+-17)
	PUSH	BC
	CALL	_free
	POP	BC
;  660	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Box ***************************
;Name                         Addr/Register   Size   Type
;_free                               IMPORT  -----   function
;_tempcharacter                      STATIC     34   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_openhand_data                      IMPORT    362   variable
;_closedhand_data                    IMPORT    362   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_PKMNSD1                            IMPORT    216   variable
;_PKMNSD0                            IMPORT    240   variable
;_party                              IMPORT   1224   variable
;_PKMNSD6                            IMPORT    456   variable
;_PKMNSD5                            IMPORT    117   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;pokemonSprites                      IX-134    108   variable
;tempSprite                           IX-26      3   variable
;temp267                              IX-23      3   variable
;oldState                             IX-20      3   variable
;backgroundSprite                     IX-17      3   variable
;G_71                                 IX-14      1   variable
;largeSprite                          IX-13      3   variable
;G_67                                 IX-10      3   variable
;grabbingPokemon                       IX-7      1   variable
;menuState                             IX-6      3   variable
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 188 (bytes)
;       Spill Code: -34 (instruction)


	SEGMENT STRSECT
L__166:
	DB	"Level %u"
	DB	0
	SEGMENT CODE
;  661	void menu_ItemShop(gfx_sprite_t *shopSprite) {
_menu_ItemShop:
	LD	HL,-15
	CALL	__frameset
;  662		int menuState, cursorState, itemIndex;
;  663		gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  664		gfx_Blit(gfx_screen);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  665		while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
	JR	L_298
L_299:
	CALL	_kb_Scan
L_298:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_299
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_299
;  666	
;  667		menuState = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  668		cursorState = 0;
	LD	(IX+-6),BC
;  669		while (!(kb_Data[6] & kb_Clear)) {
	JR	L_334
L_335:
;  670			
;  671			gfx_SetColor(colors[0]);
	LD	A,(_colors)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  672			gfx_FillRectangle(100, 0, 220, 16);
	LD	BC,16
	PUSH	BC
	LD	BC,220
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,100
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  673			sprintf(str, "%u$", playerMoney);
	LD	A,(_playerMoney+3)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_playerMoney)
	PUSH	BC
	LD	BC,L__188
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  674			gfx_PrintStringXY(str, 100, 5);
	LD	BC,5
	PUSH	BC
	LD	BC,100
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  675	
;  676			gfx_ScaledTransparentSprite_NoClip(shopSprite, 26, 46, 2, 2);
	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,46
	PUSH	BC
	LD	BC,26
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_gfx_ScaledTransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  677			gfx_TransparentSprite_NoClip(mapcursorsmall, 47, 61 + 14 * cursorState);
	LD	B,(IX+-6)
	LD	C,14
	MLT	BC
	LD	A,C
	ADD	A,61
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,47
	PUSH	BC
	LD	BC,_mapcursorsmall_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  678	
;  679			for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < 20; itemIndex++) {
	LD	BC,(IX+-3)
	LD	(IX+-9),BC
	JR	L_305
L_303:
;  680				gfx_PrintStringXY(itemNames[itemIndex], 60, 63 + 14 * (itemIndex - menuState));
	LD	BC,(IX+-3)
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+63
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	HL,(IX+-9)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  681				sprintf(str, "%u", playerItems[itemIndex]);
	LD	HL,(IX+-9)
	LD	BC,_playerItems
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__189
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  682				gfx_PrintStringXY(str, 172, 63 + 14 * (itemIndex - menuState));
	LD	BC,(IX+-3)
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+63
	PUSH	BC
	LD	BC,172
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  683				sprintf(str, "%u$", itemPrices[itemIndex]);
	LD	HL,(IX+-9)
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__190
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  684				gfx_PrintStringXY(str, 204, 63 + 14 * (itemIndex - menuState));
	LD	BC,(IX+-3)
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+63
	PUSH	BC
	LD	BC,204
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  685			}
L_305:
	LD	IY,(IX+-3)
	LEA	BC,IY+10
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	JP	P,L_306
	LD	BC,20
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_303
L_306:
;  686	
;  687			gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  688	
;  689			kb_Scan();
	CALL	_kb_Scan
;  690			while (!((kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
	JR	L_310
L_311:
;  691				kb_Scan();
	CALL	_kb_Scan
;  692			}
L_310:
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_319
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_319
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_319
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_311
L_319:
;  693	
;  694			if (kb_Data[7] & kb_Up) {
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_327
;  695				if (menuState > 0 && cursorState <= 2) {
	LD	BC,(IX+-3)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_317
	LD	BC,(IX+-6)
	LD	HL,2
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_317
;  696					menuState--;
	LD	BC,(IX+-3)
	DEC	BC
	LD	(IX+-3),BC
;  697				}
;  698				else if (menuState + cursorState > 0) {
	JR	L_327
L_317:
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_327
;  699					cursorState--;
	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  700				}
;  701			}
L_327:
;  702			if (kb_Data[7] & kb_Down) {
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_333
;  703				if (menuState + 10 < 20 && cursorState >= 3) {
	LD	IY,(IX+-3)
	LEA	HL,IY+10
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	P,L_325
	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_325
;  704					menuState++;
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  705				}
;  706				else if (menuState + cursorState < 19) {
	JR	L_333
L_325:
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	ADD	HL,BC
	OR	A,A
	LD	BC,19
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_333
;  707					cursorState++;
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  708				}
;  709			}
L_333:
;  710			if (kb_Data[1] & kb_2nd) {
	LD	A,(16056338)
	AND	A,32
	JR	Z,L_332
;  711				if (playerMoney >= itemPrices[menuState + cursorState]) {
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(IX+-12),HL
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	A,(_playerMoney+3)
	LD	E,A
	LD	BC,HL
	XOR	A,A
	LD	HL,(_playerMoney)
	CALL	__lcmpu
	JR	C,L_330
;  712					playerItems[menuState + cursorState]++;
	LD	BC,(IX+-12)
	LD	HL,_playerItems
	ADD	HL,BC
	LD	(IX+-15),HL
	LD	A,(HL)
	INC	A
	LD	HL,(IX+-15)
	LD	(HL),A
;  713					playerMoney -= itemPrices[menuState + cursorState];
	LD	HL,(IX+-12)
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	A,(_playerMoney+3)
	LD	E,A
	LD	BC,HL
	XOR	A,A
	LD	HL,(_playerMoney)
	CALL	__lsub
	LD	(_playerMoney),HL
	LD	A,E
	LD	(_playerMoney+3),A
;  714				}
L_330:
;  715				Wait(10);
	LD	BC,10
	PUSH	BC
	CALL	_Wait
	POP	BC
;  716			}
;  717			else {
	JR	L_334
L_332:
;  718				Wait(15);
	LD	BC,15
	PUSH	BC
	CALL	_Wait
	POP	BC
;  719			}
;  720			
;  721		}
L_334:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_335
	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_ItemShop ***************************
;Name                         Addr/Register   Size   Type
;_Wait                               IMPORT  -----   function
;_itemPrices                         IMPORT     40   variable
;_playerItems                        IMPORT    185   variable
;_itemNames                          IMPORT    320   variable
;_mapcursorsmall_data                IMPORT     72   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledTransparentSprite_NoClip      IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_str                                IMPORT    100   variable
;_playerMoney                        IMPORT      4   variable
;_sprintf                            IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetColor                       IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_gfx_Blit                           IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;G_72                                 IX-12      3   variable
;itemIndex                             IX-9      3   variable
;cursorState                           IX-6      3   variable
;menuState                             IX-3      3   variable
;shopSprite                            IX+6      3   parameter


; Stack Frame Size: 24 (bytes)
;       Spill Code: -34 (instruction)


	SEGMENT STRSECT
L__188:
	DB	"%u$"
	DB	0
L__189:
	DB	"%u"
	DB	0
L__190:
	DB	"%u$"
	DB	0
	XREF _PKMNSD6:ROM
	XREF _PKMNSD5:ROM
	XREF _PKMNSD1:ROM
	XREF _PKMNSD0:ROM
	XREF _itemPrices:ROM
	XREF _itemDescriptions:ROM
	XREF _itemNames:ROM
	XREF _items_UseItem:ROM
	XREF _mapcursorsmall_data:ROM
	XREF _stats_CalculateStats:ROM
	XREF _save_Save:ROM
	XREF _playerItems:ROM
	XREF _playerMoney:ROM
	XREF _party:ROM
	XREF _textBoxType:ROM
	XREF _text_DrawTextBox:ROM
	XREF _categoryIcons:ROM
	XREF _statusIcons:ROM
	XREF _colors:ROM
	XREF _str:ROM
	XREF _FreeIcons:ROM
	XREF _MallocIcons:ROM
	XREF _SetColors:ROM
	XREF _Wait:ROM
	XREF _typeIcons:ROM
	XREF _xpPerLevel:ROM
	XREF _data_moveDescriptions:ROM
	XREF _data_moves:ROM
	XREF _data_pokemon:ROM
	XREF _closedhand_data:ROM
	XREF _openhand_data:ROM
	XREF _menucursorsmall_data:ROM
	XREF _menucursor_data:ROM
	XREF _zx7_Decompress:ROM
	XREF _gfx_ScaledTransparentSprite_NoClip:ROM
	XREF _gfx_ScaledSprite_NoClip:ROM
	XREF _gfx_TransparentSprite_NoClip:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_FillScreen:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_AllocSprite:ROM
	XREF _kb_Scan:ROM
	XREF _strncpy:ROM
	XREF _sprintf:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF __lcmpu:ROM
	XREF __lsub:ROM
	XREF __idivs:ROM
	XREF __imulu:ROM
	XREF __bshl:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __frameset:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _menu_ItemShop
	XDEF _menu_Box
	XDEF _menu_Items
	XDEF _menu_PokemonDetails
	XDEF _menu_PokemonMenu
	XDEF _menu_Menu
	XDEF _menu_Setup
	XDEF _menuCurrent
	XDEF _menuState2
	XDEF _menuState1
	XDEF _tempcharacter
	XDEF _pokemonToSwitch
	XDEF _switchMode
	END
