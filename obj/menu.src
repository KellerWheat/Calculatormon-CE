; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MENU.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME1"
.TYPE 104
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME7"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "NONAME8",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME9"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME10"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME10",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME10"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
.BEGREC "NONAME11",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME11"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME15"
.BEGREC "pokemonData",34
.DEFINE "id"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "moves"
.VALUE 1
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "pp"
.VALUE 5
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "level"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xp"
.VALUE 10
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "currenthealth"
.VALUE 13
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "currentstatus"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthIV"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "attackIV"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "defenceIV"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialattackIV"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialdefenceIV"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "speedIV"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthEV"
.VALUE 22
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attackEV"
.VALUE 24
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defenceEV"
.VALUE 26
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattackEV"
.VALUE 28
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefenceEV"
.VALUE 30
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speedEV"
.VALUE 32
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonData"
.BEGREC "pokemonType",51
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 16
.TYPE 98
.ENDEF
.DEFINE "element1"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "element2"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basehealth"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "baseattack"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basedefence"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialattack"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialdefence"
.VALUE 22
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespeed"
.VALUE 23
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "movelevels"
.VALUE 24
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "moveids"
.VALUE 34
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "evolvelevel"
.VALUE 44
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolveid"
.VALUE 45
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolvesfrom"
.VALUE 46
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xpdrop"
.VALUE 47
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "xptype"
.VALUE 49
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "catchrate"
.VALUE 50
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "pokemonType"
.BEGREC "pokemonStats",12
.DEFINE "health"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attack"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defence"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattack"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefence"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speed"
.VALUE 10
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonStats"
.BEGREC "move",21
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 14
.TYPE 98
.ENDEF
.DEFINE "element"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "power"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "accuracy"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "uses"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statustype"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statuschance"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "move"
.BEGREC "zoneData",640
.DEFINE "spawnids"
.VALUE 0
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnminlevels"
.VALUE 80
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnmaxlevels"
.VALUE 160
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "exitzone"
.VALUE 240
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exitx"
.VALUE 256
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exity"
.VALUE 272
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorzones"
.VALUE 288
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorx"
.VALUE 304
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doory"
.VALUE 320
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doornpc1"
.VALUE 336
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doornpc2"
.VALUE 352
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerspawnids"
.VALUE 368
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerspawnlevels"
.VALUE 464
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerx"
.VALUE 560
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainery"
.VALUE 576
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerdir"
.VALUE 592
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "data_trainerText"
.VALUE 608
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerreward"
.VALUE 624
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.ENDREC "zoneData"
	SEGMENT BSS
_switchMode:
	DS	1
.DEFINE "switchMode"
.ALIAS "_switchMode"
.CLASS 83
.VALUE _switchMode
.TYPE 12
.ENDEF
_pokemonToSwitch:
	DS	1
.DEFINE "pokemonToSwitch"
.ALIAS "_pokemonToSwitch"
.CLASS 83
.VALUE _pokemonToSwitch
.TYPE 12
.ENDEF
_tempcharacter:
	DS	34
.DEFINE "tempcharacter"
.ALIAS "_tempcharacter"
.CLASS 83
.VALUE _tempcharacter
.TAG "pokemonData"
.TYPE 8
.ENDEF
	SEGMENT DATA
_menuState1:
	DB	0
.DEFINE "menuState1"
.ALIAS "_menuState1"
.CLASS 69
.VALUE _menuState1
.TYPE 12
.ENDEF
_menuState2:
	DB	0
.DEFINE "menuState2"
.ALIAS "_menuState2"
.CLASS 69
.VALUE _menuState2
.TYPE 12
.ENDEF
_menuCurrent:
	DB	1
.DEFINE "menuCurrent"
.ALIAS "_menuCurrent"
.CLASS 69
.VALUE _menuCurrent
.TYPE 12
.ENDEF
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	#include <math.h>
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	#include <keypadc.h>
;   10	#include <graphx.h>
;   11	#include <compression.h>
;   12	
;   13	#include "map.h"
;   14	#include "battle.h"
;   15	#include "menu.h"
;   16	#include "misc.h"
;   17	#include "data.h"
;   18	#include "text.h"
;   19	#include "savegame.h"
;   20	#include "stats.h"
;   21	#include "gfx/battle_gfx.h"
;   22	#include "items.h"
;   23	#include "gfx/PKMNSD0.h"
;   24	#include "gfx/PKMNSD1.h"
;   25	#include "gfx/PKMNSD2.h"
;   26	#include "gfx/PKMNSD3.h"
;   27	#include "gfx/PKMNSD5.h"
;   28	
;   29	void MoveMenuCursor(int max);
;   30	
;   31	void ItemMenu(void);
;   32	void FastTravelMenu(void);
;   33	
;   34	
;   35	/* Press enter to toggle; allows player to switch pokemon around */
;   36	bool switchMode;
;   37	uint8_t pokemonToSwitch;
;   38	struct pokemonData tempcharacter;
;   39	
;   40	
;   41	
;   42	uint8_t menuState1 = 0;
;   43	uint8_t menuState2 = 0;
;   44	uint8_t menuCurrent = 1;
	SEGMENT CODE
;   45	
;   46	void menu_Setup(void) {
_menu_Setup:
.DEFINE "_menu_Setup"

.VALUE _menu_Setup

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "menu_Setup",46,"_menu_Setup"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   47	
;   48		zx7_Decompress(textBoxSprite1, menutextbox1_compressed);
.LINE 48

	LD	BC,(_PKMNSD5)
	PUSH	BC
	LD	BC,(_textBoxSprite1)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;   49		zx7_Decompress(textBoxSprite2, menutextbox2_compressed);
.LINE 49

	LD	HL,_PKMNSD5+3
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(_textBoxSprite2)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;   50	
;   51		gfx_SetPalette(battle_gfx_pal, sizeof_battle_gfx_pal, 0);
.LINE 51

	LD	BC,0
	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	HL,_PKMNSD5+111
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   52		SetColors(1);
.LINE 52

	LD	BC,1
	PUSH	BC
	CALL	_SetColors
	POP	BC
;   53		gfx_SetTextFGColor(255);
.LINE 53

	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   54	
;   55	
;   56	}
.LINE 56

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Setup ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_gfx_SetPalette                     IMPORT  -----   function
;_textBoxSprite2                     IMPORT      3   variable
;_textBoxSprite1                     IMPORT      3   variable
;_PKMNSD5                            IMPORT    114   variable
;_zx7_Decompress                     IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "menu_Setup",56,"_menu_Setup"
;   57	
;   58	uint8_t menu_Menu(void) {
_menu_Menu:
.DEFINE "_menu_Menu"

.VALUE _menu_Menu

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "menu_Menu",58,"_menu_Menu"

.LINE 58

.DEFINE "cursorState"

.CLASS 65

.VALUE -1

.TYPE 2

.ENDEF

.DEFINE "chosenPokemon"

.CLASS 65

.VALUE -4

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	DEC	SP
;   59		int8_t cursorState = 0;
.LINE 59

	LD	(IX+-1),0
;   60		
;   61	
;   62		gfx_PrintStringXY("Pokemon", 215, 35);
.LINE 62

	LD	BC,35
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   63		gfx_PrintStringXY("Bag", 215, 50);
.LINE 63

	LD	BC,50
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__2
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   64		gfx_PrintStringXY("Close Menu", 215, 65);
.LINE 64

	LD	BC,65
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__3
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   65		gfx_PrintStringXY("Save", 215, 80);
.LINE 65

	LD	BC,80
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__4
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   66		gfx_PrintStringXY("Exit Game", 215, 95);
.LINE 66

	LD	BC,95
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__5
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   67		gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
.LINE 67

	LD	BC,35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__6
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   68	
;   69		gfx_SwapDraw();
.LINE 69

	CALL	_gfx_SwapDraw
;   70		gfx_SetDrawScreen();
.LINE 70

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   71	
;   72		while (!(kb_Data[6] & kb_Clear)) {
.LINE 72

	JR	L_22
L_23:
;   73			kb_Scan();
.LINE 73

	CALL	_kb_Scan
;   74			if ((kb_Data[7] & kb_Down)) {
.LINE 74

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_7
;   75				cursorState += 1;
.LINE 75

	INC	(IX+-1)
;   76				if (cursorState == 5) {
.LINE 76

	LD	A,(IX+-1)
	CP	A,5
	JR	NZ,L_2
;   77					cursorState = 0;
.LINE 77

	LD	(IX+-1),0
;   78				}
L_2:
.LINE 78

;   79				gfx_FillRectangle(205, 35, 10, 70);
.LINE 79

	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,205
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   80				gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
.LINE 80

	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	A,15
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   81				Wait(20);
.LINE 81

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;   82			}
L_7:
.LINE 82

;   83			if ((kb_Data[7] & kb_Up)) {
.LINE 83

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_21
;   84				cursorState -= 1;
.LINE 84

	DEC	(IX+-1)
;   85				if (cursorState == -1) {
.LINE 85

	LD	A,(IX+-1)
	CP	A,-1
	JR	NZ,L_5
;   86					cursorState = 4;
.LINE 86

	LD	(IX+-1),4
;   87				}
L_5:
.LINE 87

;   88				gfx_FillRectangle(205, 35, 10, 70);
.LINE 88

	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,205
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   89				gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
.LINE 89

	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	A,15
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__12
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   90				Wait(20);
.LINE 90

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;   91			}
L_21:
.LINE 91

;   92			if (kb_Data[1] & kb_2nd) {
.LINE 92

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_22
;   93				gfx_SetDrawBuffer();
.LINE 93

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   94				if (cursorState == 0) {
.LINE 94

	LD	A,(IX+-1)
	OR	A,A
	JR	NZ,L_13
;   95					int chosenPokemon;
;   96					choosePokemon:
.LINE 96

L_8:
;   97					chosenPokemon = menu_PokemonMenu(true);
.LINE 97

	LD	BC,1
	PUSH	BC
	CALL	_menu_PokemonMenu
	POP	BC
	LD	(IX+-4),HL
;   98					if (chosenPokemon != 0) {
.LINE 98

	CALL	__icmpzero
	JR	Z,L_10
;   99						menu_PokemonDetails(chosenPokemon - 1);
.LINE 99

	LD	BC,(IX+-4)
	DEC	BC
	PUSH	BC
	CALL	_menu_PokemonDetails
	POP	BC
;  100						goto choosePokemon;
.LINE 100

	JR	L_8
;  101					}
L_10:
.LINE 101

;  102					return 0;
.LINE 102

	XOR	A,A
	JR	L_25
;  103				}
L_13:
.LINE 103

;  104				if (cursorState == 1) {
.LINE 104

	LD	A,(IX+-1)
	CP	A,1
	JR	NZ,L_15
;  105					menu_Items(false);
.LINE 105

	LD	BC,0
	PUSH	BC
	CALL	_menu_Items
	POP	BC
;  106					return 0;
.LINE 106

	XOR	A,A
	JR	L_25
;  107				}
L_15:
.LINE 107

;  108				if (cursorState == 2) {
.LINE 108

	LD	A,(IX+-1)
	CP	A,2
	JR	NZ,L_19
;  109					return 0;
.LINE 109

	XOR	A,A
	JR	L_25
;  110				}
L_19:
.LINE 110

;  111				if (cursorState == 3) {
.LINE 111

	LD	A,(IX+-1)
	CP	A,3
	JR	NZ,L_18
;  112					save_Save();
.LINE 112

	CALL	_save_Save
;  113					return 0;
.LINE 113

	XOR	A,A
	JR	L_25
;  114				}
;  115				else if (cursorState == 4) {
L_18:
.LINE 115

	LD	A,(IX+-1)
	CP	A,4
	JR	NZ,L_22
;  116					return 2;
.LINE 116

	LD	A,2
	JR	L_25
;  117				}
;  118			}
;  119		}
L_22:
.LINE 119

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_23
;  120		gfx_SetDrawBuffer();
.LINE 120

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  121		return 0;
.LINE 121

	XOR	A,A
;  122	}
L_25:
.LINE 122

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Menu ***************************
;Name                         Addr/Register   Size   Type
;_save_Save                          IMPORT  -----   function
;_menu_Items                         IMPORT  -----   function
;_menu_PokemonDetails                IMPORT  -----   function
;_menu_PokemonMenu                   IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;chosenPokemon                         IX-4      3   variable
;cursorState                           IX-1      1   variable


; Stack Frame Size: 10 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "menu_Menu",122,"_menu_Menu"
	SEGMENT STRSECT
L__1:
	DB	"Pokemon"
	DB	0
L__2:
	DB	"Bag"
	DB	0
L__3:
	DB	"Close Menu"
	DB	0
L__4:
	DB	"Save"
	DB	0
L__5:
	DB	"Exit Game"
	DB	0
L__6:
	DB	">"
	DB	0
L__9:
	DB	">"
	DB	0
L__12:
	DB	">"
	DB	0
	SEGMENT CODE
;  123	
;  124	int menu_PokemonMenu(bool pressEnter) {
_menu_PokemonMenu:
.DEFINE "_menu_PokemonMenu"

.VALUE _menu_PokemonMenu

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "menu_PokemonMenu",124,"_menu_PokemonMenu"

.LINE 124

.DEFINE "pressEnter"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "partyIndex"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "healthRatio"

.CLASS 65

.VALUE -16

.TYPE 4

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -19

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "pokemonSprite"

.CLASS 65

.VALUE -22

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "baseX"

.CLASS 65

.VALUE -43

.DIM 6

.TYPE 100

.ENDEF

.DEFINE "baseY"

.CLASS 65

.VALUE -61

.DIM 6

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-97
	LD	SP,HL
;  125		int partyIndex, statusIndex, menuState;
;  126		gfx_sprite_t *backgroundSprite;
;  127		gfx_sprite_t *pokemonSprite;
;  128		int baseX[6] = { 20,175,20,175,20,175 };
.LINE 128

	LEA	DE,IX+-43
	LD	HL,_0temp26
	LD	BC,18
	LDIR	
;  129		int baseY[6] = { 20,20,70,70,120,120 };
.LINE 129

	LEA	DE,IX+-61
	LD	HL,_1temp27
	LD	BC,18
	LDIR	
;  130	
;  131	
;  132		menuState = 0;
.LINE 132

	LD	BC,0
	LD	(IX+-3),BC
;  133		backgroundSprite = gfx_MallocSprite(160, 88);
.LINE 133

	LD	BC,_malloc
	PUSH	BC
	LD	BC,88
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-19),HL
;  134		pokemonSprite = gfx_MallocSprite(133, 36);
.LINE 134

	LD	BC,_malloc
	PUSH	BC
	LD	BC,36
	PUSH	BC
	LD	BC,133
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-22),HL
;  135		zx7_Decompress(backgroundSprite, pokemonlist_compressed);
.LINE 135

	LD	HL,_PKMNSD5+90
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  136		zx7_Decompress(pokemonSprite, menupokemon_compressed);
.LINE 136

	LD	HL,_PKMNSD5+93
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  137		MallocIcons();
.LINE 137

	CALL	_MallocIcons
;  138	
;  139	
;  140		menu_Setup();
.LINE 140

	CALL	_menu_Setup
;  141	
;  142		redraw_PokemonMenu:
.LINE 142

L_28:
;  143		gfx_SetDrawBuffer();
.LINE 143

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  144	
;  145		gfx_FillScreen(colors[1]);
.LINE 145

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  146		text_DrawTextBox();
.LINE 146

	CALL	_text_DrawTextBox
;  147		gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 147

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  148		for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 148

	LD	BC,0
	LD	(IX+-6),BC
	JR	L_40
L_38:
;  149			int healthRatio;
;  150			if (party[partyIndex].id != 0) {
.LINE 150

	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-12),HL
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-9),HL
	LD	IY,(IX+-9)
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_39
;  151				gfx_TransparentSprite_NoClip(pokemonSprite, baseX[partyIndex], baseY[partyIndex]);
.LINE 151

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  152				gfx_PrintStringXY(data_pokemon[party[partyIndex].id].name, baseX[partyIndex] + 4, baseY[partyIndex] + 4);
.LINE 152

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+4
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+4
	PUSH	BC
	LD	IY,(IX+-9)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  153				sprintf(str, "Lv%u", party[partyIndex].level);
.LINE 153

	LD	IY,(IX+-9)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__23
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  154				gfx_PrintStringXY(str, baseX[partyIndex] + 92, baseY[partyIndex] + 4);
.LINE 154

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+4
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+92
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  155	
;  156				if (party[partyIndex].currentstatus > 0) {
.LINE 156

	LD	BC,(IX+-9)
	LD	(IX+-25),BC
	LD	IY,(IX+-9)
	XOR	A,A
	CP	A,(IY+15)
	JR	NC,L_31
;  157					gfx_TransparentSprite_NoClip(statusIcons[party[partyIndex].currentstatus - 1], baseX[partyIndex] + 7, baseY[partyIndex] + 14);
.LINE 157

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,(IX+-9)
	LD	(IX+-25),BC
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+14
	LD	C,L
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+7
	PUSH	BC
	LD	IY,(IX+-9)
	LD	A,(IY+15)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_statusIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  158				}
L_31:
.LINE 158

;  159				healthRatio = (party[partyIndex].currenthealth * 78) / stats_CalculateStats(party[partyIndex]).health;
.LINE 159

	LD	BC,(IX+-12)
	LD	HL,_party
	ADD	HL,BC
	LD	(IX+-64),HL
	LD	IY,(IX+-64)
	LD	BC,(IY+13)
	CALL	__stoiu
	LD	A,78
	CALL	__imul_b
	LD	(IX+-97),HL
	LD	HL,(IX+-64)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-76
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	HL,(IX+-97)
	CALL	__idivs
	LD	(IX+-16),HL
;  160				if (healthRatio > 34) {
.LINE 160

	LD	BC,HL
	LD	HL,34
	OR	A,A
	SBC	HL,BC
	JP	P,L_35
;  161					gfx_SetColor(colors[8]);
.LINE 161

	LD	HL,_colors+8
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  162				}
;  163				else if (healthRatio > 14) {
.LINE 163

	JR	L_36
L_35:
	LD	BC,(IX+-16)
	LD	HL,14
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_33
;  164					gfx_SetColor(colors[9]);
.LINE 164

	LD	HL,_colors+9
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  165				}
;  166				else {
.LINE 166

	JR	L_36
L_33:
;  167					gfx_SetColor(colors[10]);
.LINE 167

	LD	HL,_colors+10
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  168				}
L_36:
.LINE 168

;  169				gfx_FillRectangle(baseX[partyIndex] + 47, baseY[partyIndex] + 16, healthRatio, 4);
.LINE 169

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,4
	PUSH	DE
	LD	DE,(IX+-16)
	PUSH	DE
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+16
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+47
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  170	
;  171				sprintf(str, "%u/%u", party[partyIndex].currenthealth, stats_CalculateStats(party[partyIndex]).health);
.LINE 171

	LD	HL,(IX+-9)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-88
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	IY,(IX+-25)
	LD	BC,(IY+13)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__27
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  172				gfx_PrintStringXY(str, baseX[partyIndex] + 32, baseY[partyIndex] + 24);
.LINE 172

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-61
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+24
	PUSH	DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+32
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  173			}
;  174		}
L_39:
.LINE 174

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
L_40:
	LD	BC,6
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_38
;  175		gfx_PrintStringXY("Select a pokemon", 30, 190);
.LINE 175

	LD	BC,190
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__29
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  176		if (pressEnter) {
.LINE 176

	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_43
;  177			gfx_PrintStringXY("Press Enter to move pokemon", 30, 205);
.LINE 177

	LD	BC,205
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__31
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  178		}
L_43:
.LINE 178

;  179	
;  180		gfx_SetDrawScreen();
.LINE 180

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  181	
;  182		gfx_Blit(gfx_buffer);
.LINE 182

	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  183		gfx_TransparentSprite_NoClip(menucursor, baseX[menuState] - 15, baseY[menuState] + 8);
.LINE 183

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+8
	LD	C,L
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+-15
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  184	
;  185		
;  186	
;  187	
;  188		Wait(20);
.LINE 188

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  189		kb_Scan();
.LINE 189

	CALL	_kb_Scan
;  190	
;  191		while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
.LINE 191

	JR	L_45
L_46:
	CALL	_kb_Scan
L_45:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_46
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_46
;  192		while (!(((kb_Data[1] & kb_2nd) && party[menuState].id != 0) || (kb_Data[6] & kb_Clear))) {
.LINE 192

	JR	L_74
L_75:
;  193			kb_Scan();
.LINE 193

	CALL	_kb_Scan
;  194			if ((kb_Data[6] & kb_Enter) && pressEnter) {
.LINE 194

	LD	A,(16056348)
	AND	A,1
	JR	Z,L_68
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_68
;  195				tempcharacter = party[menuState];
.LINE 195

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	DE,_tempcharacter
	LD	BC,34
	LDIR	
;  196				for (partyIndex = menuState; partyIndex > 0; partyIndex--) {
.LINE 196

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	JR	L_53
L_51:
;  197					party[partyIndex] = party[partyIndex - 1];
.LINE 197

	LD	HL,(IX+-6)
	LD	(IX+-94),HL	; spill
	DEC	HL
	LD	(IX+-94),HL	; spill
	LD	HL,34
	LD	(IX+-91),HL	; spill
	LD	HL,(IX+-94)	; unspill
	LD	BC,HL
	LD	HL,(IX+-91)	; unspill
	CALL	__imulu
	LD	BC,_party
	ADD	HL,BC
	LD	BC,HL
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	DE,_party
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,34
	LDIR	
	LD	HL,(IX+-94)	; unspill
	LD	(IX+-6),HL
;  198				}
L_53:
.LINE 198

	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	M,L_51
;  199				party[0] = tempcharacter;
.LINE 199

	LD	DE,_party
	LD	HL,_tempcharacter
	LD	BC,34
	LDIR	
;  200				goto redraw_PokemonMenu;
.LINE 200

	JR	L_28
;  201			}
L_68:
.LINE 201

;  202			if (kb_Data[7] & kb_Down) {
.LINE 202

	LD	A,(16056350)
	AND	A,1
	LD	(IX+-13),A
	OR	A,A
	JR	Z,L_67
;  203				menuState+=2;
.LINE 203

	LD	IY,(IX+-3)
	LEA	IY,IY+2
	LD	(IX+-3),IY
;  204				if (menuState == 6 || menuState == 7) {
.LINE 204

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_57
	LD	BC,7
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_73
L_57:
;  205					menuState -= 6;
.LINE 205

	LD	IY,(IX+-3)
	LEA	IY,IY+-6
	LD	(IX+-3),IY
;  206				}
;  207			}
;  208			else if (kb_Data[7] & kb_Up) {
.LINE 208

	JR	L_73
L_67:
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_65
;  209				menuState-=2;
.LINE 209

	LD	IY,(IX+-3)
	LEA	IY,IY+-2
	LD	(IX+-3),IY
;  210				if (menuState == -1 || menuState == -2) {
.LINE 210

	LD	BC,16777215
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_59
	LD	BC,16777214
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_73
L_59:
;  211					menuState += 6;
.LINE 211

	LD	IY,(IX+-3)
	LEA	IY,IY+6
	LD	(IX+-3),IY
;  212				}
;  213			}
;  214			else if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) {
.LINE 214

	JR	L_73
L_65:
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_63
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_73
L_63:
;  215				if (menuState % 2 == 0) {
.LINE 215

	LD	BC,2
	LD	HL,(IX+-3)
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_62
;  216					menuState += 1;
.LINE 216

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  217				}
;  218				else {
.LINE 218

	JR	L_73
L_62:
;  219					menuState -= 1;
.LINE 219

	LD	BC,(IX+-3)
	DEC	BC
	LD	(IX+-3),BC
;  220				}
;  221			}
L_73:
.LINE 221

;  222			if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[7] & kb_Down) || (kb_Data[7] & kb_Up)) {
.LINE 222

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_72
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_72
	LD	A,(IX+-13)
	OR	A,A
	JR	NZ,L_72
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_74
L_72:
;  223				gfx_Blit(gfx_buffer);
.LINE 223

	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  224				gfx_TransparentSprite_NoClip(menucursor, baseX[menuState] - 15, baseY[menuState] + 8);
.LINE 224

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-61
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+8
	LD	C,L
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-43
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+-15
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  225				Wait(20);
.LINE 225

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  226			}
;  227		}
L_74:
.LINE 227

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_48
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_party
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	OR	A,A
	JR	NZ,L_77
L_48:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_75
L_77:
;  228		free(backgroundSprite);
.LINE 228

	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_free
	POP	BC
;  229		free(pokemonSprite);
.LINE 229

	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_free
	POP	BC
;  230		FreeIcons();
.LINE 230

	CALL	_FreeIcons
;  231		gfx_SetDrawBuffer();
.LINE 231

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  232		if (kb_Data[6] & kb_Clear) {
.LINE 232

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_79
;  233			return 0;
.LINE 233

	OR	A,A
	SBC	HL,HL
	JR	L_80
;  234		}
L_79:
.LINE 234

;  235		return menuState + 1;
.LINE 235

	LD	HL,(IX+-3)
	INC	HL
;  236	}
L_80:
.LINE 236

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_PokemonMenu ***************************
;Name                         Addr/Register   Size   Type
;_FreeIcons                          IMPORT  -----   function
;_free                               IMPORT  -----   function
;_tempcharacter                      STATIC     34   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menucursor_data                    IMPORT    262   variable
;_gfx_Blit                           IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_stats_CalculateStats               IMPORT  -----   function
;_statusIcons                        IMPORT     15   variable
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_party                              IMPORT   1224   variable
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_text_DrawTextBox                   IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_FillScreen                     IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_MallocIcons                        IMPORT  -----   function
;_PKMNSD5                            IMPORT    114   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_1temp27                            STATIC     18   variable
;_0temp26                            STATIC     18   variable
;baseY                                IX-61     18   variable
;baseX                                IX-43     18   variable
;G_10                                 IX-25      3   variable
;pokemonSprite                        IX-22      3   variable
;backgroundSprite                     IX-19      3   variable
;healthRatio                          IX-16      3   variable
;G_11                                 IX-13      1   variable
;G_8                                  IX-12      3   variable
;G_9                                   IX-9      3   variable
;partyIndex                            IX-6      3   variable
;menuState                             IX-3      3   variable
;pressEnter                            IX+6      1   parameter


; Stack Frame Size: 106 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "menu_PokemonMenu",236,"_menu_PokemonMenu"
	SEGMENT STRSECT
L__23:
	DB	"Lv%u"
	DB	0
L__27:
	DB	"%u/%u"
	DB	0
L__29:
	DB	"Select a pokemon"
	DB	0
L__31:
	DB	"Press Enter to move pokemon"
	DB	0
	SEGMENT TEXT
_0temp26:
	DW	20
	DB	0
	DW	175
	DB	0
	DW	20
	DB	0
	DW	175
	DB	0
	DW	20
	DB	0
	DW	175
	DB	0
_1temp27:
	DW	20
	DB	0
	DW	20
	DB	0
	DW	70
	DB	0
	DW	70
	DB	0
	DW	120
	DB	0
	DW	120
	DB	0
	SEGMENT CODE
;  237	void menu_PokemonDetails(int pokemonIndex) {
_menu_PokemonDetails:
.DEFINE "_menu_PokemonDetails"

.VALUE _menu_PokemonDetails

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "menu_PokemonDetails",237,"_menu_PokemonDetails"

.LINE 237

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE 6

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

.DEFINE "page"

.CLASS 65

.VALUE -27

.TYPE 4

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -39

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "pokemonSprite"

.CLASS 65

.VALUE -45

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "tempMove"

.CLASS 65

.VALUE -63

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-159
	ADD	HL,SP
	LD	SP,HL
;  238		int page, menuState, tempMove, moveIndex;
;  239		gfx_sprite_t *backgroundSprite;
;  240	
;  241		backgroundSprite = gfx_MallocSprite(160, 88);
.LINE 241

	LD	BC,_malloc
	PUSH	BC
	LD	BC,88
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-39),HL
;  242		
;  243	
;  244		menu_Setup();
.LINE 244

	CALL	_menu_Setup
;  245	
;  246		page = 1;
.LINE 246

	LD	BC,1
	LD	(IX+-27),BC
;  247		menuState = 0;
.LINE 247

	LD	BC,0
	LD	(IX+-9),BC
;  248		while (page != 0) {
.LINE 248

	JR	L_133
L_134:
;  249			Wait(20);
.LINE 249

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  250			kb_Scan();
.LINE 250

	CALL	_kb_Scan
;  251			if (page == 1) {
.LINE 251

	LD	BC,1
	LD	HL,(IX+-27)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_111
;  252				gfx_sprite_t *pokemonSprite;
;  253				zx7_Decompress(backgroundSprite, infoscreen1_compressed);
.LINE 253

	LD	HL,_PKMNSD5+99
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-39)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  254				gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 254

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-39)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  255	
;  256	
;  257				gfx_SetTextScale(2, 2);
.LINE 257

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  258	
;  259	
;  260				
;  261				gfx_PrintStringXY(data_pokemon[party[pokemonIndex].id].name, 4, 32);
.LINE 261

	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-30),HL
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	BC,32
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  262				pokemonSprite = gfx_MallocSprite(56, 56);
.LINE 262

	LD	BC,_malloc
	PUSH	BC
	LD	BC,56
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-45),HL
;  263				if (pokemonIndex < 80) {
.LINE 263

	LD	BC,80
	LD	HL,(IX+6)
	OR	A,A
	SBC	HL,BC
	JP	P,L_82
;  264					zx7_Decompress(pokemonSprite, PKMNSD0[party[pokemonIndex].id]);
.LINE 264

	LD	BC,(IX+-3)
	LD	(IX+-54),BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  265				}
;  266				else {
.LINE 266

	JR	L_83
L_82:
;  267					zx7_Decompress(pokemonSprite, PKMNSD1[party[pokemonIndex].id - 80]);
.LINE 267

	LD	BC,(IX+-3)
	LD	(IX+-54),BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  268				}
L_83:
.LINE 268

;  269				gfx_ScaledTransparentSprite_NoClip(pokemonSprite, 26, 52, 2, 2);
.LINE 269

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,52
	PUSH	BC
	LD	BC,26
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_gfx_ScaledTransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  270				free(pokemonSprite);
.LINE 270

	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_free
	POP	BC
;  271	
;  272				sprintf(str, "%u/%u", party[pokemonIndex].currenthealth, stats_CalculateStats(party[pokemonIndex]).health);
.LINE 272

	LD	BC,(IX+-54)
	LD	(IX+-21),BC
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-75
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	IY,(IX+-21)
	LD	BC,(IY+13)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__57
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  273				gfx_PrintStringXY(str, 208, 38);
.LINE 273

	LD	BC,38
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  274				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).attack);
.LINE 274

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-87
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	INC	HL
	INC	HL
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__58
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  275				gfx_PrintStringXY(str, 228, 62);
.LINE 275

	LD	BC,62
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  276				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).defence);
.LINE 276

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-99
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+4
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__59
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  277				gfx_PrintStringXY(str, 228, 86);
.LINE 277

	LD	BC,86
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  278				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).specialattack);
.LINE 278

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-111
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+6
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__60
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  279				gfx_PrintStringXY(str, 228, 110);
.LINE 279

	LD	BC,110
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  280				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).specialdefence);
.LINE 280

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-123
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+8
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__61
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  281				gfx_PrintStringXY(str, 228, 134);
.LINE 281

	LD	BC,134
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  282				sprintf(str, "%u", stats_CalculateStats(party[pokemonIndex]).speed);
.LINE 282

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	HL,IX
	LD	BC,-135
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+10
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__62
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  283				gfx_PrintStringXY(str, 228, 158);
.LINE 283

	LD	BC,158
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  284	
;  285				sprintf(str, "%u", party[pokemonIndex].level);
.LINE 285

	LD	IY,(IX+-21)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__63
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  286				gfx_PrintStringXY(str, 64, 186);
.LINE 286

	LD	BC,186
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  287				gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element1 - 1], 218, 187);
.LINE 287

	LD	BC,187
	PUSH	BC
	LD	BC,218
	PUSH	BC
	LD	IY,(IX+-21)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  288				if (data_pokemon[party[pokemonIndex].id].element2 != 0) {
.LINE 288

	LD	IY,(IX+-21)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	OR	A,A
	JR	Z,L_85
;  289					gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element2 - 1], 254, 187);
.LINE 289

	LD	BC,187
	PUSH	BC
	LD	BC,254
	PUSH	BC
	LD	IY,(IX+-21)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  290				}
L_85:
.LINE 290

;  291				sprintf(str, "%i/%i", party[pokemonIndex].xp, xpPerLevel[data_pokemon[party[pokemonIndex].id].xptype][party[pokemonIndex].level + 1]);
.LINE 291

	LD	BC,_party
	LD	HL,(IX+-30)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-10),HL
	LD	IY,(IY+-10)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+49)
	UEXT	HL
	LD	L,A
	LD	BC,303
	CALL	__imulu
	LD	BC,_xpPerLevel
	ADD	HL,BC
	LD	BC,HL
	LEA	IY,IX+-128
	LD	IY,(IY+-10)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	INC	HL
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LEA	IY,IX+-128
	LD	IY,(IY+-10)
	LD	BC,(IY+10)
	PUSH	BC
	LD	BC,L__65
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  292				gfx_PrintStringXY(str, 64, 210);
.LINE 292

	LD	BC,210
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  293	
;  294				gfx_SetTextScale(1, 1);
.LINE 294

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  295	
;  296				gfx_SwapDraw();
.LINE 296

	CALL	_gfx_SwapDraw
;  297				while (!((kb_Data[7] & kb_Right) || (kb_Data[6] & kb_Clear))) {
.LINE 297

	JR	L_87
L_88:
;  298					kb_Scan();
.LINE 298

	CALL	_kb_Scan
;  299				}
L_87:
.LINE 299

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_113
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_113
	JR	L_88
;  300			}
;  301			else if (page == 2) {
L_111:
.LINE 301

	LD	BC,2
	LD	HL,(IX+-27)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_113
;  302				zx7_Decompress(backgroundSprite, infoscreen2_compressed);
.LINE 302

	LD	HL,_PKMNSD5+102
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-39)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  303				gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 303

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-39)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  304	
;  305				gfx_SetTextScale(2, 2);
.LINE 305

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  306	
;  307				gfx_PrintStringXY(data_pokemon[party[pokemonIndex].id].name, 4, 32);
.LINE 307

	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-15),HL
	LD	BC,_party
	ADD	HL,BC
	LD	(IX+-60),HL
	LD	HL,(IX+-15)
	ADD	HL,BC
	LD	(IX+-18),HL
	LD	BC,32
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  308				gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element1 - 1], 164, 34);
.LINE 308

	LD	BC,34
	PUSH	BC
	LD	BC,164
	PUSH	BC
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  309				if (data_pokemon[party[pokemonIndex].id].element2 != 0) {
.LINE 309

	LD	BC,(IX+-18)
	LD	(IX+-42),BC
	LD	BC,(IX+-18)
	LD	(IX+-24),BC
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	OR	A,A
	JR	Z,L_90
;  310					gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[party[pokemonIndex].id].element2 - 1], 200, 34);
.LINE 310

	LD	BC,(IX+-18)
	LD	(IX+-42),BC
	LD	BC,(IX+-18)
	LD	(IX+-24),BC
	LD	BC,34
	PUSH	BC
	LD	BC,200
	PUSH	BC
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  311				}
L_90:
.LINE 311

;  312	
;  313				gfx_TransparentSprite_NoClip(menucursor, 8, 56 + 24 * menuState);
.LINE 313

	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,56
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,8
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  314				for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 314

	LD	BC,0
	LD	(IX+-6),BC
	JR	L_99
L_97:
;  315					if (party[pokemonIndex].moves[moveIndex] > 0) {
.LINE 315

	LD	BC,(IX+-42)
	LD	(IX+-24),BC
	LD	BC,(IX+-6)
	LD	IY,(IX+-24)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	(IX+-48),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_98
;  316						gfx_PrintStringXY(data_moves[party[pokemonIndex].moves[moveIndex]].name, 30, 58 + 24 * moveIndex);
.LINE 316

	LD	HL,(IX+-48)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-57),HL
	LD	HL,(IX+-6)
	LD	A,24
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+58
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	IY,(IX+-57)
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  317						gfx_TransparentSprite_NoClip(typeIcons[data_moves[party[pokemonIndex].moves[moveIndex]].element - 1], 242, 60 + 24 * moveIndex);
.LINE 317

	LD	B,(IX+-6)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,60
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,242
	PUSH	BC
	LD	IY,(IX+-57)
	LD	A,(IY+14)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  318						if(data_moves[party[pokemonIndex].moves[moveIndex]].type == 0)
.LINE 318

	LD	BC,(IX+-60)
	LD	(IX+-12),BC
	LD	(IX+-42),BC
	LD	BC,(IX+-12)
	LD	(IX+-24),BC
	LD	IY,(IX+-12)
	LD	BC,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	OR	A,A
	JR	NZ,L_95
;  319							gfx_TransparentSprite_NoClip(categoryIcons[0], 280, 59 + 24 * moveIndex);
.LINE 319

	LD	B,(IX+-6)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(_categoryIcons)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  320						else if (data_moves[party[pokemonIndex].moves[moveIndex]].type == 1) {
.LINE 320

	JR	L_98
L_95:
	LD	BC,(IX+-12)
	LD	(IX+-12),BC
	LD	(IX+-60),BC
	LD	BC,(IX+-12)
	LD	(IX+-42),BC
	LD	BC,(IX+-12)
	LD	(IX+-24),BC
	LD	IY,(IX+-12)
	LD	BC,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	CP	A,1
	JR	NZ,L_93
;  321							gfx_TransparentSprite_NoClip(categoryIcons[1], 280, 59 + 24 * moveIndex);
.LINE 321

	LD	B,(IX+-6)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	HL,_categoryIcons+3
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  322						}
;  323						else {
.LINE 323

	JR	L_98
L_93:
;  324							gfx_TransparentSprite_NoClip(categoryIcons[2], 280, 59 + 24 * moveIndex);
.LINE 324

	LD	B,(IX+-6)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	HL,_categoryIcons+6
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  325						}
;  326					}
;  327				}
L_98:
.LINE 327

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
L_99:
	LD	BC,4
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JP	M,L_97
;  328	
;  329				sprintf(str, "%u", data_moves[party[pokemonIndex].moves[menuState]].power);
.LINE 329

	LD	BC,(IX+-9)
	LD	IY,(IX+-24)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-33),HL
	LD	IY,(IX+-33)
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__74
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  330				if (data_moves[party[pokemonIndex].moves[menuState]].power < 5) {
.LINE 330

	LD	IY,(IX+-33)
	LD	A,(IY+16)
	CP	A,5
	JR	NC,L_102
;  331					sprintf(str, "-");
.LINE 331

	LD	BC,L__76
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  332				}
L_102:
.LINE 332

;  333				gfx_PrintStringXY(str, 66, 168);
.LINE 333

	LD	BC,168
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  334				sprintf(str, "%u", data_moves[party[pokemonIndex].moves[menuState]].accuracy);
.LINE 334

	LD	IY,(IX+-33)
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__77
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  335				gfx_PrintStringXY(str, 66, 194);
.LINE 335

	LD	BC,194
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  336				sprintf(str, "%u/%u", party[pokemonIndex].pp[menuState], data_moves[party[pokemonIndex].moves[menuState]].uses);
.LINE 336

	LD	BC,_party
	LD	HL,(IX+-15)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-13),HL
	LD	IY,(IY+-13)
	LD	BC,(IX+-9)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+18)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LEA	IY,IX+-128
	LD	IY,(IY+-13)
	LD	BC,(IX+-9)
	LEA	HL,IY+5
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__78
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  337				gfx_PrintStringXY(str, 66, 216);
.LINE 337

	LD	BC,216
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  338	
;  339				gfx_SetTextScale(1, 1);
.LINE 339

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  340	
;  341	
;  342				gfx_SwapDraw();
.LINE 342

	CALL	_gfx_SwapDraw
;  343				while (!((kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down) || (kb_Data[6] & kb_Enter))) {
.LINE 343

	JR	L_107
L_108:
;  344					kb_Scan();
.LINE 344

	CALL	_kb_Scan
;  345				}
L_107:
.LINE 345

	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_113
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_113
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_113
	LD	A,(16056350)
	AND	A,1
	JR	NZ,L_113
	LD	A,(16056348)
	AND	A,1
	JR	Z,L_108
;  346			}
L_113:
.LINE 346

;  347			if (kb_Data[7] & kb_Right) {
.LINE 347

	LD	A,(16056350)
	AND	A,4
	JR	Z,L_115
;  348				page = 2;
.LINE 348

	LD	BC,2
	LD	(IX+-27),BC
;  349			}
L_115:
.LINE 349

;  350			if (kb_Data[7] & kb_Left) {
.LINE 350

	LD	A,(16056350)
	AND	A,2
	JR	Z,L_119
;  351				page = 1;
.LINE 351

	LD	BC,1
	LD	(IX+-27),BC
;  352			}
L_119:
.LINE 352

;  353			if (kb_Data[7] & kb_Up) {
.LINE 353

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_123
;  354				if (menuState > 0) {
.LINE 354

	LD	BC,(IX+-9)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_123
;  355					menuState--;
.LINE 355

	LD	BC,(IX+-9)
	DEC	BC
	LD	(IX+-9),BC
;  356				}
;  357			}
L_123:
.LINE 357

;  358			if (kb_Data[7] & kb_Down) {
.LINE 358

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_130
;  359				if (menuState < 3) {
.LINE 359

	LD	BC,3
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	JP	P,L_130
;  360					menuState++;
.LINE 360

	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  361				}
;  362			}
L_130:
.LINE 362

;  363			if (kb_Data[6] & kb_Enter) {
.LINE 363

	LD	A,(16056348)
	AND	A,1
	JR	Z,L_132
;  364				tempMove = party[pokemonIndex].moves[menuState];
.LINE 364

	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-36),HL
	LD	(IX+-51),HL
	LD	BC,_party
	LD	HL,(IX+-36)
	ADD	HL,BC
	LD	BC,(IX+-9)
	LD	IY,HL
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	(IX+-63),HL
;  365				for (moveIndex = menuState; moveIndex > 0; moveIndex--) {
.LINE 365

	LD	BC,(IX+-9)
	LD	(IX+-6),BC
	JR	L_127
L_125:
;  366					party[pokemonIndex].moves[moveIndex] = party[pokemonIndex].moves[moveIndex - 1];
.LINE 366

	LD	BC,(IX+-36)
	LD	(IX+-51),BC
	LD	BC,_party
	LD	HL,(IX+-36)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-19),HL
	LD	IY,(IY+-19)
	LEA	BC,IY+1
	LEA	IY,IX+-128
	LD	(IY+-16),BC
	LD	BC,(IX+-6)
	DEC	BC
	LD	HL,-144
	PUSH	IY
	LD	(IY+-22),BC
	LD	(IY+-25),IX	; unspill
	LD	DE,(IY+-22)
	LD	(IY+-22),DE
	LD	DE,(IY+-25)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-22)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LD	IY,HL
	LD	DE,(IX+-6)
	LD	HL,-144
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-28),DE
	LD	(IY+-31),IX	; unspill
	LD	DE,(IY+-28)
	LD	(IY+-28),DE
	LD	DE,(IY+-31)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-28)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LD	A,(IY)
	LD	(HL),A
	LD	(IX+-6),BC
;  367				}
L_127:
.LINE 367

	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	M,L_125
;  368				party[pokemonIndex].moves[0] = tempMove;
.LINE 368

	LD	A,(IX+-63)
	LD	BC,_party
	LD	HL,(IX+-51)
	ADD	HL,BC
	LD	IY,HL
	LD	(IY+1),A
;  369				menuState = 0;
.LINE 369

	LD	BC,0
	LD	(IX+-9),BC
;  370			}
L_132:
.LINE 370

;  371			if (kb_Data[6] & kb_Clear) {
.LINE 371

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_133
;  372				page = 0;
.LINE 372

	LD	BC,0
	LD	(IX+-27),BC
;  373			}
;  374		}
L_133:
.LINE 374

	LD	HL,(IX+-27)
	CALL	__icmpzero
	JR	NZ,L_134
;  375		free(backgroundSprite);
.LINE 375

	LD	BC,(IX+-39)
	PUSH	BC
	CALL	_free
	POP	BC
;  376	}
.LINE 376

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_PokemonDetails ***************************
;Name                         Addr/Register   Size   Type
;_categoryIcons                      IMPORT      9   variable
;_data_moves                         IMPORT  unknown variable
;_menucursor_data                    IMPORT    262   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_xpPerLevel                         IMPORT   1212   variable
;_typeIcons                          IMPORT     51   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_stats_CalculateStats               IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_free                               IMPORT  -----   function
;_gfx_ScaledTransparentSprite_NoClip      IMPORT  -----   function
;_PKMNSD1                            IMPORT    219   variable
;_PKMNSD0                            IMPORT    240   variable
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_party                              IMPORT   1224   variable
;_gfx_SetTextScale                   IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_PKMNSD5                            IMPORT    114   variable
;_zx7_Decompress                     IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;tempMove                             IX-63      3   variable
;G_44                                 IX-60      3   variable
;G_43                                 IX-57      3   variable
;G_17                                 IX-54      3   variable
;G_54                                 IX-51      3   variable
;G_41                                 IX-48      3   variable
;pokemonSprite                        IX-45      3   variable
;G_39                                 IX-42      3   variable
;backgroundSprite                     IX-39      3   variable
;G_53                                 IX-36      3   variable
;G_48                                 IX-33      3   variable
;G_31                                 IX-30      3   variable
;page                                 IX-27      3   variable
;G_47                                 IX-24      3   variable
;G_24                                 IX-21      3   variable
;G_33                                 IX-18      3   variable
;G_52                                 IX-15      3   variable
;G_38                                 IX-12      3   variable
;menuState                             IX-9      3   variable
;moveIndex                             IX-6      3   variable
;G_16                                  IX-3      3   variable
;pokemonIndex                          IX+6      3   parameter


; Stack Frame Size: 168 (bytes)
;       Spill Code: -10 (instruction)


.ENDFUNC "menu_PokemonDetails",376,"_menu_PokemonDetails"
	SEGMENT STRSECT
L__57:
	DB	"%u/%u"
	DB	0
L__58:
	DB	"%u"
	DB	0
L__59:
	DB	"%u"
	DB	0
L__60:
	DB	"%u"
	DB	0
L__61:
	DB	"%u"
	DB	0
L__62:
	DB	"%u"
	DB	0
L__63:
	DB	"%u"
	DB	0
L__65:
	DB	"%i/%i"
	DB	0
L__74:
	DB	"%u"
	DB	0
L__76:
	DB	"-"
	DB	0
L__77:
	DB	"%u"
	DB	0
L__78:
	DB	"%u/%u"
	DB	0
	SEGMENT CODE
;  377	bool menu_Items(bool inBattle) {
_menu_Items:
.DEFINE "_menu_Items"

.VALUE _menu_Items

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "menu_Items",377,"_menu_Items"

.LINE 377

.DEFINE "inBattle"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "itemIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "cursorState"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

.DEFINE "page"

.CLASS 65

.VALUE -12

.TYPE 4

.ENDEF

.DEFINE "usableItemCount"

.CLASS 65

.VALUE -15

.TYPE 4

.ENDEF

.DEFINE "usableTMCount"

.CLASS 65

.VALUE -18

.TYPE 4

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -21

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "itemToUse"

.CLASS 65

.VALUE -24

.TYPE 4

.ENDEF

.DEFINE "usableItems"

.CLASS 65

.VALUE -87

.DIM 20

.TYPE 100

.ENDEF

.DEFINE "usableTMs"

.CLASS 65

.VALUE -582

.DIM 165

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-582
	ADD	HL,SP
	LD	SP,HL
;  378		int page, menuState, cursorState, itemIndex, usableItemCount, usableItems[20], usableTMCount, usableTMs[165];
;  379		gfx_sprite_t *backgroundSprite;
;  380	
;  381	
;  382		/* Generate Usable Items List */
;  383		usableItemCount = 0;
.LINE 383

	LD	BC,0
	LD	(IX+-15),BC
;  384		usableTMCount = 0;
.LINE 384

	LD	(IX+-18),BC
;  385		for (itemIndex = 0; itemIndex < 20; itemIndex++) {
.LINE 385

	LD	(IX+-3),BC
	JR	L_142
L_140:
;  386			if (playerItems[itemIndex] > 0) {
.LINE 386

	LD	BC,_playerItems
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_141
;  387				usableItems[usableItemCount] = itemIndex;
.LINE 387

	LD	HL,(IX+-15)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LEA	HL,IX+-87
	ADD	HL,BC
	LD	BC,(IX+-3)
	LD	(HL),BC
;  388				usableItemCount++;
.LINE 388

	LD	BC,(IX+-15)
	INC	BC
	LD	(IX+-15),BC
;  389			}
;  390		}
L_141:
.LINE 390

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_142:
	LD	BC,20
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_140
;  391		for (itemIndex = 0; itemIndex < 165; itemIndex++) {
.LINE 391

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_148
L_146:
;  392			if (playerItems[itemIndex + 20] > 0) {
.LINE 392

	LD	IY,(IX+-3)
	LEA	IY,IY+20
	LD	(IX+-27),IY
	LD	BC,_playerItems
	LD	HL,(IX+-27)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_147
;  393				usableTMs[usableTMCount] = itemIndex + 20;
.LINE 393

	LD	HL,(IX+-18)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-582
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IX+-27)
	LD	(HL),BC
;  394				usableTMCount++;
.LINE 394

	LD	BC,(IX+-18)
	INC	BC
	LD	(IX+-18),BC
;  395			}
;  396		}
L_147:
.LINE 396

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_148:
	LD	BC,165
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_146
;  397		backgroundSprite = gfx_MallocSprite(160, 88);
.LINE 397

	LD	BC,_malloc
	PUSH	BC
	LD	BC,88
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-21),HL
;  398		zx7_Decompress(backgroundSprite, bag_compressed);
.LINE 398

	LD	HL,_PKMNSD5+96
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-21)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  399	
;  400		menu_Setup();
.LINE 400

	CALL	_menu_Setup
;  401	
;  402	
;  403		page = 1;
.LINE 403

	LD	BC,1
	LD	(IX+-12),BC
;  404		menuState = 0;
.LINE 404

	LD	BC,0
	LD	(IX+-6),BC
;  405		cursorState = 0;
.LINE 405

	LD	(IX+-9),BC
;  406		while (page != 0)
.LINE 406

	JR	L_219
L_220:
;  407		{
;  408	
;  409			gfx_FillScreen(colors[1]);
.LINE 409

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  410			text_DrawTextBox();
.LINE 410

	CALL	_text_DrawTextBox
;  411			gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 411

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-21)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  412			gfx_TransparentSprite_NoClip(menucursorsmall, 132, 19 + 14 * cursorState);
.LINE 412

	LD	B,(IX+-9)
	LD	C,14
	MLT	BC
	LD	A,C
	ADD	A,19
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,132
	PUSH	BC
	LD	BC,_menucursorsmall_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  413			
;  414			Wait(20);
.LINE 414

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  415	
;  416			kb_Scan();
.LINE 416

	CALL	_kb_Scan
;  417			if (page == 1) {
.LINE 417

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_179
;  418				gfx_SetTextScale(2, 2);
.LINE 418

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  419				gfx_PrintStringXY("Items", 12, 19);
.LINE 419

	LD	BC,19
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__100
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  420				gfx_SetTextScale(1, 1);
.LINE 420

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  421				for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < usableItemCount; itemIndex++) {
.LINE 421

	LD	BC,(IX+-6)
	LD	(IX+-3),BC
	JR	L_155
L_153:
;  422					gfx_PrintStringXY(itemNames[usableItems[itemIndex]], 140, 21 + 14 * (itemIndex - menuState));
.LINE 422

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LEA	HL,IX+-87
	ADD	HL,BC
	LD	HL,(HL)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  423					sprintf(str, "%u", playerItems[usableItems[itemIndex]]);
.LINE 423

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LEA	HL,IX+-87
	ADD	HL,BC
	LD	BC,_playerItems
	LD	HL,(HL)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__101
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  424					gfx_PrintStringXY(str, 274, 21 + 14 * (itemIndex - menuState));
.LINE 424

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,274
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  425				}
L_155:
.LINE 425

	LD	IY,(IX+-6)
	LEA	BC,IY+10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_156
	LD	BC,(IX+-15)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_153
L_156:
;  426	
;  427				gfx_SwapDraw();
.LINE 427

	CALL	_gfx_SwapDraw
;  428				while (!((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
.LINE 428

	JR	L_162
L_163:
;  429					kb_Scan();
.LINE 429

	CALL	_kb_Scan
;  430				}
L_162:
.LINE 430

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_187
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_187
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_187
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_187
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_187
	LD	A,(16056350)
	AND	A,1
	JR	NZ,L_187
	JR	L_163
;  431			}
;  432			else if (page == 2) {
L_179:
.LINE 432

	LD	BC,2
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_187
;  433				gfx_SetTextScale(2, 2);
.LINE 433

	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  434				gfx_PrintStringXY("TMs", 12, 19);
.LINE 434

	LD	BC,19
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__111
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  435				gfx_SetTextScale(1, 1);
.LINE 435

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  436				for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < usableTMCount; itemIndex++) {
.LINE 436

	LD	BC,(IX+-6)
	LD	(IX+-3),BC
	JR	L_168
L_166:
;  437					sprintf(str, "TM%u %s", usableTMs[itemIndex] - 19, data_moves[usableTMs[itemIndex] - 19].name);
.LINE 437

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-582
	ADD	HL,DE
	ADD	HL,BC
	LD	IY,(HL)
	LEA	DE,IY+-19
	LD	HL,21
	LD	BC,DE
	CALL	__imulu
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,DE
	PUSH	BC
	LD	BC,L__112
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  438					gfx_PrintStringXY(str, 140, 21 + 14 * (itemIndex - menuState));
.LINE 438

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  439				}
L_168:
.LINE 439

	LD	IY,(IX+-6)
	LEA	BC,IY+10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	P,L_169
	LD	BC,(IX+-18)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_166
L_169:
;  440				gfx_SwapDraw();
.LINE 440

	CALL	_gfx_SwapDraw
;  441				while (!((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
.LINE 441

	JR	L_175
L_176:
;  442					kb_Scan();
.LINE 442

	CALL	_kb_Scan
;  443				}
L_175:
.LINE 443

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_187
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_187
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_187
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_187
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_187
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_176
;  444			}
L_187:
.LINE 444

;  445			if (kb_Data[7] & kb_Up) {
.LINE 445

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_203
;  446				if (menuState > 0 && cursorState <= 2) {
.LINE 446

	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_185
	LD	BC,(IX+-9)
	LD	HL,2
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_185
;  447					menuState--;
.LINE 447

	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  448				}
;  449				else if(menuState + cursorState > 0) {
.LINE 449

	JR	L_203
L_185:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_203
;  450					cursorState--;
.LINE 450

	LD	BC,(IX+-9)
	DEC	BC
	LD	(IX+-9),BC
;  451				}
;  452			}
L_203:
.LINE 452

;  453			if (kb_Data[7] & kb_Down) {
.LINE 453

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_209
;  454				if (page == 1) {
.LINE 454

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_201
;  455					if (menuState + 10 < usableItemCount && cursorState >= 3) {
.LINE 455

	LD	IY,(IX+-6)
	LEA	HL,IY+10
	LD	BC,(IX+-15)
	OR	A,A
	SBC	HL,BC
	JP	P,L_193
	LD	BC,3
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_193
;  456						menuState++;
.LINE 456

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  457					}
;  458					else if (menuState + cursorState < usableItemCount - 1) {
.LINE 458

	JR	L_209
L_193:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IX+-15)
	DEC	BC
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_209
;  459						cursorState++;
.LINE 459

	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  460					}
;  461				}
;  462				else {
.LINE 462

	JR	L_209
L_201:
;  463					if (menuState + 10 < usableTMCount && cursorState >= 7) {
.LINE 463

	LD	IY,(IX+-6)
	LEA	HL,IY+10
	LD	BC,(IX+-18)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_199
	LD	BC,7
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_199
;  464						menuState++;
.LINE 464

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  465					}
;  466					else if (menuState + cursorState < usableTMCount - 1) {
.LINE 466

	JR	L_209
L_199:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IX+-18)
	DEC	BC
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_209
;  467						cursorState++;
.LINE 467

	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  468					}
;  469				}
;  470			}
L_209:
.LINE 470

;  471			if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) {
.LINE 471

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_208
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_211
L_208:
;  472				if (page == 1) {
.LINE 472

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_206
;  473					page = 2;
.LINE 473

	LD	BC,2
	LD	(IX+-12),BC
;  474				}
;  475				else {
.LINE 475

	JR	L_207
L_206:
;  476					page = 1;
.LINE 476

	LD	(IX+-12),BC
;  477				}
L_207:
.LINE 477

;  478				menuState = 0;
.LINE 478

	LD	BC,0
	LD	(IX+-6),BC
;  479				cursorState = 0;
.LINE 479

	LD	(IX+-9),BC
;  480			}
L_211:
.LINE 480

;  481			if (kb_Data[6] & kb_Clear) {
.LINE 481

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_218
;  482				page = 0;
.LINE 482

	LD	BC,0
	LD	(IX+-12),BC
;  483			}
L_218:
.LINE 483

;  484			if (kb_Data[1] & kb_2nd) {
.LINE 484

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_219
;  485				int itemToUse;
;  486				if (page == 1) {
.LINE 486

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_213
;  487					itemToUse = usableItems[menuState + cursorState];
.LINE 487

	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LEA	HL,IX+-87
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-24),BC
;  488				}
;  489				else {
.LINE 489

	JR	L_216
L_213:
;  490					itemToUse = usableTMs[menuState + cursorState];
.LINE 490

	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-582
	ADD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	LD	(IX+-24),BC
;  491				}
L_216:
.LINE 491

;  492				if (items_UseItem(itemToUse) && inBattle) {
.LINE 492

	LD	C,(IX+-24)
	LD	B,0
	PUSH	BC
	CALL	_items_UseItem
	POP	BC
	OR	A,A
	JR	Z,L_219
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_219
;  493					gfx_SetDrawBuffer();
.LINE 493

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  494					return true;
.LINE 494

	LD	A,1
	JR	L_222
;  495				}
;  496			}
;  497		}
L_219:
.LINE 497

	LD	HL,(IX+-12)
	CALL	__icmpzero
	JR	NZ,L_220
;  498		free(backgroundSprite);
.LINE 498

	LD	BC,(IX+-21)
	PUSH	BC
	CALL	_free
	POP	BC
;  499		gfx_SetDrawBuffer();
.LINE 499

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  500		return false;
.LINE 500

	XOR	A,A
L_222:
.LINE 501

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Items ***************************
;Name                         Addr/Register   Size   Type
;_free                               IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_items_UseItem                      IMPORT  -----   function
;_data_moves                         IMPORT  unknown variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_itemNames                          IMPORT    320   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menucursorsmall_data               IMPORT     72   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_text_DrawTextBox                   IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_FillScreen                     IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_PKMNSD5                            IMPORT    114   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_playerItems                        IMPORT    185   variable
;usableTMs                           IX-582    495   variable
;usableItems                          IX-87     60   variable
;G_55                                 IX-27      3   variable
;itemToUse                            IX-24      3   variable
;backgroundSprite                     IX-21      3   variable
;usableTMCount                        IX-18      3   variable
;usableItemCount                      IX-15      3   variable
;page                                 IX-12      3   variable
;cursorState                           IX-9      3   variable
;menuState                             IX-6      3   variable
;itemIndex                             IX-3      3   variable
;inBattle                              IX+6      1   parameter


; Stack Frame Size: 591 (bytes)
;       Spill Code: -10 (instruction)


.ENDFUNC "menu_Items",501,"_menu_Items"
	SEGMENT STRSECT
L__100:
	DB	"Items"
	DB	0
L__101:
	DB	"%u"
	DB	0
L__111:
	DB	"TMs"
	DB	0
L__112:
	DB	"TM%u %s"
	DB	0
	XREF _PKMNSD5:ROM
	XREF _PKMNSD1:ROM
	XREF _PKMNSD0:ROM
	XREF _itemNames:ROM
	XREF _items_UseItem:ROM
	XREF _stats_CalculateStats:ROM
	XREF _save_Save:ROM
	XREF _playerItems:ROM
	XREF _party:ROM
	XREF _textBoxSprite2:ROM
	XREF _textBoxSprite1:ROM
	XREF _text_DrawTextBox:ROM
	XREF _categoryIcons:ROM
	XREF _statusIcons:ROM
	XREF _colors:ROM
	XREF _str:ROM
	XREF _FreeIcons:ROM
	XREF _MallocIcons:ROM
	XREF _SetColors:ROM
	XREF _Wait:ROM
	XREF _typeIcons:ROM
	XREF _xpPerLevel:ROM
	XREF _data_moves:ROM
	XREF _data_pokemon:ROM
	XREF _menucursorsmall_data:ROM
	XREF _menucursor_data:ROM
	XREF _zx7_Decompress:ROM
	XREF _gfx_ScaledTransparentSprite_NoClip:ROM
	XREF _gfx_ScaledSprite_NoClip:ROM
	XREF _gfx_TransparentSprite_NoClip:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_FillScreen:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_AllocSprite:ROM
	XREF _kb_Scan:ROM
	XREF _sprintf:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF __idivs:ROM
	XREF __imulu:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _menu_Items
	XDEF _menu_PokemonDetails
	XDEF _menu_PokemonMenu
	XDEF _menu_Menu
	XDEF _menu_Setup
	XDEF _menuCurrent
	XDEF _menuState2
	XDEF _menuState1
	XDEF _tempcharacter
	XDEF _pokemonToSwitch
	XDEF _switchMode
	END
