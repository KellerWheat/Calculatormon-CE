; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MENU.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME1"
.TYPE 104
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME7"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "NONAME8",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME9"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME10"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME10",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME10"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
.BEGREC "NONAME11",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME11"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME15"
.BEGREC "pokemonData",34
.DEFINE "id"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "moves"
.VALUE 1
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "pp"
.VALUE 5
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "level"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xp"
.VALUE 10
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "currenthealth"
.VALUE 13
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "currentstatus"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthIV"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "attackIV"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "defenceIV"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialattackIV"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialdefenceIV"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "speedIV"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthEV"
.VALUE 22
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attackEV"
.VALUE 24
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defenceEV"
.VALUE 26
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattackEV"
.VALUE 28
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefenceEV"
.VALUE 30
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speedEV"
.VALUE 32
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonData"
.BEGREC "pokemonType",51
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 16
.TYPE 98
.ENDEF
.DEFINE "element1"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "element2"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basehealth"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "baseattack"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basedefence"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialattack"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialdefence"
.VALUE 22
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespeed"
.VALUE 23
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "movelevels"
.VALUE 24
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "moveids"
.VALUE 34
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "evolvelevel"
.VALUE 44
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolveid"
.VALUE 45
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolvesfrom"
.VALUE 46
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xpdrop"
.VALUE 47
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "xptype"
.VALUE 49
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "catchrate"
.VALUE 50
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "pokemonType"
.BEGREC "pokemonStats",12
.DEFINE "health"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attack"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defence"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattack"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefence"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speed"
.VALUE 10
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonStats"
.BEGREC "move",21
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 14
.TYPE 98
.ENDEF
.DEFINE "element"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "power"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "accuracy"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "uses"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statustype"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statuschance"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "move"
.BEGREC "zoneData",688
.DEFINE "spawnids"
.VALUE 0
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnminlevels"
.VALUE 80
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnmaxlevels"
.VALUE 160
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "exitzone"
.VALUE 240
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exitx"
.VALUE 256
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exity"
.VALUE 272
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorzones"
.VALUE 288
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorx"
.VALUE 304
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doory"
.VALUE 320
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "textIds"
.VALUE 336
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerspawnids"
.VALUE 352
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerspawnlevels"
.VALUE 448
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerx"
.VALUE 544
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainery"
.VALUE 560
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerdir"
.VALUE 576
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerskin"
.VALUE 592
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainertype"
.VALUE 608
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainermovement"
.VALUE 624
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainertext"
.VALUE 640
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerreward"
.VALUE 656
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "grounditems"
.VALUE 672
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.ENDREC "zoneData"
.BEGREC "saveGame",4140
.DEFINE "newGame"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rivalPokemon"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "playerX"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "playerY"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "lastPlayerX"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "lastPlayerY"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "party"
.VALUE 10
.CLASS 8
.DIM 36
.TAG "pokemonData"
.TYPE 104
.ENDEF
.DEFINE "currentZone"
.VALUE 1234
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "indoors"
.VALUE 1236
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "surfing"
.VALUE 1237
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "currentBuilding"
.VALUE 1238
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "playerMoney"
.VALUE 1239
.CLASS 8
.TYPE 15
.ENDEF
.DEFINE "playerItems"
.VALUE 1243
.CLASS 8
.DIM 185
.TYPE 108
.ENDEF
.DEFINE "defeatedTrainers"
.VALUE 1428
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "defeatedTrainersIndoors"
.VALUE 1684
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGifts"
.VALUE 1940
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGiftsIndoors"
.VALUE 2196
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGroundGifts"
.VALUE 2452
.CLASS 8
.DIM 2
.DIM 16
.DIM 16
.TYPE 7020
.ENDEF
.DEFINE "foundItemsPos"
.VALUE 2964
.CLASS 8
.DIM 2
.DIM 16
.DIM 16
.TYPE 7021
.ENDEF
.DEFINE "badgeCount"
.VALUE 3988
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pokedex"
.VALUE 3989
.CLASS 8
.DIM 151
.TYPE 108
.ENDEF
.ENDREC "saveGame"
	SEGMENT BSS
_switchMode:
	DS	1
.DEFINE "switchMode"
.ALIAS "_switchMode"
.CLASS 83
.VALUE _switchMode
.TYPE 12
.ENDEF
_pokemonToSwitch:
	DS	1
.DEFINE "pokemonToSwitch"
.ALIAS "_pokemonToSwitch"
.CLASS 83
.VALUE _pokemonToSwitch
.TYPE 12
.ENDEF
_tempcharacter:
	DS	34
.DEFINE "tempcharacter"
.ALIAS "_tempcharacter"
.CLASS 83
.VALUE _tempcharacter
.TAG "pokemonData"
.TYPE 8
.ENDEF
	SEGMENT DATA
_menuState1:
	DB	0
.DEFINE "menuState1"
.ALIAS "_menuState1"
.CLASS 69
.VALUE _menuState1
.TYPE 12
.ENDEF
_menuState2:
	DB	0
.DEFINE "menuState2"
.ALIAS "_menuState2"
.CLASS 69
.VALUE _menuState2
.TYPE 12
.ENDEF
_menuCurrent:
	DB	1
.DEFINE "menuCurrent"
.ALIAS "_menuCurrent"
.CLASS 69
.VALUE _menuCurrent
.TYPE 12
.ENDEF
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	#include <math.h>
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	#include <keypadc.h>
;   10	#include <graphx.h>
;   11	#include <compression.h>
;   12	#include <debug.h>
;   13	
;   14	#include "map.h"
;   15	#include "battle.h"
;   16	#include "menu.h"
;   17	#include "misc.h"
;   18	#include "data.h"
;   19	#include "text.h"
;   20	#include "savegame.h"
;   21	#include "stats.h"
;   22	#include "gfx/battle_gfx.h"
;   23	#include "gfx/map_gfx.h"
;   24	#include "items.h"
;   25	#include "gfx/PKMNSD0.h"
;   26	#include "gfx/PKMNSD1.h"
;   27	#include "gfx/PKMNSD2.h"
;   28	#include "gfx/PKMNSD3.h"
;   29	#include "gfx/PKMNSD5.h"
;   30	#include "gfx/PKMNSD6.h"
;   31	
;   32	void MoveMenuCursor(int max);
;   33	
;   34	void ItemMenu(void);
;   35	void FastTravelMenu(void);
;   36	
;   37	
;   38	/* Press enter to toggle; allows player to switch pokemon around */
;   39	bool switchMode;
;   40	uint8_t pokemonToSwitch;
;   41	struct pokemonData tempcharacter;
;   42	
;   43	
;   44	
;   45	uint8_t menuState1 = 0;
;   46	uint8_t menuState2 = 0;
;   47	uint8_t menuCurrent = 1;
	SEGMENT CODE
;   48	
;   49	void menu_Setup(void) {
_menu_Setup:
.DEFINE "_menu_Setup"

.VALUE _menu_Setup

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "menu_Setup",49,"_menu_Setup"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
;   50	
;   51		dbg_SetWatchpoint(&currentSave.party[0].id, 1);
.LINE 51

	LD	BC,_currentSave+10
	LD	(IX+-6),BC
	LD	BC,1
	PUSH	BC
	LD	BC,_currentSave+10
	PUSH	BC
	CALL	_dbg_SetWatchpoint
	POP	BC
	POP	BC
;   52		dbg_SetWatchpoint(&currentSave.party[0].moves[0], 1);
.LINE 52

	LD	IY,(IX+-6)
	LEA	BC,IY+1
	LD	(IX+-3),BC
	LD	BC,1
	PUSH	BC
	PEA	IY+1
	CALL	_dbg_SetWatchpoint
	POP	BC
	POP	BC
;   53		dbg_SetWatchpoint(&currentSave.party[0].moves[1], 1);
.LINE 53

	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	INC	BC
	PUSH	BC
	CALL	_dbg_SetWatchpoint
	POP	BC
	POP	BC
;   54		dbg_SetWatchpoint(&currentSave.party[0].moves[2], 1);
.LINE 54

	LD	BC,1
	PUSH	BC
	LD	IY,(IX+-3)
	LEA	BC,IY+2
	PUSH	BC
	CALL	_dbg_SetWatchpoint
	POP	BC
	POP	BC
;   55		dbg_SetWatchpoint(&currentSave.party[0].moves[3], 1);
.LINE 55

	LD	BC,1
	PUSH	BC
	LD	IY,(IX+-3)
	LEA	BC,IY+3
	PUSH	BC
	CALL	_dbg_SetWatchpoint
	POP	BC
	POP	BC
;   56	
;   57		textBoxType = 3;
.LINE 57

	LD	BC,3
	LD	(_textBoxType),BC
;   58	
;   59		gfx_SetPalette(battle_gfx_pal, sizeof_battle_gfx_pal, 0);
.LINE 59

	LD	BC,0
	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	HL,_PKMNSD5+99
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   60		SetColors(1);
.LINE 60

	LD	BC,1
	PUSH	BC
	CALL	_SetColors
	POP	BC
;   61		gfx_SetTextFGColor(255);
.LINE 61

	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   62	
;   63	
;   64	}
.LINE 64

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Setup ***************************
;Name                         Addr/Register   Size   Type
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_SetColors                          IMPORT  -----   function
;_PKMNSD5                            IMPORT    102   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_textBoxType                        IMPORT      3   variable
;_dbg_SetWatchpoint                  IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;G_1                                   IX-6      3   variable
;G_2                                   IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "menu_Setup",64,"_menu_Setup"
;   65	
;   66	uint8_t menu_Menu(void) {
_menu_Menu:
.DEFINE "_menu_Menu"

.VALUE _menu_Menu

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "menu_Menu",66,"_menu_Menu"

.LINE 66

.DEFINE "cursorState"

.CLASS 65

.VALUE -1

.TYPE 2

.ENDEF

.DEFINE "chosenItem"

.CLASS 65

.VALUE -4

.TYPE 4

.ENDEF

.DEFINE "chosenPokemon"

.CLASS 65

.VALUE -7

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
;   67		int8_t cursorState = 0;
.LINE 67

	LD	(IX+-1),0
;   68		
;   69	
;   70		gfx_PrintStringXY("Pokemon", 215, 35);
.LINE 70

	LD	BC,35
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   71		gfx_PrintStringXY("Bag", 215, 50);
.LINE 71

	LD	BC,50
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__2
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   72		gfx_PrintStringXY("Close Menu", 215, 65);
.LINE 72

	LD	BC,65
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__3
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   73		gfx_PrintStringXY("Save", 215, 80);
.LINE 73

	LD	BC,80
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__4
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   74		gfx_PrintStringXY("Exit Game", 215, 95);
.LINE 74

	LD	BC,95
	PUSH	BC
	LD	BC,215
	PUSH	BC
	LD	BC,L__5
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   75		gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
.LINE 75

	LD	BC,35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__6
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   76	
;   77		gfx_SwapDraw();
.LINE 77

	CALL	_gfx_SwapDraw
;   78		gfx_SetDrawScreen();
.LINE 78

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   79	
;   80		while (!(kb_Data[6] & kb_Clear)) {
.LINE 80

	JR	L_25
L_26:
;   81			kb_Scan();
.LINE 81

	CALL	_kb_Scan
;   82			if ((kb_Data[7] & kb_Down)) {
.LINE 82

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_7
;   83				cursorState += 1;
.LINE 83

	INC	(IX+-1)
;   84				if (cursorState == 5) {
.LINE 84

	LD	A,(IX+-1)
	CP	A,5
	JR	NZ,L_2
;   85					cursorState = 0;
.LINE 85

	LD	(IX+-1),0
;   86				}
L_2:
.LINE 86

;   87				gfx_FillRectangle(205, 35, 10, 70);
.LINE 87

	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,205
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   88				gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
.LINE 88

	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	A,15
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   89				Wait(20);
.LINE 89

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;   90			}
L_7:
.LINE 90

;   91			if ((kb_Data[7] & kb_Up)) {
.LINE 91

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_24
;   92				cursorState -= 1;
.LINE 92

	DEC	(IX+-1)
;   93				if (cursorState == -1) {
.LINE 93

	LD	A,(IX+-1)
	CP	A,-1
	JR	NZ,L_5
;   94					cursorState = 4;
.LINE 94

	LD	(IX+-1),4
;   95				}
L_5:
.LINE 95

;   96				gfx_FillRectangle(205, 35, 10, 70);
.LINE 96

	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,205
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   97				gfx_PrintStringXY(">", 208, 35 + 15 * cursorState);
.LINE 97

	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	A,15
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+35
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,L__12
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   98				Wait(20);
.LINE 98

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;   99			}
L_24:
.LINE 99

;  100			if (kb_Data[1] & kb_2nd) {
.LINE 100

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_25
;  101				gfx_SetDrawBuffer();
.LINE 101

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  102				if (cursorState == 0) {
.LINE 102

	LD	A,(IX+-1)
	OR	A,A
	JR	NZ,L_16
;  103					int chosenPokemon;
;  104					choosePokemon:
.LINE 104

L_8:
;  105					chosenPokemon = menu_PokemonMenu(true);
.LINE 105

	LD	BC,1
	PUSH	BC
	CALL	_menu_PokemonMenu
	POP	BC
	LD	(IX+-7),HL
;  106					if (chosenPokemon != 0) {
.LINE 106

	CALL	__icmpzero
	JR	Z,L_10
;  107						menu_PokemonDetails(chosenPokemon - 1);
.LINE 107

	LD	BC,(IX+-7)
	DEC	BC
	PUSH	BC
	CALL	_menu_PokemonDetails
	POP	BC
;  108						goto choosePokemon;
.LINE 108

	JR	L_8
;  109					}
L_10:
.LINE 109

;  110					return 0;
.LINE 110

	XOR	A,A
	JR	L_28
;  111				}
L_16:
.LINE 111

;  112				if (cursorState == 1) {
.LINE 112

	LD	A,(IX+-1)
	CP	A,1
	JR	NZ,L_18
;  113					int chosenItem;
;  114					chooseItem:
.LINE 114

L_12:
;  115					chosenItem = menu_Items(false);
.LINE 115

	LD	BC,0
	PUSH	BC
	CALL	_menu_Items
	POP	BC
	LD	(IX+-4),HL
;  116					if (chosenItem != -1) {
.LINE 116

	LD	BC,16777215
	LD	HL,(IX+-4)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_14
;  117						items_UseItem(chosenItem);
.LINE 117

	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	CALL	_items_UseItem
	POP	BC
;  118						goto chooseItem;
.LINE 118

	JR	L_12
;  119					}
L_14:
.LINE 119

;  120					return 0;
.LINE 120

	XOR	A,A
	JR	L_28
;  121				}
L_18:
.LINE 121

;  122				if (cursorState == 2) {
.LINE 122

	LD	A,(IX+-1)
	CP	A,2
	JR	NZ,L_22
;  123					return 0;
.LINE 123

	XOR	A,A
	JR	L_28
;  124				}
L_22:
.LINE 124

;  125				if (cursorState == 3) {
.LINE 125

	LD	A,(IX+-1)
	CP	A,3
	JR	NZ,L_21
;  126					save_Save();
.LINE 126

	CALL	_save_Save
;  127					return 0;
.LINE 127

	XOR	A,A
	JR	L_28
;  128				}
;  129				else if (cursorState == 4) {
L_21:
.LINE 129

	LD	A,(IX+-1)
	CP	A,4
	JR	NZ,L_25
;  130					return 2;
.LINE 130

	LD	A,2
	JR	L_28
;  131				}
;  132			}
;  133		}
L_25:
.LINE 133

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_26
;  134		gfx_SetDrawBuffer();
.LINE 134

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  135		return 0;
.LINE 135

	XOR	A,A
;  136	}
L_28:
.LINE 136

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Menu ***************************
;Name                         Addr/Register   Size   Type
;_save_Save                          IMPORT  -----   function
;_items_UseItem                      IMPORT  -----   function
;_menu_Items                         IMPORT  -----   function
;_menu_PokemonDetails                IMPORT  -----   function
;_menu_PokemonMenu                   IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;chosenPokemon                         IX-7      3   variable
;chosenItem                            IX-4      3   variable
;cursorState                           IX-1      1   variable


; Stack Frame Size: 13 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "menu_Menu",136,"_menu_Menu"
	SEGMENT STRSECT
L__1:
	DB	"Pokemon"
	DB	0
L__2:
	DB	"Bag"
	DB	0
L__3:
	DB	"Close Menu"
	DB	0
L__4:
	DB	"Save"
	DB	0
L__5:
	DB	"Exit Game"
	DB	0
L__6:
	DB	">"
	DB	0
L__9:
	DB	">"
	DB	0
L__12:
	DB	">"
	DB	0
	SEGMENT CODE
;  137	
;  138	int menu_PokemonMenu(bool pressEnter) {
_menu_PokemonMenu:
.DEFINE "_menu_PokemonMenu"

.VALUE _menu_PokemonMenu

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "menu_PokemonMenu",138,"_menu_PokemonMenu"

.LINE 138

.DEFINE "pressEnter"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "partyIndex"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -22

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "pokemonSprite"

.CLASS 65

.VALUE -25

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "healthRatio"

.CLASS 65

.VALUE -28

.TYPE 4

.ENDEF

.DEFINE "baseX"

.CLASS 65

.VALUE -49

.DIM 6

.TYPE 100

.ENDEF

.DEFINE "baseY"

.CLASS 65

.VALUE -67

.DIM 6

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-103
	LD	SP,HL
;  139		int partyIndex, statusIndex, menuState;
;  140		gfx_sprite_t *backgroundSprite;
;  141		gfx_sprite_t *pokemonSprite;
;  142		int baseX[6] = { 20,175,20,175,20,175 };
.LINE 142

	LEA	DE,IX+-49
	LD	HL,_0temp29
	LD	BC,18
	LDIR	
;  143		int baseY[6] = { 20,20,70,70,120,120 };
.LINE 143

	LEA	DE,IX+-67
	LD	HL,_1temp30
	LD	BC,18
	LDIR	
;  144	
;  145	
;  146		menuState = 0;
.LINE 146

	LD	BC,0
	LD	(IX+-3),BC
;  147		backgroundSprite = gfx_MallocSprite(160, 120);
.LINE 147

	LD	BC,_malloc
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-22),HL
;  148		pokemonSprite = gfx_MallocSprite(133, 36);
.LINE 148

	LD	BC,_malloc
	PUSH	BC
	LD	BC,36
	PUSH	BC
	LD	BC,133
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-25),HL
;  149		zx7_Decompress(backgroundSprite, pokemonlist_compressed);
.LINE 149

	LD	HL,_PKMNSD5+75
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  150		zx7_Decompress(pokemonSprite, menupokemon_compressed);
.LINE 150

	LD	HL,_PKMNSD5+78
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-25)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  151		MallocIcons();
.LINE 151

	CALL	_MallocIcons
;  152	
;  153		menu_Setup();
.LINE 153

	CALL	_menu_Setup
;  154	
;  155		redraw_PokemonMenu:
.LINE 155

L_31:
;  156		gfx_SetDrawBuffer();
.LINE 156

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  157	
;  158		gfx_FillScreen(colors[1]);
.LINE 158

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  159		text_DrawTextBox();
.LINE 159

	CALL	_text_DrawTextBox
;  160		gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 160

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  161		for (partyIndex = 0; partyIndex < 6; partyIndex++) {
.LINE 161

	LD	BC,0
	LD	(IX+-6),BC
	JR	L_43
L_41:
;  162			int healthRatio;
;  163			if (currentSave.party[partyIndex].id != 0) {
.LINE 163

	LD	BC,_currentSave+10
	LD	(IX+-12),BC
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-15),HL
	LD	BC,(IX+-12)
	ADD	HL,BC
	LD	(IX+-9),HL
	LD	IY,(IX+-9)
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_42
;  164				gfx_TransparentSprite_NoClip(pokemonSprite, baseX[partyIndex], baseY[partyIndex]);
.LINE 164

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-67
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-25)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  165				gfx_PrintStringXY(data_pokemon[currentSave.party[partyIndex].id].name, baseX[partyIndex] + 4, baseY[partyIndex] + 4);
.LINE 165

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-67
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+4
	PUSH	DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+4
	PUSH	BC
	LD	IY,(IX+-9)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  166				sprintf(str, "Lv%u", currentSave.party[partyIndex].level);
.LINE 166

	LD	IY,(IX+-9)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__24
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  167				gfx_PrintStringXY(str, baseX[partyIndex] + 92, baseY[partyIndex] + 4);
.LINE 167

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-67
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+4
	PUSH	DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+92
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  168	
;  169				if (currentSave.party[partyIndex].currentstatus > 0) {
.LINE 169

	LD	IY,(IX+-9)
	XOR	A,A
	CP	A,(IY+15)
	JR	NC,L_34
;  170					gfx_TransparentSprite_NoClip(statusIcons[currentSave.party[partyIndex].currentstatus - 1], baseX[partyIndex] + 7, baseY[partyIndex] + 14);
.LINE 170

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-67
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+14
	LD	C,L
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+7
	PUSH	BC
	LD	IY,(IX+-9)
	LD	A,(IY+15)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_statusIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  171				}
L_34:
.LINE 171

;  172				healthRatio = (currentSave.party[partyIndex].currenthealth * 78) / stats_CalculateStats(currentSave.party[partyIndex]).health;
.LINE 172

	LD	BC,(IX+-15)
	LD	HL,(IX+-12)
	ADD	HL,BC
	LD	(IX+-70),HL
	LD	IY,(IX+-70)
	LD	BC,(IY+13)
	CALL	__stoiu
	LD	A,78
	CALL	__imul_b
	LD	(IX+-103),HL
	LD	HL,(IX+-70)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-82
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	HL,(IX+-103)
	CALL	__idivs
	LD	(IX+-28),HL
;  173				if (healthRatio > 34) {
.LINE 173

	LD	BC,HL
	LD	HL,34
	OR	A,A
	SBC	HL,BC
	JP	P,L_38
;  174					gfx_SetColor(colors[8]);
.LINE 174

	LD	HL,_colors+8
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  175				}
;  176				else if (healthRatio > 14) {
.LINE 176

	JR	L_39
L_38:
	LD	BC,(IX+-28)
	LD	HL,14
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_36
;  177					gfx_SetColor(colors[9]);
.LINE 177

	LD	HL,_colors+9
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  178				}
;  179				else {
.LINE 179

	JR	L_39
L_36:
;  180					gfx_SetColor(colors[10]);
.LINE 180

	LD	HL,_colors+10
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  181				}
L_39:
.LINE 181

;  182				gfx_FillRectangle(baseX[partyIndex] + 47, baseY[partyIndex] + 16, healthRatio, 4);
.LINE 182

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,4
	PUSH	DE
	LD	DE,(IX+-28)
	PUSH	DE
	LD	DE,BC
	LEA	HL,IX+-67
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+16
	PUSH	DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+47
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  183	
;  184				sprintf(str, "%u/%u", currentSave.party[partyIndex].currenthealth, stats_CalculateStats(currentSave.party[partyIndex]).health);
.LINE 184

	LD	BC,(IX+-15)
	LD	HL,(IX+-12)
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-94
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+-15)
	LD	HL,(IX+-12)
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+13)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__28
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  185				gfx_PrintStringXY(str, baseX[partyIndex] + 32, baseY[partyIndex] + 24);
.LINE 185

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	DE,BC
	LEA	HL,IX+-67
	ADD	HL,DE
	LD	IY,(HL)
	LEA	DE,IY+24
	PUSH	DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+32
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  186			}
;  187		}
L_42:
.LINE 187

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
L_43:
	LD	BC,6
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_41
;  188		gfx_PrintStringXY("Select a pokemon", 30, 190);
.LINE 188

	LD	BC,190
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__30
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  189		if (pressEnter) {
.LINE 189

	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_46
;  190			gfx_PrintStringXY("Press Enter to move pokemon", 30, 205);
.LINE 190

	LD	BC,205
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__32
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  191		}
L_46:
.LINE 191

;  192	
;  193		gfx_SetDrawScreen();
.LINE 193

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  194	
;  195		gfx_Blit(gfx_buffer);
.LINE 195

	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  196		gfx_TransparentSprite_NoClip(menucursor, baseX[menuState] - 15, baseY[menuState] + 8);
.LINE 196

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-67
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+8
	LD	C,L
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+-15
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  197	
;  198		
;  199	
;  200	
;  201		Wait(20);
.LINE 201

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  202		kb_Scan();
.LINE 202

	CALL	_kb_Scan
;  203	
;  204		while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
.LINE 204

	JR	L_48
L_49:
	CALL	_kb_Scan
L_48:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_49
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_49
;  205		while (!(((kb_Data[1] & kb_2nd) && currentSave.party[menuState].id != 0) || (kb_Data[6] & kb_Clear))) {
.LINE 205

	JR	L_77
L_78:
;  206			kb_Scan();
.LINE 206

	CALL	_kb_Scan
;  207			if ((kb_Data[6] & kb_Enter) && pressEnter) {
.LINE 207

	LD	A,(16056348)
	AND	A,1
	JR	Z,L_71
	LD	A,(IX+6)
	OR	A,A
	JR	Z,L_71
;  208				tempcharacter = currentSave.party[menuState];
.LINE 208

	LD	BC,_currentSave+10
	LD	(IX+-18),BC
	LD	(IX+-31),BC
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-18)
	ADD	HL,BC
	LD	DE,_tempcharacter
	LD	BC,34
	LDIR	
;  209				for (partyIndex = menuState; partyIndex > 0; partyIndex--) {
.LINE 209

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	JR	L_56
L_54:
;  210					currentSave.party[partyIndex] = currentSave.party[partyIndex - 1];
.LINE 210

	LD	BC,(IX+-18)
	LD	(IX+-31),BC
	LD	HL,(IX+-6)
	LD	(IX+-100),HL	; spill
	DEC	HL
	LD	(IX+-100),HL	; spill
	LD	HL,34
	LD	(IX+-97),HL	; spill
	LD	HL,(IX+-100)	; unspill
	LD	BC,HL
	LD	HL,(IX+-97)	; unspill
	CALL	__imulu
	LD	BC,(IX+-18)
	ADD	HL,BC
	LD	BC,HL
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	DE,(IX+-18)
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,34
	LDIR	
	LD	HL,(IX+-100)	; unspill
	LD	(IX+-6),HL
;  211				}
L_56:
.LINE 211

	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	M,L_54
;  212				currentSave.party[0] = tempcharacter;
.LINE 212

	LD	DE,(IX+-31)
	LD	HL,_tempcharacter
	LD	BC,34
	LDIR	
;  213				goto redraw_PokemonMenu;
.LINE 213

	JR	L_31
;  214			}
L_71:
.LINE 214

;  215			if (kb_Data[7] & kb_Down) {
.LINE 215

	LD	A,(16056350)
	AND	A,1
	LD	(IX+-19),A
	OR	A,A
	JR	Z,L_70
;  216				menuState+=2;
.LINE 216

	LD	IY,(IX+-3)
	LEA	IY,IY+2
	LD	(IX+-3),IY
;  217				if (menuState == 6 || menuState == 7) {
.LINE 217

	LD	BC,6
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_60
	LD	BC,7
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
L_60:
;  218					menuState -= 6;
.LINE 218

	LD	IY,(IX+-3)
	LEA	IY,IY+-6
	LD	(IX+-3),IY
;  219				}
;  220			}
;  221			else if (kb_Data[7] & kb_Up) {
.LINE 221

	JR	L_76
L_70:
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_68
;  222				menuState-=2;
.LINE 222

	LD	IY,(IX+-3)
	LEA	IY,IY+-2
	LD	(IX+-3),IY
;  223				if (menuState == -1 || menuState == -2) {
.LINE 223

	LD	BC,16777215
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_62
	LD	BC,16777214
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_76
L_62:
;  224					menuState += 6;
.LINE 224

	LD	IY,(IX+-3)
	LEA	IY,IY+6
	LD	(IX+-3),IY
;  225				}
;  226			}
;  227			else if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) {
.LINE 227

	JR	L_76
L_68:
	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_66
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_76
L_66:
;  228				if (menuState % 2 == 0) {
.LINE 228

	LD	BC,2
	LD	HL,(IX+-3)
	CALL	__irems
	CALL	__icmpzero
	JR	NZ,L_65
;  229					menuState += 1;
.LINE 229

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  230				}
;  231				else {
.LINE 231

	JR	L_76
L_65:
;  232					menuState -= 1;
.LINE 232

	LD	BC,(IX+-3)
	DEC	BC
	LD	(IX+-3),BC
;  233				}
;  234			}
L_76:
.LINE 234

;  235			if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[7] & kb_Down) || (kb_Data[7] & kb_Up)) {
.LINE 235

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_75
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_75
	LD	A,(IX+-19)
	OR	A,A
	JR	NZ,L_75
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_77
L_75:
;  236				gfx_Blit(gfx_buffer);
.LINE 236

	LD	BC,1
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  237				gfx_TransparentSprite_NoClip(menucursor, baseX[menuState] - 15, baseY[menuState] + 8);
.LINE 237

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	BC,DE
	LEA	HL,IX+-67
	ADD	HL,BC
	LD	IY,(HL)
	LEA	HL,IY+8
	LD	C,L
	LD	B,0
	PUSH	BC
	LD	BC,DE
	LEA	HL,IX+-49
	ADD	HL,BC
	LD	IY,(HL)
	LEA	BC,IY+-15
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  238				Wait(20);
.LINE 238

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  239			}
;  240		}
L_77:
.LINE 240

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_51
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	OR	A,A
	JR	NZ,L_80
L_51:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_78
L_80:
;  241		free(backgroundSprite);
.LINE 241

	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_free
	POP	BC
;  242		free(pokemonSprite);
.LINE 242

	LD	BC,(IX+-25)
	PUSH	BC
	CALL	_free
	POP	BC
;  243		FreeIcons();
.LINE 243

	CALL	_FreeIcons
;  244		gfx_SetDrawBuffer();
.LINE 244

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  245		if (kb_Data[6] & kb_Clear) {
.LINE 245

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_82
;  246			return 0;
.LINE 246

	OR	A,A
	SBC	HL,HL
	JR	L_83
;  247		}
L_82:
.LINE 247

;  248		return menuState + 1;
.LINE 248

	LD	HL,(IX+-3)
	INC	HL
;  249	}
L_83:
.LINE 249

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_PokemonMenu ***************************
;Name                         Addr/Register   Size   Type
;_FreeIcons                          IMPORT  -----   function
;_free                               IMPORT  -----   function
;_tempcharacter                      STATIC     34   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menucursor_data                    IMPORT    262   variable
;_gfx_Blit                           IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_stats_CalculateStats               IMPORT  -----   function
;_statusIcons                        IMPORT     15   variable
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_text_DrawTextBox                   IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_FillScreen                     IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_MallocIcons                        IMPORT  -----   function
;_PKMNSD5                            IMPORT    102   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_1temp30                            STATIC     18   variable
;_0temp29                            STATIC     18   variable
;baseY                                IX-67     18   variable
;baseX                                IX-49     18   variable
;G_18                                 IX-31      3   variable
;healthRatio                          IX-28      3   variable
;pokemonSprite                        IX-25      3   variable
;backgroundSprite                     IX-22      3   variable
;G_19                                 IX-19      1   variable
;G_17                                 IX-18      3   variable
;G_14                                 IX-15      3   variable
;G_13                                 IX-12      3   variable
;G_5                                   IX-9      3   variable
;partyIndex                            IX-6      3   variable
;menuState                             IX-3      3   variable
;pressEnter                            IX+6      1   parameter


; Stack Frame Size: 112 (bytes)
;       Spill Code: -1 (instruction)


.ENDFUNC "menu_PokemonMenu",249,"_menu_PokemonMenu"
	SEGMENT STRSECT
L__24:
	DB	"Lv%u"
	DB	0
L__28:
	DB	"%u/%u"
	DB	0
L__30:
	DB	"Select a pokemon"
	DB	0
L__32:
	DB	"Press Enter to move pokemon"
	DB	0
	SEGMENT TEXT
_0temp29:
	DW	20
	DB	0
	DW	175
	DB	0
	DW	20
	DB	0
	DW	175
	DB	0
	DW	20
	DB	0
	DW	175
	DB	0
_1temp30:
	DW	20
	DB	0
	DW	20
	DB	0
	DW	70
	DB	0
	DW	70
	DB	0
	DW	120
	DB	0
	DW	120
	DB	0
	SEGMENT CODE
;  250	void menu_PokemonDetails(int pokemonIndex) {
_menu_PokemonDetails:
.DEFINE "_menu_PokemonDetails"

.VALUE _menu_PokemonDetails

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "menu_PokemonDetails",250,"_menu_PokemonDetails"

.LINE 250

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE 6

.TYPE 4

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "moveIndex"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

.DEFINE "page"

.CLASS 65

.VALUE -21

.TYPE 4

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -45

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "pokemonSprite"

.CLASS 65

.VALUE -51

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "tempMove"

.CLASS 65

.VALUE -81

.TYPE 4

.ENDEF

.DEFINE "description"

.CLASS 65

.VALUE -100

.DIM 19

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-241
	ADD	HL,SP
	LD	SP,HL
;  251		int page, menuState, tempMove, moveIndex;
;  252		gfx_sprite_t *backgroundSprite;
;  253	
;  254		backgroundSprite = gfx_MallocSprite(160, 120);
.LINE 254

	LD	BC,_malloc
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-45),HL
;  255		MallocIcons();
.LINE 255

	CALL	_MallocIcons
;  256	
;  257		menu_Setup();
.LINE 257

	CALL	_menu_Setup
;  258	
;  259		page = 1;
.LINE 259

	LD	BC,1
	LD	(IX+-21),BC
;  260		menuState = 0;
.LINE 260

	LD	BC,0
	LD	(IX+-6),BC
;  261		while (page != 0) {
.LINE 261

	JR	L_150
L_151:
;  262			Wait(20);
.LINE 262

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  263			kb_Scan();
.LINE 263

	CALL	_kb_Scan
;  264			if (page == 1) {
.LINE 264

	LD	BC,1
	LD	HL,(IX+-21)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_119
;  265				gfx_sprite_t *pokemonSprite;
;  266				zx7_Decompress(backgroundSprite, infoscreen1_compressed);
.LINE 266

	LD	HL,_PKMNSD5+84
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  267				gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 267

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  268	
;  269	
;  270				gfx_SetTextScale(2, 2);
.LINE 270

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  271	
;  272	
;  273				
;  274				gfx_PrintStringXY(data_pokemon[currentSave.party[pokemonIndex].id].name, 4, 32);
.LINE 274

	LD	BC,_currentSave+10
	LD	(IX+-27),BC
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-30),HL
	LD	BC,(IX+-27)
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	BC,32
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  275				pokemonSprite = gfx_MallocSprite(56, 56);
.LINE 275

	LD	BC,_malloc
	PUSH	BC
	LD	BC,56
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-51),HL
;  276				if (currentSave.party[pokemonIndex].id < 80) {
.LINE 276

	LD	IY,(IX+-3)
	LD	A,(IY+0)
	CP	A,80
	JR	NC,L_85
;  277					zx7_Decompress(pokemonSprite, PKMNSD0[currentSave.party[pokemonIndex].id]);
.LINE 277

	LD	BC,(IX+-3)
	LD	(IX+-72),BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-51)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  278				}
;  279				else {
.LINE 279

	JR	L_86
L_85:
;  280					zx7_Decompress(pokemonSprite, PKMNSD1[currentSave.party[pokemonIndex].id - 80]);
.LINE 280

	LD	BC,(IX+-3)
	LD	(IX+-72),BC
	LD	IY,(IX+-3)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-51)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  281				}
L_86:
.LINE 281

;  282				gfx_ScaledTransparentSprite_NoClip(pokemonSprite, 26, 52, 2, 2);
.LINE 282

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,52
	PUSH	BC
	LD	BC,26
	PUSH	BC
	LD	BC,(IX+-51)
	PUSH	BC
	CALL	_gfx_ScaledTransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  283				free(pokemonSprite);
.LINE 283

	LD	BC,(IX+-51)
	PUSH	BC
	CALL	_free
	POP	BC
;  284	
;  285				sprintf(str, "%u/%u", currentSave.party[pokemonIndex].currenthealth, stats_CalculateStats(currentSave.party[pokemonIndex]).health);
.LINE 285

	LD	BC,(IX+-30)
	LD	HL,(IX+-27)
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-112
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+-30)
	LD	HL,(IX+-27)
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+13)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__58
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  286				gfx_PrintStringXY(str, 208, 38);
.LINE 286

	LD	BC,38
	PUSH	BC
	LD	BC,208
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  287				sprintf(str, "%u", stats_CalculateStats(currentSave.party[pokemonIndex]).attack);
.LINE 287

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-124
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	INC	HL
	INC	HL
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__59
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  288				gfx_PrintStringXY(str, 228, 62);
.LINE 288

	LD	BC,62
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  289				sprintf(str, "%u", stats_CalculateStats(currentSave.party[pokemonIndex]).defence);
.LINE 289

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	HL,IX
	LD	BC,-136
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+4
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__60
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  290				gfx_PrintStringXY(str, 228, 86);
.LINE 290

	LD	BC,86
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  291				sprintf(str, "%u", stats_CalculateStats(currentSave.party[pokemonIndex]).specialattack);
.LINE 291

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	HL,IX
	LD	BC,-148
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+6
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__61
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  292				gfx_PrintStringXY(str, 228, 110);
.LINE 292

	LD	BC,110
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  293				sprintf(str, "%u", stats_CalculateStats(currentSave.party[pokemonIndex]).specialdefence);
.LINE 293

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	HL,IX
	LD	BC,-160
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+8
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__62
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  294				gfx_PrintStringXY(str, 228, 134);
.LINE 294

	LD	BC,134
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  295				sprintf(str, "%u", stats_CalculateStats(currentSave.party[pokemonIndex]).speed);
.LINE 295

	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	LD	HL,IX
	LD	BC,-172
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LEA	HL,IY+10
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__63
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  296				gfx_PrintStringXY(str, 228, 158);
.LINE 296

	LD	BC,158
	PUSH	BC
	LD	BC,228
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  297	
;  298				sprintf(str, "%u", currentSave.party[pokemonIndex].level);
.LINE 298

	LD	BC,(IX+-72)
	LD	(IX+-33),BC
	LD	IY,(IX+-33)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  299				gfx_PrintStringXY(str, 64, 186);
.LINE 299

	LD	BC,186
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  300				
;  301				gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[currentSave.party[pokemonIndex].id].element1 - 1], 218, 187);
.LINE 301

	LD	BC,187
	PUSH	BC
	LD	BC,218
	PUSH	BC
	LD	IY,(IX+-33)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  302				if (data_pokemon[currentSave.party[pokemonIndex].id].element2 != 0) {
.LINE 302

	LD	IY,(IX+-33)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	OR	A,A
	JR	Z,L_88
;  303					gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[currentSave.party[pokemonIndex].id].element2 - 1], 254, 187);
.LINE 303

	LD	BC,187
	PUSH	BC
	LD	BC,254
	PUSH	BC
	LD	IY,(IX+-33)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  304				}
L_88:
.LINE 304

;  305				sprintf(str, "%i/%i", currentSave.party[pokemonIndex].xp, xpPerLevel[data_pokemon[currentSave.party[pokemonIndex].id].xptype][currentSave.party[pokemonIndex].level + 1]);
.LINE 305

	LD	BC,(IX+-30)
	LD	HL,(IX+-27)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-50),HL
	LD	BC,(IY+-50)
	LD	(IY+-47),BC
	LD	IY,(IY+-47)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+49)
	UEXT	HL
	LD	L,A
	LD	BC,303
	CALL	__imulu
	LD	BC,_xpPerLevel
	ADD	HL,BC
	LD	BC,HL
	LEA	IY,IX+-128
	LD	IY,(IY+-47)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	INC	HL
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LEA	IY,IX+-128
	LD	IY,(IY+-47)
	LD	BC,(IY+10)
	PUSH	BC
	LD	BC,L__66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  306				gfx_PrintStringXY(str, 64, 210);
.LINE 306

	LD	BC,210
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  307	
;  308				gfx_SetTextScale(1, 1);
.LINE 308

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  309	
;  310				gfx_SwapDraw();
.LINE 310

	CALL	_gfx_SwapDraw
;  311				while (!((kb_Data[7] & kb_Right) || (kb_Data[6] & kb_Clear))) {
.LINE 311

	JR	L_90
L_91:
;  312					kb_Scan();
.LINE 312

	CALL	_kb_Scan
;  313				}
L_90:
.LINE 313

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_121
	JR	L_91
;  314			}
;  315			else if (page == 2) {
L_119:
.LINE 315

	LD	BC,2
	LD	HL,(IX+-21)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_121
;  316				char description[19] = { 0 };
.LINE 316

	LEA	DE,IX+-100
	LD	HL,_2temp92
	LD	BC,19
	LDIR	
;  317				zx7_Decompress(backgroundSprite, infoscreen2_compressed);
.LINE 317

	LD	HL,_PKMNSD5+87
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  318				gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 318

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  319	
;  320				gfx_SetTextScale(2, 2);
.LINE 320

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  321	
;  322				gfx_PrintStringXY(data_pokemon[currentSave.party[pokemonIndex].id].name, 4, 32);
.LINE 322

	LD	BC,_currentSave+10
	LD	(IX+-60),BC
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-57),HL
	LD	BC,(IX+-60)
	ADD	HL,BC
	LD	(IX+-12),HL
	LD	(IX+-69),HL
	LD	BC,32
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	IY,(IX+-12)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  323				gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[currentSave.party[pokemonIndex].id].element1 - 1], 164, 34);
.LINE 323

	LD	BC,34
	PUSH	BC
	LD	BC,164
	PUSH	BC
	LD	IY,(IX+-12)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  324				if (data_pokemon[currentSave.party[pokemonIndex].id].element2 != 0) {
.LINE 324

	LD	BC,(IX+-12)
	LD	(IX+-48),BC
	LD	BC,(IX+-12)
	LD	(IX+-24),BC
	LD	IY,(IX+-12)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	OR	A,A
	JR	Z,L_94
;  325					gfx_TransparentSprite_NoClip(typeIcons[data_pokemon[currentSave.party[pokemonIndex].id].element2 - 1], 200, 34);
.LINE 325

	LD	BC,(IX+-12)
	LD	(IX+-48),BC
	LD	BC,(IX+-12)
	LD	(IX+-24),BC
	LD	BC,34
	PUSH	BC
	LD	BC,200
	PUSH	BC
	LD	IY,(IX+-12)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  326				}
L_94:
.LINE 326

;  327	
;  328				gfx_TransparentSprite_NoClip(menucursor, 8, 56 + 24 * menuState);
.LINE 328

	LD	B,(IX+-6)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,56
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,8
	PUSH	BC
	LD	BC,_menucursor_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  329				for (moveIndex = 0; moveIndex < 4; moveIndex++) {
.LINE 329

	LD	BC,0
	LD	(IX+-9),BC
	JR	L_103
L_101:
;  330					if (currentSave.party[pokemonIndex].moves[moveIndex] > 0) {
.LINE 330

	LD	BC,(IX+-48)
	LD	(IX+-24),BC
	LD	BC,(IX+-9)
	LD	IY,(IX+-24)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	(IX+-54),HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_102
;  331						gfx_PrintStringXY(data_moves[currentSave.party[pokemonIndex].moves[moveIndex]].name, 30, 58 + 24 * moveIndex);
.LINE 331

	LD	HL,(IX+-54)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-63),HL
	LD	HL,(IX+-9)
	LD	A,24
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+58
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	IY,(IX+-63)
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  332						gfx_TransparentSprite_NoClip(typeIcons[data_moves[currentSave.party[pokemonIndex].moves[moveIndex]].element - 1], 242, 60 + 24 * moveIndex);
.LINE 332

	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,60
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,242
	PUSH	BC
	LD	IY,(IX+-63)
	LD	A,(IY+14)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_typeIcons
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  333						if(data_moves[currentSave.party[pokemonIndex].moves[moveIndex]].type == 0)
.LINE 333

	LD	BC,(IX+-69)
	LD	(IX+-15),BC
	LD	(IX+-48),BC
	LD	BC,(IX+-15)
	LD	(IX+-24),BC
	LD	IY,(IX+-15)
	LD	BC,(IX+-9)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	OR	A,A
	JR	NZ,L_99
;  334							gfx_TransparentSprite_NoClip(categoryIcons[0], 280, 59 + 24 * moveIndex);
.LINE 334

	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(_categoryIcons)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  335						else if (data_moves[currentSave.party[pokemonIndex].moves[moveIndex]].type == 1) {
.LINE 335

	JR	L_102
L_99:
	LD	BC,(IX+-15)
	LD	(IX+-15),BC
	LD	(IX+-69),BC
	LD	BC,(IX+-15)
	LD	(IX+-48),BC
	LD	BC,(IX+-15)
	LD	(IX+-24),BC
	LD	IY,(IX+-15)
	LD	BC,(IX+-9)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+15)
	CP	A,1
	JR	NZ,L_97
;  336							gfx_TransparentSprite_NoClip(categoryIcons[1], 280, 59 + 24 * moveIndex);
.LINE 336

	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	HL,_categoryIcons+3
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  337						}
;  338						else {
.LINE 338

	JR	L_102
L_97:
;  339							gfx_TransparentSprite_NoClip(categoryIcons[2], 280, 59 + 24 * moveIndex);
.LINE 339

	LD	B,(IX+-9)
	LD	C,24
	MLT	BC
	LD	A,C
	ADD	A,59
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	HL,_categoryIcons+6
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  340						}
;  341					}
;  342				}
L_102:
.LINE 342

	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
L_103:
	LD	BC,4
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	JP	M,L_101
;  343	
;  344				if (currentSave.party[pokemonIndex].moves[menuState] != 0) {
.LINE 344

	LD	BC,(IX+-6)
	LD	IY,(IX+-24)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	(IX+-18),HL
	LD	(IX+-66),HL
	LD	HL,(IX+-18)
	LD	A,(HL)
	OR	A,A
	JR	Z,L_106
;  345					gfx_SetTextScale(1, 1);
.LINE 345

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  346					strncpy(description, data_moveDescriptions[currentSave.party[pokemonIndex].moves[menuState] - 1], 18);
.LINE 346

	LD	BC,18
	PUSH	BC
	LD	HL,(IX+-18)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	PUSH	HL
	PEA	IX+-100
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  347					gfx_PrintStringXY(description, 170, 185);
.LINE 347

	LD	BC,185
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-100
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  348					strncpy(description, data_moveDescriptions[currentSave.party[pokemonIndex].moves[menuState] - 1] + 18, 18);
.LINE 348

	LD	BC,18
	PUSH	BC
	LD	HL,(IX+-18)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+18
	PUSH	BC
	PEA	IX+-100
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  349					gfx_PrintStringXY(description, 170, 194);
.LINE 349

	LD	BC,194
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-100
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  350					strncpy(description, data_moveDescriptions[currentSave.party[pokemonIndex].moves[menuState] - 1] + 36, 18);
.LINE 350

	LD	BC,18
	PUSH	BC
	LD	HL,(IX+-18)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+36
	PUSH	BC
	PEA	IX+-100
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  351					gfx_PrintStringXY(description, 170, 203);
.LINE 351

	LD	BC,203
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-100
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  352					strncpy(description, data_moveDescriptions[currentSave.party[pokemonIndex].moves[menuState] - 1] + 54, 18);
.LINE 352

	LD	BC,18
	PUSH	BC
	LD	HL,(IX+-18)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+54
	PUSH	BC
	PEA	IX+-100
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  353					gfx_PrintStringXY(description, 170, 212);
.LINE 353

	LD	BC,212
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-100
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  354					strncpy(description, data_moveDescriptions[currentSave.party[pokemonIndex].moves[menuState] - 1]+72, 6);
.LINE 354

	LD	BC,(IX+-18)
	LD	(IX+-66),BC
	LD	BC,6
	PUSH	BC
	LD	HL,(IX+-18)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	DEC	HL
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+72
	PUSH	BC
	PEA	IX+-100
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  355					gfx_PrintStringXY(description, 170, 221);
.LINE 355

	LD	BC,221
	PUSH	BC
	LD	BC,170
	PUSH	BC
	PEA	IX+-100
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  356					gfx_SetTextScale(2, 2);
.LINE 356

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  357				}
L_106:
.LINE 357

;  358	
;  359				sprintf(str, "%u", data_moves[currentSave.party[pokemonIndex].moves[menuState]].power);
.LINE 359

	LD	HL,(IX+-66)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-36),HL
	LD	IY,(IX+-36)
	LD	A,(IY+16)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__76
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  360				if (data_moves[currentSave.party[pokemonIndex].moves[menuState]].power < 5) {
.LINE 360

	LD	IY,(IX+-36)
	LD	A,(IY+16)
	CP	A,5
	JR	NC,L_108
;  361					sprintf(str, "-");
.LINE 361

	LD	BC,L__78
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  362				}
L_108:
.LINE 362

;  363				gfx_PrintStringXY(str, 66, 168);
.LINE 363

	LD	BC,168
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  364				sprintf(str, "%u", data_moves[currentSave.party[pokemonIndex].moves[menuState]].accuracy);
.LINE 364

	LD	IY,(IX+-36)
	LD	A,(IY+17)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__79
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  365				gfx_PrintStringXY(str, 66, 194);
.LINE 365

	LD	BC,194
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  366				sprintf(str, "%u/%u", currentSave.party[pokemonIndex].pp[menuState], data_moves[currentSave.party[pokemonIndex].moves[menuState]].uses);
.LINE 366

	LD	BC,(IX+-57)
	LD	HL,(IX+-60)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-56),HL
	LD	BC,(IY+-56)
	LD	(IY+-53),BC
	LD	IY,(IY+-53)
	LD	BC,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+18)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LEA	IY,IX+-128
	LD	IY,(IY+-53)
	LD	BC,(IX+-6)
	LEA	HL,IY+5
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__80
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  367				gfx_PrintStringXY(str, 66, 216);
.LINE 367

	LD	BC,216
	PUSH	BC
	LD	BC,66
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  368	
;  369				gfx_SetTextScale(1, 1);
.LINE 369

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  370	
;  371	
;  372				gfx_SwapDraw();
.LINE 372

	CALL	_gfx_SwapDraw
;  373				while (!((kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down) || (kb_Data[6] & kb_Enter) || (kb_Data[6] & kb_Sub) || (kb_Data[6] & kb_Add))) {
.LINE 373

	JR	L_115
L_116:
;  374					kb_Scan();
.LINE 374

	CALL	_kb_Scan
;  375				}
L_115:
.LINE 375

	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_121
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_121
	LD	A,(16056350)
	AND	A,1
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,1
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,4
	JR	NZ,L_121
	LD	A,(16056348)
	AND	A,2
	JR	Z,L_116
;  376			}
L_121:
.LINE 376

;  377			if (kb_Data[7] & kb_Right) {
.LINE 377

	LD	A,(16056350)
	AND	A,4
	JR	Z,L_123
;  378				page = 2;
.LINE 378

	LD	BC,2
	LD	(IX+-21),BC
;  379			}
L_123:
.LINE 379

;  380			if (kb_Data[7] & kb_Left) {
.LINE 380

	LD	A,(16056350)
	AND	A,2
	JR	Z,L_127
;  381				page = 1;
.LINE 381

	LD	BC,1
	LD	(IX+-21),BC
;  382			}
L_127:
.LINE 382

;  383			if (kb_Data[7] & kb_Up) {
.LINE 383

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_131
;  384				if (menuState > 0) {
.LINE 384

	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_131
;  385					menuState--;
.LINE 385

	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  386				}
;  387			}
L_131:
.LINE 387

;  388			if (kb_Data[7] & kb_Down) {
.LINE 388

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_139
;  389				if (menuState < 3) {
.LINE 389

	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JP	P,L_139
;  390					menuState++;
.LINE 390

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  391				}
;  392			}
L_139:
.LINE 392

;  393			if ((kb_Data[6] & kb_Sub) || (kb_Data[6] & kb_Add) && page == 2) {
.LINE 393

	LD	A,(16056348)
	AND	A,4
	JR	NZ,L_138
	LD	A,(16056348)
	AND	A,2
	JR	Z,L_147
	LD	BC,2
	LD	HL,(IX+-21)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_147
L_138:
;  394				if (kb_Data[6] & kb_Add) {
.LINE 394

	LD	A,(16056348)
	AND	A,2
	JR	Z,L_137
;  395					currentSave.party[pokemonIndex].moves[menuState]++;
.LINE 395

	LD	BC,_currentSave+10
	LEA	IY,IX+-128
	LD	(IY+-65),BC
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	BC,HL
	LD	HL,-193
	PUSH	IY
	LD	(IY+-107),BC
	LD	(IY+-110),IX	; unspill
	LD	DE,(IY+-107)
	LD	(IY+-107),DE
	LD	DE,(IY+-110)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-107)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LEA	IY,IX+-128
	LD	(IY+-62),HL
	LD	IY,(IY+-62)
	LD	DE,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,DE
	LEA	IY,IX+-128
	LD	(IY+-59),HL
	PUSH	IY
	LD	(IY+-101),HL
	POP	IY
	LD	HL,(IY+-59)
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-113),HL	; unspill
	LD	HL,(IY+-101)
	POP	IY
	LD	IY,-193
	LD	DE,IX
	ADD	IY,DE
	LD	HL,(IY)
	ADD	HL,BC
	LD	BC,(IX+-6)
	LD	IY,HL
	LEA	HL,IY+1
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-101),HL
	LD	HL,(IY+-113)
	POP	IY
	LD	A,(HL)
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-101)
	POP	IY
	INC	A
	LD	(HL),A
;  396				}
;  397				else {
.LINE 397

	JR	L_147
L_137:
;  398					currentSave.party[pokemonIndex].moves[menuState]--;
.LINE 398

	LD	BC,_currentSave+10
	LEA	IY,IX+-128
	LD	(IY+-74),BC
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	BC,HL
	LD	HL,-202
	PUSH	IY
	LD	(IY+-95),BC
	LD	(IY+-98),IX	; unspill
	LD	DE,(IY+-95)
	LD	(IY+-95),DE
	LD	DE,(IY+-98)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-95)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LEA	IY,IX+-128
	LD	(IY+-71),HL
	LD	IY,(IY+-71)
	LD	DE,(IX+-6)
	LEA	HL,IY+1
	ADD	HL,DE
	LEA	IY,IX+-128
	LD	(IY+-68),HL
	PUSH	IY
	LD	(IY+-101),HL
	POP	IY
	LD	HL,(IY+-68)
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-104),HL	; unspill
	LD	HL,(IY+-101)
	POP	IY
	LD	IY,-202
	LD	DE,IX
	ADD	IY,DE
	LD	HL,(IY)
	ADD	HL,BC
	LD	BC,(IX+-6)
	LD	IY,HL
	LEA	HL,IY+1
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-101),HL
	LD	HL,(IY+-104)
	POP	IY
	LD	A,(HL)
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-101)
	POP	IY
	DEC	A
	LD	(HL),A
;  399				}
;  400			}
L_147:
.LINE 400

;  401			if ((kb_Data[6] & kb_Enter) && page == 2) {
.LINE 401

	LD	A,(16056348)
	AND	A,1
	JR	Z,L_149
	LD	BC,2
	LD	HL,(IX+-21)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_149
;  402				tempMove = currentSave.party[pokemonIndex].moves[menuState];
.LINE 402

	LD	BC,_currentSave+10
	LD	(IX+-42),BC
	LD	HL,(IX+6)
	LD	A,34
	CALL	__imul_b
	LD	(IX+-39),HL
	LD	BC,(IX+-42)
	LD	(IX+-78),BC
	LD	BC,(IX+-39)
	LD	(IX+-75),BC
	LD	BC,(IX+-39)
	LD	HL,(IX+-42)
	ADD	HL,BC
	LD	BC,(IX+-6)
	LD	IY,HL
	LEA	HL,IY+1
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	(IX+-81),HL
;  403				for (moveIndex = menuState; moveIndex > 0; moveIndex--) {
.LINE 403

	LD	BC,(IX+-6)
	LD	(IX+-9),BC
	JR	L_144
L_142:
;  404					currentSave.party[pokemonIndex].moves[moveIndex] = currentSave.party[pokemonIndex].moves[moveIndex - 1];
.LINE 404

	LD	BC,(IX+-42)
	LD	(IX+-78),BC
	LD	BC,(IX+-39)
	LD	(IX+-75),BC
	LD	BC,(IX+-39)
	LD	HL,(IX+-42)
	ADD	HL,BC
	LEA	IY,IX+-128
	LD	(IY+-80),HL
	LD	IY,(IY+-80)
	LEA	BC,IY+1
	LEA	IY,IX+-128
	LD	(IY+-77),BC
	LD	BC,(IX+-9)
	DEC	BC
	LD	HL,-205
	PUSH	IY
	LD	(IY+-83),BC
	LD	(IY+-86),IX	; unspill
	LD	DE,(IY+-83)
	LD	(IY+-83),DE
	LD	DE,(IY+-86)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-83)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LD	IY,HL
	LD	DE,(IX+-9)
	LD	HL,-205
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-89),DE
	LD	(IY+-92),IX	; unspill
	LD	DE,(IY+-89)
	LD	(IY+-89),DE
	LD	DE,(IY+-92)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-89)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LD	A,(IY)
	LD	(HL),A
	LD	(IX+-9),BC
;  405				}
L_144:
.LINE 405

	LD	BC,(IX+-9)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	M,L_142
;  406				currentSave.party[pokemonIndex].moves[0] = tempMove;
.LINE 406

	LD	A,(IX+-81)
	LD	BC,(IX+-75)
	LD	HL,(IX+-78)
	ADD	HL,BC
	LD	IY,HL
	LD	(IY+1),A
;  407				menuState = 0;
.LINE 407

	LD	BC,0
	LD	(IX+-6),BC
;  408			}
L_149:
.LINE 408

;  409			if (kb_Data[6] & kb_Clear) {
.LINE 409

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_150
;  410				page = 0;
.LINE 410

	LD	BC,0
	LD	(IX+-21),BC
;  411			}
;  412		}
L_150:
.LINE 412

	LD	HL,(IX+-21)
	CALL	__icmpzero
	JR	NZ,L_151
;  413		free(backgroundSprite);
.LINE 413

	LD	BC,(IX+-45)
	PUSH	BC
	CALL	_free
	POP	BC
;  414	}
.LINE 414

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_PokemonDetails ***************************
;Name                         Addr/Register   Size   Type
;_data_moveDescriptions              IMPORT  unknown variable
;_strncpy                            IMPORT  -----   function
;_categoryIcons                      IMPORT      9   variable
;_data_moves                         IMPORT  unknown variable
;_menucursor_data                    IMPORT    262   variable
;_2temp92                            STATIC     19   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_xpPerLevel                         IMPORT   1212   variable
;_typeIcons                          IMPORT     51   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_stats_CalculateStats               IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_free                               IMPORT  -----   function
;_gfx_ScaledTransparentSprite_NoClip      IMPORT  -----   function
;_PKMNSD1                            IMPORT    216   variable
;_PKMNSD0                            IMPORT    240   variable
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_gfx_SetTextScale                   IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_PKMNSD5                            IMPORT    102   variable
;_zx7_Decompress                     IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_MallocIcons                        IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;description                         IX-100     19   variable
;tempMove                             IX-81      3   variable
;G_73                                 IX-78      3   variable
;G_74                                 IX-75      3   variable
;G_34                                 IX-72      3   variable
;G_55                                 IX-69      3   variable
;G_64                                 IX-66      3   variable
;G_54                                 IX-63      3   variable
;G_69                                 IX-60      3   variable
;G_70                                 IX-57      3   variable
;G_52                                 IX-54      3   variable
;pokemonSprite                        IX-51      3   variable
;G_50                                 IX-48      3   variable
;backgroundSprite                     IX-45      3   variable
;G_71                                 IX-42      3   variable
;G_72                                 IX-39      3   variable
;G_65                                 IX-36      3   variable
;G_36                                 IX-33      3   variable
;G_27                                 IX-30      3   variable
;G_26                                 IX-27      3   variable
;G_58                                 IX-24      3   variable
;page                                 IX-21      3   variable
;G_59                                 IX-18      3   variable
;G_49                                 IX-15      3   variable
;G_43                                 IX-12      3   variable
;moveIndex                             IX-9      3   variable
;menuState                             IX-6      3   variable
;G_20                                  IX-3      3   variable
;pokemonIndex                          IX+6      3   parameter


; Stack Frame Size: 250 (bytes)
;       Spill Code: -26 (instruction)


.ENDFUNC "menu_PokemonDetails",414,"_menu_PokemonDetails"
	SEGMENT STRSECT
L__58:
	DB	"%u/%u"
	DB	0
L__59:
	DB	"%u"
	DB	0
L__60:
	DB	"%u"
	DB	0
L__61:
	DB	"%u"
	DB	0
L__62:
	DB	"%u"
	DB	0
L__63:
	DB	"%u"
	DB	0
L__64:
	DB	"%u"
	DB	0
L__66:
	DB	"%i/%i"
	DB	0
L__76:
	DB	"%u"
	DB	0
L__78:
	DB	"-"
	DB	0
L__79:
	DB	"%u"
	DB	0
L__80:
	DB	"%u/%u"
	DB	0
	SEGMENT TEXT
_2temp92:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT CODE
;  415	int menu_Items(bool inBattle) {
_menu_Items:
.DEFINE "_menu_Items"

.VALUE _menu_Items

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "menu_Items",415,"_menu_Items"

.LINE 415

.DEFINE "inBattle"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "itemIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "cursorState"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

.DEFINE "page"

.CLASS 65

.VALUE -12

.TYPE 4

.ENDEF

.DEFINE "usableItemCount"

.CLASS 65

.VALUE -15

.TYPE 4

.ENDEF

.DEFINE "usableTMCount"

.CLASS 65

.VALUE -18

.TYPE 4

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -24

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "itemToUse"

.CLASS 65

.VALUE -33

.TYPE 4

.ENDEF

.DEFINE "description"

.CLASS 65

.VALUE -70

.DIM 37

.TYPE 98

.ENDEF

.DEFINE "description"

.CLASS 65

.VALUE -107

.DIM 37

.TYPE 98

.ENDEF

.DEFINE "usableItems"

.CLASS 65

.VALUE -167

.DIM 20

.TYPE 100

.ENDEF

.DEFINE "usableTMs"

.CLASS 65

.VALUE -662

.DIM 165

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-662
	ADD	HL,SP
	LD	SP,HL
;  416		int page, menuState, cursorState, itemIndex, usableItemCount, usableItems[20], usableTMCount, usableTMs[165];
;  417		gfx_sprite_t *backgroundSprite;
;  418	
;  419	
;  420		/* Generate Usable Items List */
;  421		usableItemCount = 0;
.LINE 421

	LD	BC,0
	LD	(IX+-15),BC
;  422		usableTMCount = 0;
.LINE 422

	LD	(IX+-18),BC
;  423		for (itemIndex = 0; itemIndex < 20; itemIndex++) {
.LINE 423

	LD	(IX+-3),BC
	JR	L_159
L_157:
;  424			if (currentSave.playerItems[itemIndex] > 0) {
.LINE 424

	LD	BC,_currentSave+1243
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_158
;  425				usableItems[usableItemCount] = itemIndex;
.LINE 425

	LD	HL,(IX+-15)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-167
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IX+-3)
	LD	(HL),BC
;  426				usableItemCount++;
.LINE 426

	LD	BC,(IX+-15)
	INC	BC
	LD	(IX+-15),BC
;  427			}
;  428		}
L_158:
.LINE 428

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_159:
	LD	BC,20
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_157
;  429		for (itemIndex = 0; itemIndex < 165; itemIndex++) {
.LINE 429

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_165
L_163:
;  430			if (currentSave.playerItems[itemIndex + 20] > 0) {
.LINE 430

	LD	IY,(IX+-3)
	LEA	IY,IY+20
	LD	(IX+-27),IY
	LD	BC,_currentSave+1243
	LD	HL,(IX+-27)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_164
;  431				usableTMs[usableTMCount] = itemIndex + 20;
.LINE 431

	LD	HL,(IX+-18)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-662
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IX+-27)
	LD	(HL),BC
;  432				usableTMCount++;
.LINE 432

	LD	BC,(IX+-18)
	INC	BC
	LD	(IX+-18),BC
;  433			}
;  434		}
L_164:
.LINE 434

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_165:
	LD	BC,165
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_163
;  435		backgroundSprite = gfx_MallocSprite(160, 88);
.LINE 435

	LD	BC,_malloc
	PUSH	BC
	LD	BC,88
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-24),HL
;  436		zx7_Decompress(backgroundSprite, bag_compressed);
.LINE 436

	LD	HL,_PKMNSD5+81
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_zx7_Decompress
	POP	BC
	POP	BC
;  437	
;  438		menu_Setup();
.LINE 438

	CALL	_menu_Setup
;  439	
;  440	
;  441		page = 1;
.LINE 441

	LD	BC,1
	LD	(IX+-12),BC
;  442		menuState = 0;
.LINE 442

	LD	BC,0
	LD	(IX+-6),BC
;  443		cursorState = 0;
.LINE 443

	LD	(IX+-9),BC
;  444		while (page != 0)
.LINE 444

	JR	L_241
L_242:
;  445		{
;  446	
;  447			gfx_FillScreen(colors[1]);
.LINE 447

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  448			text_DrawTextBox();
.LINE 448

	CALL	_text_DrawTextBox
;  449			gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 449

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  450			gfx_TransparentSprite_NoClip(menucursorsmall, 132, 19 + 14 * cursorState);
.LINE 450

	LD	B,(IX+-9)
	LD	C,14
	MLT	BC
	LD	A,C
	ADD	A,19
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,132
	PUSH	BC
	LD	BC,_menucursorsmall_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  451			
;  452			Wait(15);
.LINE 452

	LD	BC,15
	PUSH	BC
	CALL	_Wait
	POP	BC
;  453	
;  454			kb_Scan();
.LINE 454

	CALL	_kb_Scan
;  455			if (page == 1) {
.LINE 455

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_202
;  456				char description[37] = { 0 };
.LINE 456

	LEA	DE,IX+-107
	LD	HL,_3temp168
	LD	BC,37
	LDIR	
;  457				gfx_SetTextScale(2, 2);
.LINE 457

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  458				gfx_PrintStringXY("Items", 12, 19);
.LINE 458

	LD	BC,19
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__109
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  459				gfx_SetTextScale(1, 1);
.LINE 459

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  460				for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < usableItemCount; itemIndex++) {
.LINE 460

	LD	BC,(IX+-6)
	LD	(IX+-3),BC
	JR	L_173
L_171:
;  461					gfx_PrintStringXY(itemNames[usableItems[itemIndex]], 140, 21 + 14 * (itemIndex - menuState));
.LINE 461

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-167
	ADD	HL,DE
	ADD	HL,BC
	LD	HL,(HL)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  462					sprintf(str, "%u", currentSave.playerItems[usableItems[itemIndex]]);
.LINE 462

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-167
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,_currentSave+1243
	LD	HL,(HL)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__110
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  463					gfx_PrintStringXY(str, 274, 21 + 14 * (itemIndex - menuState));
.LINE 463

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,274
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  464				}
L_173:
.LINE 464

	LD	IY,(IX+-6)
	LEA	BC,IY+10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_175
	LD	BC,(IX+-15)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_171
L_175:
;  465	
;  466				if (usableItemCount > 0) {
.LINE 466

	LD	BC,(IX+-15)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_176
;  467					strncpy(description, itemDescriptions[usableItems[menuState + cursorState]], 36);
.LINE 467

	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-167
	ADD	HL,DE
	ADD	HL,BC
	LD	(IX+-30),HL
	LD	BC,36
	PUSH	BC
	LD	HL,(IX+-30)
	LD	HL,(HL)
	LD	A,68
	CALL	__imul_b
	LD	BC,_itemDescriptions
	ADD	HL,BC
	PUSH	HL
	PEA	IX+-107
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  468					gfx_PrintStringXY(description, 14, 185);
.LINE 468

	LD	BC,185
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-107
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  469					strncpy(description, itemDescriptions[usableItems[menuState + cursorState]] + 36, 32);
.LINE 469

	LD	BC,32
	PUSH	BC
	LD	HL,(IX+-30)
	LD	HL,(HL)
	LD	A,68
	CALL	__imul_b
	LD	BC,_itemDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+36
	PUSH	BC
	PEA	IX+-107
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  470					gfx_PrintStringXY(description, 14, 200);
.LINE 470

	LD	BC,200
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-107
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  471				}
L_176:
.LINE 471

;  472	
;  473				gfx_SwapDraw();
.LINE 473

	CALL	_gfx_SwapDraw
;  474				while (!((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
.LINE 474

	JR	L_182
L_183:
;  475					kb_Scan();
.LINE 475

	CALL	_kb_Scan
;  476				}
L_182:
.LINE 476

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_210
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_210
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_210
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_210
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_210
	LD	A,(16056350)
	AND	A,1
	JR	NZ,L_210
	JR	L_183
;  477			}
;  478			else if (page == 2) {
L_202:
.LINE 478

	LD	BC,2
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_210
;  479				char description[37] = { 0 };
.LINE 479

	LEA	DE,IX+-70
	LD	HL,_4temp184
	LD	BC,37
	LDIR	
;  480				gfx_SetTextScale(2, 2);
.LINE 480

	LD	BC,2
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  481				gfx_PrintStringXY("TMs", 12, 19);
.LINE 481

	LD	BC,19
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__121
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  482				gfx_SetTextScale(1, 1);
.LINE 482

	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  483				for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < usableTMCount; itemIndex++) {
.LINE 483

	LD	BC,(IX+-6)
	LD	(IX+-3),BC
	JR	L_189
L_187:
;  484					sprintf(str, "TM%u %s", usableTMs[itemIndex] - 19, data_moves[usableTMs[itemIndex] - 19].name);
.LINE 484

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-662
	ADD	HL,DE
	ADD	HL,BC
	LD	IY,(HL)
	LEA	DE,IY+-19
	LD	HL,21
	LD	BC,DE
	CALL	__imulu
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,DE
	PUSH	BC
	LD	BC,L__122
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  485					gfx_PrintStringXY(str, 140, 21 + 14 * (itemIndex - menuState));
.LINE 485

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+21
	PUSH	BC
	LD	BC,140
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  486				}
L_189:
.LINE 486

	LD	IY,(IX+-6)
	LEA	BC,IY+10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	P,L_191
	LD	BC,(IX+-18)
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_187
L_191:
;  487	
;  488				if (usableTMCount > 0) {
.LINE 488

	LD	BC,(IX+-18)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_192
;  489					strncpy(description, data_moveDescriptions[usableTMs[menuState + cursorState] - 20], 36);
.LINE 489

	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-662
	ADD	HL,DE
	ADD	HL,BC
	LD	(IX+-21),HL
	LD	BC,36
	PUSH	BC
	LD	HL,(IX+-21)
	LD	IY,(HL)
	LEA	HL,IY+-20
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	PUSH	HL
	PEA	IX+-70
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  490					gfx_PrintStringXY(description, 14, 185);
.LINE 490

	LD	BC,185
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-70
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  491					strncpy(description, data_moveDescriptions[usableTMs[menuState + cursorState] - 20] + 36, 36);
.LINE 491

	LD	BC,36
	PUSH	BC
	LD	HL,(IX+-21)
	LD	IY,(HL)
	LEA	HL,IY+-20
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+36
	PUSH	BC
	PEA	IX+-70
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  492					gfx_PrintStringXY(description, 14, 200);
.LINE 492

	LD	BC,200
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-70
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  493					strncpy(description, data_moveDescriptions[usableTMs[menuState + cursorState] - 20] + 72, 6);
.LINE 493

	LD	BC,6
	PUSH	BC
	LD	HL,(IX+-21)
	LD	IY,(HL)
	LEA	HL,IY+-20
	LD	A,78
	CALL	__imul_b
	LD	BC,_data_moveDescriptions
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+72
	PUSH	BC
	PEA	IX+-70
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  494					gfx_PrintStringXY(description, 14, 215);
.LINE 494

	LD	BC,215
	PUSH	BC
	LD	BC,14
	PUSH	BC
	PEA	IX+-70
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  495				}
L_192:
.LINE 495

;  496	
;  497				gfx_SwapDraw();
.LINE 497

	CALL	_gfx_SwapDraw
;  498				while (!((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left) || (kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
.LINE 498

	JR	L_198
L_199:
;  499					kb_Scan();
.LINE 499

	CALL	_kb_Scan
;  500				}
L_198:
.LINE 500

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_210
	LD	A,(16056350)
	AND	A,2
	JR	NZ,L_210
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_210
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_210
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_210
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_199
;  501			}
L_210:
.LINE 501

;  502			if (kb_Data[7] & kb_Up) {
.LINE 502

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_226
;  503				if (menuState > 0 && cursorState <= 2) {
.LINE 503

	LD	BC,(IX+-6)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_208
	LD	BC,(IX+-9)
	LD	HL,2
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_208
;  504					menuState--;
.LINE 504

	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  505				}
;  506				else if(menuState + cursorState > 0) {
.LINE 506

	JR	L_226
L_208:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_226
;  507					cursorState--;
.LINE 507

	LD	BC,(IX+-9)
	DEC	BC
	LD	(IX+-9),BC
;  508				}
;  509			}
L_226:
.LINE 509

;  510			if (kb_Data[7] & kb_Down) {
.LINE 510

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_233
;  511				if (page == 1) {
.LINE 511

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_224
;  512					if (menuState + 10 < usableItemCount && cursorState >= 3) {
.LINE 512

	LD	IY,(IX+-6)
	LEA	HL,IY+10
	LD	BC,(IX+-15)
	OR	A,A
	SBC	HL,BC
	JP	P,L_216
	LD	BC,3
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_216
;  513						menuState++;
.LINE 513

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  514					}
;  515					else if (menuState + cursorState < usableItemCount - 1) {
.LINE 515

	JR	L_233
L_216:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IX+-15)
	DEC	BC
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_233
;  516						cursorState++;
.LINE 516

	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  517					}
;  518				}
;  519				else {
.LINE 519

	JR	L_233
L_224:
;  520					if (menuState + 10 < usableTMCount && cursorState >= 7) {
.LINE 520

	LD	IY,(IX+-6)
	LEA	HL,IY+10
	LD	BC,(IX+-18)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_222
	LD	BC,7
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_222
;  521						menuState++;
.LINE 521

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  522					}
;  523					else if (menuState + cursorState < usableTMCount - 1) {
.LINE 523

	JR	L_233
L_222:
	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,(IX+-18)
	DEC	BC
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_233
;  524						cursorState++;
.LINE 524

	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  525					}
;  526				}
;  527			}
L_233:
.LINE 527

;  528			if (((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) && !inBattle) {
.LINE 528

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_228
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_235
L_228:
	LD	A,(IX+6)
	OR	A,A
	JR	NZ,L_235
;  529				if (page == 1) {
.LINE 529

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_230
;  530					page = 2;
.LINE 530

	LD	BC,2
	LD	(IX+-12),BC
;  531				}
;  532				else {
.LINE 532

	JR	L_231
L_230:
;  533					page = 1;
.LINE 533

	LD	(IX+-12),BC
;  534				}
L_231:
.LINE 534

;  535				menuState = 0;
.LINE 535

	LD	BC,0
	LD	(IX+-6),BC
;  536				cursorState = 0;
.LINE 536

	LD	(IX+-9),BC
;  537			}
L_235:
.LINE 537

;  538			if (kb_Data[6] & kb_Clear) {
.LINE 538

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_240
;  539				page = 0;
.LINE 539

	LD	BC,0
	LD	(IX+-12),BC
;  540			}
L_240:
.LINE 540

;  541			if (kb_Data[1] & kb_2nd) {
.LINE 541

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_241
;  542				int itemToUse;
;  543				if (page == 1) {
.LINE 543

	LD	BC,1
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_237
;  544					itemToUse = usableItems[menuState + cursorState];
.LINE 544

	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-167
	ADD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	LD	(IX+-33),BC
;  545				}
;  546				else {
.LINE 546

	JR	L_238
L_237:
;  547					itemToUse = usableTMs[menuState + cursorState];
.LINE 547

	LD	BC,(IX+-9)
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-662
	ADD	HL,BC
	ADD	HL,DE
	LD	BC,(HL)
	LD	(IX+-33),BC
;  548				}
L_238:
.LINE 548

;  549				free(backgroundSprite);
.LINE 549

	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_free
	POP	BC
;  550				gfx_SetDrawBuffer();
.LINE 550

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  551				return itemToUse;
.LINE 551

	LD	HL,(IX+-33)
	JR	L_244
;  552			}
;  553		}
L_241:
.LINE 553

	LD	HL,(IX+-12)
	CALL	__icmpzero
	JR	NZ,L_242
;  554		free(backgroundSprite);
.LINE 554

	LD	BC,(IX+-24)
	PUSH	BC
	CALL	_free
	POP	BC
;  555		FreeIcons();
.LINE 555

	CALL	_FreeIcons
;  556		gfx_SetDrawBuffer();
.LINE 556

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  557		return -1;
.LINE 557

	LD	HL,16777215
;  558	}
L_244:
.LINE 558

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Items ***************************
;Name                         Addr/Register   Size   Type
;_FreeIcons                          IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_free                               IMPORT  -----   function
;_data_moveDescriptions              IMPORT  unknown variable
;_data_moves                         IMPORT  unknown variable
;_4temp184                           STATIC     37   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_itemDescriptions                   IMPORT   1360   variable
;_strncpy                            IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_itemNames                          IMPORT    320   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_3temp168                           STATIC     37   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_menucursorsmall_data               IMPORT     72   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_text_DrawTextBox                   IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_FillScreen                     IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;_PKMNSD5                            IMPORT    102   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;usableTMs                           IX-662    495   variable
;usableItems                         IX-167     60   variable
;description                         IX-107     37   variable
;description                          IX-70     37   variable
;itemToUse                            IX-33      3   variable
;G_76                                 IX-30      3   variable
;G_75                                 IX-27      3   variable
;backgroundSprite                     IX-24      3   variable
;G_77                                 IX-21      3   variable
;usableTMCount                        IX-18      3   variable
;usableItemCount                      IX-15      3   variable
;page                                 IX-12      3   variable
;cursorState                           IX-9      3   variable
;menuState                             IX-6      3   variable
;itemIndex                             IX-3      3   variable
;inBattle                              IX+6      1   parameter


; Stack Frame Size: 671 (bytes)
;       Spill Code: -26 (instruction)


.ENDFUNC "menu_Items",558,"_menu_Items"
	SEGMENT STRSECT
L__109:
	DB	"Items"
	DB	0
L__110:
	DB	"%u"
	DB	0
L__121:
	DB	"TMs"
	DB	0
L__122:
	DB	"TM%u %s"
	DB	0
	SEGMENT TEXT
_3temp168:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_4temp184:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT CODE
;  559	void menu_Box() {
_menu_Box:
.DEFINE "_menu_Box"

.VALUE _menu_Box

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "menu_Box",559,"_menu_Box"

.LINE 559

.DEFINE "pokemonIndex"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "grabbingPokemon"

.CLASS 65

.VALUE -7

.TYPE 12

.ENDEF

.DEFINE "largeSprite"

.CLASS 65

.VALUE -13

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "backgroundSprite"

.CLASS 65

.VALUE -23

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "oldState"

.CLASS 65

.VALUE -26

.TYPE 4

.ENDEF

.DEFINE "tempSprite"

.CLASS 65

.VALUE -32

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "pokemonSprites"

.CLASS 65

.VALUE -140

.DIM 36

.TAG "NONAME11"

.TYPE 360

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-219
	ADD	HL,SP
	LD	SP,HL
;  560		int pokemonIndex, memIndex, menuState;
;  561		bool grabbingPokemon;
;  562		gfx_sprite_t *tempSprite;
;  563		gfx_sprite_t *backgroundSprite;
;  564		gfx_sprite_t *pokemonSprites[36];
;  565		gfx_sprite_t *largeSprite;
;  566	
;  567		
;  568	
;  569	
;  570		menu_Setup();
.LINE 570

	CALL	_menu_Setup
;  571		gfx_SetTextFGColor(colors[1]);
.LINE 571

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  572	
;  573	
;  574		backgroundSprite = gfx_MallocSprite(160, 120);
.LINE 574

	LD	BC,_malloc
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,160
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-23),HL
;  575		zx7_Decompress(backgroundSprite, pc_compressed);
.LINE 575

	LD	IY,_PKMNSD5
	LEA	HL,IY+90
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-23)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  576		largeSprite = gfx_MallocSprite(56, 56);
.LINE 576

	LD	BC,_malloc
	PUSH	BC
	LD	BC,56
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_AllocSprite
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-13),HL
;  577		for (pokemonIndex = 0; pokemonIndex < 36; pokemonIndex++) {
.LINE 577

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_248
L_246:
;  578			pokemonSprites[pokemonIndex] = gfx_MallocSprite(30, 24);
.LINE 578

	LD	BC,_malloc
	PUSH	BC
	LD	BC,24
	PUSH	BC
	LD	BC,30
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_AllocSprite
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,HL
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-85),DE
	POP	IY
	LD	DE,-140
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-88),DE	; unspill
	LD	DE,(IY+-85)
	LD	(IY+-85),DE
	LD	DE,(IY+-88)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-85)
	POP	IY
	ADD	HL,DE
	LD	(HL),BC
;  579			zx7_Decompress(pokemonSprites[pokemonIndex], PKMNSD6[currentSave.party[pokemonIndex].id]);
.LINE 579

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD6
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-140
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  580		}
L_248:
.LINE 580

	LD	BC,36
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_246
;  581		
;  582	
;  583		if (currentSave.party[pokemonIndex].id < 80) {
.LINE 583

	LD	BC,_currentSave+10
	LD	(IX+-20),BC
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-20)
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	CP	A,80
	JR	NC,L_250
;  584			zx7_Decompress(largeSprite, PKMNSD0[currentSave.party[0].id]);
.LINE 584

	LD	IY,(IX+-20)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  585		}
;  586		else {
.LINE 586

	JR	L_252
L_250:
;  587			zx7_Decompress(largeSprite, PKMNSD1[currentSave.party[0].id - 80]);
.LINE 587

	LD	IY,(IX+-20)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  588		}
L_252:
.LINE 588

;  589	
;  590		menuState = 0;
.LINE 590

	LD	BC,0
	LD	(IX+-6),BC
;  591		grabbingPokemon = false;
.LINE 591

	LD	(IX+-7),0
;  592		
;  593		while (!(kb_Data[6] & kb_Clear)) {
.LINE 593

	JR	L_292
L_293:
;  594			gfx_ScaledSprite_NoClip(backgroundSprite, 0, 0, 2, 2);
.LINE 594

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,(IX+-23)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_ScaledSprite_NoClip
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  595			for (pokemonIndex = 0; pokemonIndex < 36; pokemonIndex++) {
.LINE 595

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_257
L_255:
;  596				if (currentSave.party[pokemonIndex].id != 0) {
.LINE 596

	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_256
;  597					gfx_TransparentSprite_NoClip(pokemonSprites[pokemonIndex], 121 + 32 * (pokemonIndex % 6), 18 + 32 * (pokemonIndex / 6) + 18 * ((pokemonIndex / 6) > 0));
.LINE 597

	LD	BC,6
	LD	HL,(IX+-3)
	CALL	__idivs
	LD	DE,HL
	LD	HL,DE
	LD	B,5
	LD	A,L
	CALL	__bshl
	ADD	A,18
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-26),A
	POP	IY
	LD	BC,DE
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L__157
	LD	A,1
	JR	L__158
L__157:
	XOR	A,A
L__158:
	LD	B,A
	LD	C,18
	MLT	BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	H,(IY+-26)
	POP	IY
	LD	A,H
	ADD	A,C
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,6
	LD	HL,(IX+-3)
	CALL	__irems
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+121
	PUSH	BC
	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-140
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_TransparentSprite_NoClip
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  598				}
;  599			}
L_256:
.LINE 599

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_257:
	LD	BC,36
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_255
;  600			if (grabbingPokemon) {
.LINE 600

	LD	A,(IX+-7)
	OR	A,A
	JR	Z,L_259
;  601				gfx_TransparentSprite_NoClip(closedhand, 127 + 32 * (menuState % 6), 12 + 32 * (menuState / 6) + 18 * ((menuState / 6) > 0));
.LINE 601

	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	DE,HL
	LD	HL,DE
	LD	B,5
	LD	A,L
	CALL	__bshl
	ADD	A,12
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-28),A
	POP	IY
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,DE
	JP	P,L__162
	LD	A,1
	JR	L__163
L__162:
	XOR	A,A
L__163:
	LD	B,A
	LD	C,18
	MLT	BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	H,(IY+-28)
	POP	IY
	LD	A,H
	ADD	A,C
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+127
	PUSH	BC
	LD	BC,_closedhand_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  602			}
;  603			else {
.LINE 603

	JR	L_262
L_259:
;  604				gfx_TransparentSprite_NoClip(openhand, 127 + 32 * (menuState % 6), 2 + 32 * (menuState / 6) + 18 * ((menuState / 6) > 0));
.LINE 604

	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	DE,HL
	LD	HL,DE
	LD	B,5
	LD	A,L
	CALL	__bshl
	INC	A
	INC	A
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-27),A
	POP	IY
	LD	BC,DE
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L__165
	LD	A,1
	JR	L__166
L__165:
	XOR	A,A
L__166:
	LD	B,A
	LD	C,18
	MLT	BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	H,(IY+-27)
	POP	IY
	LD	A,H
	ADD	A,C
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+127
	PUSH	BC
	LD	BC,_openhand_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  605			}
L_262:
.LINE 605

;  606			if (currentSave.party[menuState].id != 0) {
.LINE 606

	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	(IX+-10),HL
	LD	IY,(IX+-10)
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_263
;  607				gfx_TransparentSprite_NoClip(largeSprite, 32, 114);
.LINE 607

	LD	BC,114
	PUSH	BC
	LD	BC,32
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  608				
;  609				gfx_PrintStringXY(data_pokemon[currentSave.party[menuState].id].name, 20, 186);
.LINE 609

	LD	BC,186
	PUSH	BC
	LD	BC,20
	PUSH	BC
	LD	IY,(IX+-10)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  610				sprintf(str, "Level %u", currentSave.party[menuState].level);
.LINE 610

	LD	IY,(IX+-10)
	LD	A,(IY+9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__168
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  611				gfx_PrintStringXY(str, 20, 196);
.LINE 611

	LD	BC,196
	PUSH	BC
	LD	BC,20
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintStringXY
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  612			}
L_263:
.LINE 612

;  613	
;  614			
;  615	
;  616			gfx_SwapDraw();
.LINE 616

	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_SwapDraw
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
;  617	
;  618			Wait(20);
.LINE 618

	LD	BC,20
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_Wait
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
;  619			kb_Scan();
.LINE 619

	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_kb_Scan
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
;  620			/* Wait until a key is pressed */
;  621			while (!((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear) || kb_Data[7])) { kb_Scan(); }
.LINE 621

	JR	L_266
L_267:
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_kb_Scan
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
L_266:
	LD	A,(16056338)
	AND	A,32
	LD	(IX+-14),A
	OR	A,A
	JR	NZ,L_273
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_273
	LD	A,(16056350)
	OR	A,A
	JR	Z,L_267
L_273:
;  622			if (kb_Data[1] & kb_2nd) {
.LINE 622

	LD	A,(IX+-14)
	OR	A,A
	JR	Z,L_291
;  623				grabbingPokemon = !grabbingPokemon;
.LINE 623

	LD	A,(IX+-7)
	OR	A,A
	JR	NZ,L_269
	LD	BC,1
	LD	(IX+-29),BC
	JR	L_270
L_269:
	LD	BC,0
	LD	(IX+-29),BC
L_270:
	LD	A,(IX+-29)
	LD	(IX+-7),A
;  624			}
L_291:
.LINE 624

;  625			if (kb_Data[7]) {
.LINE 625

	LD	A,(16056350)
	OR	A,A
	JR	Z,L_292
;  626				int oldState = menuState;
.LINE 626

	LD	BC,(IX+-6)
	LD	(IX+-26),BC
;  627				if ((kb_Data[7] & kb_Up) && menuState / 6 > 0) {
.LINE 627

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_278
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_278
;  628					menuState -= 6;
.LINE 628

	LD	IY,(IX+-6)
	LEA	IY,IY+-6
	LD	(IX+-6),IY
;  629				}
L_278:
.LINE 629

;  630				if ((kb_Data[7] & kb_Down) && menuState / 6 < 5) {
.LINE 630

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_281
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__idivs
	LD	BC,5
	OR	A,A
	SBC	HL,BC
	JP	P,L_281
;  631					menuState += 6;
.LINE 631

	LD	IY,(IX+-6)
	LEA	IY,IY+6
	LD	(IX+-6),IY
;  632				}
L_281:
.LINE 632

;  633				if ((kb_Data[7] & kb_Left) && menuState % 6 > 0) {
.LINE 633

	LD	A,(16056350)
	AND	A,2
	JR	Z,L_284
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_284
;  634					menuState -= 1;
.LINE 634

	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  635				}
L_284:
.LINE 635

;  636				if ((kb_Data[7] & kb_Right) && menuState % 6 < 5) {
.LINE 636

	LD	A,(16056350)
	AND	A,4
	JR	Z,L_286
	LD	BC,6
	LD	HL,(IX+-6)
	CALL	__irems
	LD	BC,5
	OR	A,A
	SBC	HL,BC
	JP	P,L_286
;  637					menuState += 1;
.LINE 637

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  638				}
L_286:
.LINE 638

;  639	
;  640				if (grabbingPokemon) {
.LINE 640

	LD	A,(IX+-7)
	OR	A,A
	JR	Z,L_289
;  641					tempcharacter = currentSave.party[menuState];
.LINE 641

	LD	BC,_currentSave+10
	LEA	IY,IX+-128
	LD	(IY+-15),BC
	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	PUSH	IY
	LD	(IY+-24),HL
	LD	BC,(IY+-24)
	POP	IY
	LD	HL,-143
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-31),BC
	LD	(IY+-34),IX	; unspill
	LD	DE,(IY+-31)
	LD	(IY+-31),DE
	LD	DE,(IY+-34)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-31)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LD	DE,_tempcharacter
	LD	BC,34
	LDIR	
;  642					currentSave.party[menuState] = currentSave.party[oldState];
.LINE 642

	LD	HL,(IX+-26)
	LD	A,34
	CALL	__imul_b
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-21),HL
	LD	BC,(IY+-21)
	POP	IY
	LD	HL,-143
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-37),BC
	LD	(IY+-40),IX	; unspill
	LD	DE,(IY+-37)
	LD	(IY+-37),DE
	LD	DE,(IY+-40)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-37)
	POP	IY
	LD	HL,(HL)
	ADD	HL,DE
	LD	DE,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-46),DE
	LD	BC,(IY+-24)
	LD	(IY+-49),DE
	LD	(IY+-52),BC	; unspill
	LD	DE,(IY+-49)
	POP	IY
	LD	HL,-143
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-55),DE
	LD	(IY+-58),IX	; unspill
	LD	DE,(IY+-55)
	LD	DE,(IY+-58)
	POP	IY
	ADD	HL,DE
	LD	HL,(HL)
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-52)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-43),HL
	LD	DE,(IY+-46)
	POP	IY
	LD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-43)
	POP	IY
	LD	BC,34
	LDIR	
;  643					currentSave.party[oldState] = tempcharacter;
.LINE 643

	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-21)
	POP	IY
	LD	HL,-143
	LD	DE,IX
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,BC
	LD	DE,HL
	LD	HL,_tempcharacter
	LD	BC,34
	LDIR	
;  644					tempSprite = pokemonSprites[menuState];
.LINE 644

	LD	HL,(IX+-6)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-61),DE
	POP	IY
	LD	BC,-140
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-64),BC	; unspill
	LD	BC,(IY+-61)
	LD	(IY+-61),BC
	LD	BC,(IY+-64)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-61)
	POP	IY
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-32),BC
;  645					pokemonSprites[menuState] = pokemonSprites[oldState];
.LINE 645

	LD	HL,(IX+-26)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-67),BC
	LD	(IY+-70),BC	; unspill
	LD	BC,(IY+-67)
	POP	IY
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-73),BC
	POP	IY
	LD	BC,-140
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-76),BC	; unspill
	LD	BC,(IY+-73)
	LD	(IY+-73),BC
	LD	BC,(IY+-76)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-73)
	LD	(IY+-67),BC
	LD	BC,(IY+-70)
	POP	IY
	ADD	HL,BC
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	BC,(IY+-67)
	POP	IY
	LD	IY,HL
	LD	HL,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-79),DE
	POP	IY
	LD	DE,-140
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-82),DE	; unspill
	LD	DE,(IY+-79)
	LD	(IY+-79),DE
	LD	DE,(IY+-82)
	POP	IY
	ADD	HL,DE
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	DE,(IY+-79)
	POP	IY
	ADD	HL,DE
	LD	DE,(IY)
	LD	(HL),DE
;  646					pokemonSprites[oldState] = tempSprite;
.LINE 646

	LD	HL,IX
	LD	DE,-140
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IX+-32)
	LD	(HL),BC
;  647				}
L_289:
.LINE 647

;  648	
;  649	
;  650				if (currentSave.party[pokemonIndex].id < 80) {
.LINE 650

	LD	BC,_currentSave+10
	LD	(IX+-17),BC
	LD	HL,(IX+-3)
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-17)
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	CP	A,80
	JR	NC,L_288
;  651					zx7_Decompress(largeSprite, PKMNSD0[currentSave.party[menuState].id]);
.LINE 651

	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-17)
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD0
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  652				}
;  653				else {
.LINE 653

	JR	L_292
L_288:
;  654					zx7_Decompress(largeSprite, PKMNSD1[currentSave.party[menuState].id - 80]);
.LINE 654

	LD	HL,(IX+-6)
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-17)
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-80
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,_PKMNSD1
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PUSH	BC
	PUSH	HL
	LD	HL,IY
	LD	BC,-219
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_zx7_Decompress
	PUSH	BC
	LD	BC,-219
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	POP	BC
	POP	BC
	POP	BC
;  655				}
;  656			}
;  657		}
L_292:
.LINE 657

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_293
;  658	
;  659	
;  660		for (pokemonIndex = 0; pokemonIndex < 36; pokemonIndex++) {
.LINE 660

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_297
L_295:
;  661			free(pokemonSprites[pokemonIndex]);
.LINE 661

	LD	HL,(IX+-3)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-140
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  662		}
L_297:
.LINE 662

	LD	BC,36
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_295
;  663		free(largeSprite);
.LINE 663

	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_free
	POP	BC
;  664		free(backgroundSprite);
.LINE 664

	LD	BC,(IX+-23)
	PUSH	BC
	CALL	_free
	POP	BC
;  665	}
.LINE 665

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_Box ***************************
;Name                         Addr/Register   Size   Type
;_free                               IMPORT  -----   function
;_tempcharacter                      STATIC     34   variable
;_kb_Scan                            IMPORT  -----   function
;_Wait                               IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_sprintf                            IMPORT  -----   function
;_data_pokemon                       IMPORT  unknown variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_openhand_data                      IMPORT    362   variable
;_closedhand_data                    IMPORT    362   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_PKMNSD1                            IMPORT    216   variable
;_PKMNSD0                            IMPORT    240   variable
;_currentSave                        IMPORT   4140   variable
;_PKMNSD6                            IMPORT    456   variable
;_PKMNSD5                            IMPORT    102   variable
;_zx7_Decompress                     IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_menu_Setup                         IMPORT  -----   function
;pokemonSprites                      IX-140    108   variable
;tempSprite                           IX-32      3   variable
;temp271                              IX-29      3   variable
;oldState                             IX-26      3   variable
;backgroundSprite                     IX-23      3   variable
;G_79                                 IX-20      3   variable
;G_86                                 IX-17      3   variable
;G_85                                 IX-14      1   variable
;largeSprite                          IX-13      3   variable
;G_81                                 IX-10      3   variable
;grabbingPokemon                       IX-7      1   variable
;menuState                             IX-6      3   variable
;pokemonIndex                          IX-3      3   variable


; Stack Frame Size: 225 (bytes)
;       Spill Code: -61 (instruction)


.ENDFUNC "menu_Box",665,"_menu_Box"
	SEGMENT STRSECT
L__168:
	DB	"Level %u"
	DB	0
	SEGMENT CODE
;  666	void menu_ItemShop(gfx_sprite_t *shopSprite) {
_menu_ItemShop:
.DEFINE "_menu_ItemShop"

.VALUE _menu_ItemShop

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "menu_ItemShop",666,"_menu_ItemShop"

.LINE 666

.DEFINE "shopSprite"

.CLASS 65

.VALUE 6

.TAG "NONAME11"

.TYPE 40

.ENDEF

.DEFINE "menuState"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "cursorState"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "itemIndex"

.CLASS 65

.VALUE -9

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-21
	LD	SP,HL
;  667		int menuState, cursorState, itemIndex;
;  668		gfx_SwapDraw();
.LINE 668

	CALL	_gfx_SwapDraw
;  669		gfx_Blit(gfx_screen);
.LINE 669

	LD	BC,0
	PUSH	BC
	CALL	_gfx_Blit
	POP	BC
;  670		while ((kb_Data[1] & kb_2nd) || (kb_Data[6] & kb_Clear)) { kb_Scan(); }
.LINE 670

	JR	L_302
L_303:
	CALL	_kb_Scan
L_302:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_303
	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_303
;  671	
;  672		menuState = 0;
.LINE 672

	LD	BC,0
	LD	(IX+-3),BC
;  673		cursorState = 0;
.LINE 673

	LD	(IX+-6),BC
;  674		while (!(kb_Data[6] & kb_Clear)) {
.LINE 674

	JR	L_338
L_339:
;  675			
;  676			gfx_SetColor(colors[0]);
.LINE 676

	LD	A,(_colors)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  677			gfx_FillRectangle(100, 0, 220, 16);
.LINE 677

	LD	BC,16
	PUSH	BC
	LD	BC,220
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,100
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  678			sprintf(str, "%u$", currentSave.playerMoney);
.LINE 678

	LD	A,(_currentSave+1242)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_currentSave+1239)
	PUSH	BC
	LD	BC,L__190
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  679			gfx_PrintStringXY(str, 100, 5);
.LINE 679

	LD	BC,5
	PUSH	BC
	LD	BC,100
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  680	
;  681			gfx_ScaledTransparentSprite_NoClip(shopSprite, 26, 46, 2, 2);
.LINE 681

	LD	BC,2
	PUSH	BC
	PUSH	BC
	LD	BC,46
	PUSH	BC
	LD	BC,26
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_gfx_ScaledTransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  682			gfx_TransparentSprite_NoClip(mapcursorsmall, 47, 61 + 14 * cursorState);
.LINE 682

	LD	B,(IX+-6)
	LD	C,14
	MLT	BC
	LD	A,C
	ADD	A,61
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,47
	PUSH	BC
	LD	BC,_mapcursorsmall_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  683	
;  684			for (itemIndex = menuState; itemIndex < menuState + 10 && itemIndex < 20; itemIndex++) {
.LINE 684

	LD	BC,(IX+-3)
	LD	(IX+-9),BC
	JR	L_309
L_307:
;  685				gfx_PrintStringXY(itemNames[itemIndex], 60, 63 + 14 * (itemIndex - menuState));
.LINE 685

	LD	BC,(IX+-3)
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+63
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	HL,(IX+-9)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  686				sprintf(str, "%u", currentSave.playerItems[itemIndex]);
.LINE 686

	LD	BC,_currentSave+1243
	LD	HL,(IX+-9)
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__191
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  687				gfx_PrintStringXY(str, 172, 63 + 14 * (itemIndex - menuState));
.LINE 687

	LD	BC,(IX+-3)
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+63
	PUSH	BC
	LD	BC,172
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  688				sprintf(str, "%u$", itemPrices[itemIndex]);
.LINE 688

	LD	HL,(IX+-9)
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__192
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  689				gfx_PrintStringXY(str, 204, 63 + 14 * (itemIndex - menuState));
.LINE 689

	LD	BC,(IX+-3)
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	LD	A,14
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+63
	PUSH	BC
	LD	BC,204
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-9)
	INC	BC
	LD	(IX+-9),BC
;  690			}
L_309:
.LINE 690

	LD	IY,(IX+-3)
	LEA	BC,IY+10
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	JP	P,L_310
	LD	BC,20
	LD	HL,(IX+-9)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_307
L_310:
;  691	
;  692			gfx_SwapDraw();
.LINE 692

	CALL	_gfx_SwapDraw
;  693	
;  694			kb_Scan();
.LINE 694

	CALL	_kb_Scan
;  695			while (!((kb_Data[6] & kb_Clear) || (kb_Data[1] & kb_2nd) || (kb_Data[7] & kb_Up) || (kb_Data[7] & kb_Down))) {
.LINE 695

	JR	L_314
L_315:
;  696				kb_Scan();
.LINE 696

	CALL	_kb_Scan
;  697			}
L_314:
.LINE 697

	LD	A,(16056348)
	AND	A,64
	JR	NZ,L_323
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_323
	LD	A,(16056350)
	AND	A,8
	JR	NZ,L_323
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_315
L_323:
;  698	
;  699			if (kb_Data[7] & kb_Up) {
.LINE 699

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_331
;  700				if (menuState > 0 && cursorState <= 2) {
.LINE 700

	LD	BC,(IX+-3)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	JP	P,L_321
	LD	BC,(IX+-6)
	LD	HL,2
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_321
;  701					menuState--;
.LINE 701

	LD	BC,(IX+-3)
	DEC	BC
	LD	(IX+-3),BC
;  702				}
;  703				else if (menuState + cursorState > 0) {
.LINE 703

	JR	L_331
L_321:
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,HL
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_331
;  704					cursorState--;
.LINE 704

	LD	BC,(IX+-6)
	DEC	BC
	LD	(IX+-6),BC
;  705				}
;  706			}
L_331:
.LINE 706

;  707			if (kb_Data[7] & kb_Down) {
.LINE 707

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_337
;  708				if (menuState + 10 < 20 && cursorState >= 3) {
.LINE 708

	LD	IY,(IX+-3)
	LEA	HL,IY+10
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JP	P,L_329
	LD	BC,3
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_329
;  709					menuState++;
.LINE 709

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  710				}
;  711				else if (menuState + cursorState < 19) {
.LINE 711

	JR	L_337
L_329:
	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	BC,19
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_337
;  712					cursorState++;
.LINE 712

	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  713				}
;  714			}
L_337:
.LINE 714

;  715			if (kb_Data[1] & kb_2nd) {
.LINE 715

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_336
;  716				if (currentSave.playerMoney >= itemPrices[menuState + cursorState]) {
.LINE 716

	LD	BC,(IX+-6)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(IX+-12),HL
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	(IX+-19),B	; spill
	LD	B,0
	LD	(IX+-21),B	; spill
	LD	B,(IX+-19)	; unspill
	LD	HL,(_currentSave+1239)
	LD	A,(_currentSave+1242)
	LD	E,A
	LD	(IX+-19),B	; spill
	LD	B,(IX+-21)	; unspill
	LD	A,B
	LD	B,(IX+-19)	; unspill
	CALL	__lcmpu
	JR	C,L_334
;  717					currentSave.playerItems[menuState + cursorState]++;
.LINE 717

	LD	BC,_currentSave+1243
	LD	(IX+-18),BC
	LD	BC,(IX+-12)
	LD	HL,(IX+-18)
	ADD	HL,BC
	LD	(IX+-15),HL
	LD	IY,(IX+-15)
	LD	BC,(IX+-12)
	LD	HL,(IX+-18)
	ADD	HL,BC
	LD	A,(IY)
	INC	A
	LD	(HL),A
;  718					currentSave.playerMoney -= itemPrices[menuState + cursorState];
.LINE 718

	LD	HL,(IX+-12)
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	(IX+-19),B	; spill
	LD	B,0
	LD	(IX+-20),B	; spill
	LD	B,(IX+-19)	; unspill
	LD	HL,(_currentSave+1239)
	LD	A,(_currentSave+1242)
	LD	E,A
	LD	(IX+-19),B	; spill
	LD	B,(IX+-20)	; unspill
	LD	A,B
	LD	B,(IX+-19)	; unspill
	CALL	__lsub
	LD	(_currentSave+1239),HL
	LD	A,E
	LD	(_currentSave+1242),A
;  719				}
L_334:
.LINE 719

;  720				Wait(10);
.LINE 720

	LD	BC,10
	PUSH	BC
	CALL	_Wait
	POP	BC
;  721			}
;  722			else {
.LINE 722

	JR	L_338
L_336:
;  723				Wait(15);
.LINE 723

	LD	BC,15
	PUSH	BC
	CALL	_Wait
	POP	BC
;  724			}
;  725			
;  726		}
L_338:
.LINE 726

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_339
.LINE 727

	LD	SP,IX
	POP	IX
	RET	


;**************************** _menu_ItemShop ***************************
;Name                         Addr/Register   Size   Type
;_Wait                               IMPORT  -----   function
;_itemPrices                         IMPORT     40   variable
;_itemNames                          IMPORT    320   variable
;_mapcursorsmall_data                IMPORT     72   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_ScaledTransparentSprite_NoClip      IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_str                                IMPORT    100   variable
;_currentSave                        IMPORT   4140   variable
;_sprintf                            IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetColor                       IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_gfx_Blit                           IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;G_88                                 IX-12      3   variable
;itemIndex                             IX-9      3   variable
;cursorState                           IX-6      3   variable
;menuState                             IX-3      3   variable
;shopSprite                            IX+6      3   parameter


; Stack Frame Size: 30 (bytes)
;       Spill Code: -61 (instruction)


.ENDFUNC "menu_ItemShop",727,"_menu_ItemShop"
	SEGMENT STRSECT
L__190:
	DB	"%u$"
	DB	0
L__191:
	DB	"%u"
	DB	0
L__192:
	DB	"%u$"
	DB	0
	XREF _PKMNSD6:ROM
	XREF _PKMNSD5:ROM
	XREF _PKMNSD1:ROM
	XREF _PKMNSD0:ROM
	XREF _itemPrices:ROM
	XREF _itemDescriptions:ROM
	XREF _itemNames:ROM
	XREF _items_UseItem:ROM
	XREF _mapcursorsmall_data:ROM
	XREF _stats_CalculateStats:ROM
	XREF _save_Save:ROM
	XREF _currentSave:ROM
	XREF _textBoxType:ROM
	XREF _text_DrawTextBox:ROM
	XREF _categoryIcons:ROM
	XREF _statusIcons:ROM
	XREF _colors:ROM
	XREF _str:ROM
	XREF _FreeIcons:ROM
	XREF _MallocIcons:ROM
	XREF _SetColors:ROM
	XREF _Wait:ROM
	XREF _typeIcons:ROM
	XREF _xpPerLevel:ROM
	XREF _data_moveDescriptions:ROM
	XREF _data_moves:ROM
	XREF _data_pokemon:ROM
	XREF _closedhand_data:ROM
	XREF _openhand_data:ROM
	XREF _menucursorsmall_data:ROM
	XREF _menucursor_data:ROM
	XREF _dbg_SetWatchpoint:ROM
	XREF _zx7_Decompress:ROM
	XREF _gfx_ScaledTransparentSprite_NoClip:ROM
	XREF _gfx_ScaledSprite_NoClip:ROM
	XREF _gfx_TransparentSprite_NoClip:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_Blit:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_FillScreen:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_AllocSprite:ROM
	XREF _kb_Scan:ROM
	XREF _strncpy:ROM
	XREF _sprintf:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF __lcmpu:ROM
	XREF __lsub:ROM
	XREF __idivs:ROM
	XREF __imulu:ROM
	XREF __bshl:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _menu_ItemShop
	XDEF _menu_Box
	XDEF _menu_Items
	XDEF _menu_PokemonDetails
	XDEF _menu_PokemonMenu
	XDEF _menu_Menu
	XDEF _menu_Setup
	XDEF _menuCurrent
	XDEF _menuState2
	XDEF _menuState1
	XDEF _tempcharacter
	XDEF _pokemonToSwitch
	XDEF _switchMode
	END
