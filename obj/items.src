; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\ITEMS.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME3"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME7"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "NONAME8",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.ENDREC "NONAME9"
.BEGREC "NONAME10",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME8"
.TYPE 104
.ENDEF
.ENDREC "NONAME10"
.BEGREC "NONAME11",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME9"
.TYPE 104
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME8"
.TYPE 104
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME15"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
.BEGREC "saveGame",2916
.DEFINE "newGame"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rivalPokemon"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "playerX"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "playerY"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "lastPlayerX"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "lastPlayerY"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "party"
.VALUE 10
.CLASS 8
.DIM 36
.TAG "pokemonData"
.TYPE 104
.ENDEF
.DEFINE "currentZone"
.VALUE 10
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "indoors"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "surfing"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "currentBuilding"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "playerMoney"
.VALUE 15
.CLASS 8
.TYPE 15
.ENDEF
.DEFINE "playerItems"
.VALUE 19
.CLASS 8
.DIM 185
.TYPE 108
.ENDEF
.DEFINE "defeatedTrainers"
.VALUE 204
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "defeatedTrainersIndoors"
.VALUE 460
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGifts"
.VALUE 716
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGiftsIndoors"
.VALUE 972
.CLASS 8
.DIM 16
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "takenGroundGifts"
.VALUE 1228
.CLASS 8
.DIM 2
.DIM 16
.DIM 16
.TYPE 7020
.ENDEF
.DEFINE "foundItemsPos"
.VALUE 1740
.CLASS 8
.DIM 2
.DIM 16
.DIM 16
.TYPE 7021
.ENDEF
.DEFINE "badgeCount"
.VALUE 2764
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pokedex"
.VALUE 2765
.CLASS 8
.DIM 151
.TYPE 108
.ENDEF
.ENDREC "saveGame"
.BEGREC "pokemonData",34
.DEFINE "id"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "moves"
.VALUE 1
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "pp"
.VALUE 5
.CLASS 8
.DIM 4
.TYPE 108
.ENDEF
.DEFINE "level"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xp"
.VALUE 10
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "currenthealth"
.VALUE 13
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "currentstatus"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthIV"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "attackIV"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "defenceIV"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialattackIV"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "specialdefenceIV"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "speedIV"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "healthEV"
.VALUE 22
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attackEV"
.VALUE 24
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defenceEV"
.VALUE 26
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattackEV"
.VALUE 28
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefenceEV"
.VALUE 30
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speedEV"
.VALUE 32
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonData"
.BEGREC "pokemonType",51
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 16
.TYPE 98
.ENDEF
.DEFINE "element1"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "element2"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basehealth"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "baseattack"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basedefence"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialattack"
.VALUE 21
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespecialdefence"
.VALUE 22
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "basespeed"
.VALUE 23
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "movelevels"
.VALUE 24
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "moveids"
.VALUE 34
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.DEFINE "evolvelevel"
.VALUE 44
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolveid"
.VALUE 45
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "evolvesfrom"
.VALUE 46
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "xpdrop"
.VALUE 47
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "xptype"
.VALUE 49
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "catchrate"
.VALUE 50
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "pokemonType"
.BEGREC "pokemonStats",12
.DEFINE "health"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "attack"
.VALUE 2
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "defence"
.VALUE 4
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialattack"
.VALUE 6
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "specialdefence"
.VALUE 8
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "speed"
.VALUE 10
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "pokemonStats"
.BEGREC "move",21
.DEFINE "name"
.VALUE 0
.CLASS 8
.DIM 14
.TYPE 98
.ENDEF
.DEFINE "element"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "power"
.VALUE 16
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "accuracy"
.VALUE 17
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "uses"
.VALUE 18
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statustype"
.VALUE 19
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "statuschance"
.VALUE 20
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "move"
.BEGREC "zoneData",688
.DEFINE "spawnids"
.VALUE 0
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnminlevels"
.VALUE 80
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "spawnmaxlevels"
.VALUE 160
.CLASS 8
.DIM 5
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "exitzone"
.VALUE 240
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exitx"
.VALUE 256
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "exity"
.VALUE 272
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorzones"
.VALUE 288
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doorx"
.VALUE 304
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "doory"
.VALUE 320
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "textIds"
.VALUE 336
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerspawnids"
.VALUE 352
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerspawnlevels"
.VALUE 448
.CLASS 8
.DIM 6
.DIM 16
.TYPE 876
.ENDEF
.DEFINE "trainerx"
.VALUE 544
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainery"
.VALUE 560
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerdir"
.VALUE 576
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerskin"
.VALUE 592
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainertype"
.VALUE 608
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainermovement"
.VALUE 624
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainertext"
.VALUE 640
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "trainerreward"
.VALUE 656
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.DEFINE "grounditems"
.VALUE 672
.CLASS 8
.DIM 16
.TYPE 108
.ENDEF
.ENDREC "zoneData"
	SEGMENT TEXT
_healAmounts:
	DW	20
	DW	50
	DW	120
	DW	1000
.DEFINE "healAmounts"
.ALIAS "_healAmounts"
.CLASS 84
.VALUE _healAmounts
.DIM 4
.TYPE 109
.ENDEF
	SEGMENT DATA
_itemNames:
	DB	80
	DB	111
	DB	107
	DB	101
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	71
	DB	114
	DB	101
	DB	97
	DB	116
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	85
	DB	108
	DB	116
	DB	114
	DB	97
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	115
	DB	116
	DB	101
	DB	114
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	80
	DB	111
	DB	116
	DB	105
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	83
	DB	117
	DB	112
	DB	101
	DB	114
	DB	32
	DB	80
	DB	111
	DB	116
	DB	105
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	72
	DB	121
	DB	112
	DB	101
	DB	114
	DB	32
	DB	80
	DB	111
	DB	116
	DB	105
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	120
	DB	32
	DB	80
	DB	111
	DB	116
	DB	105
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	70
	DB	117
	DB	108
	DB	108
	DB	32
	DB	72
	DB	101
	DB	97
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	70
	DB	117
	DB	108
	DB	108
	DB	32
	DB	82
	DB	101
	DB	115
	DB	116
	DB	111
	DB	114
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	65
	DB	110
	DB	116
	DB	105
	DB	100
	DB	111
	DB	116
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	66
	DB	117
	DB	114
	DB	110
	DB	32
	DB	72
	DB	101
	DB	97
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	80
	DB	97
	DB	114
	DB	108
	DB	121
	DB	122
	DB	32
	DB	72
	DB	101
	DB	97
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	73
	DB	99
	DB	101
	DB	32
	DB	72
	DB	101
	DB	97
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	65
	DB	119
	DB	97
	DB	107
	DB	101
	DB	110
	DB	105
	DB	110
	DB	103
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	84
	DB	104
	DB	117
	DB	110
	DB	100
	DB	101
	DB	114
	DB	32
	DB	83
	DB	116
	DB	111
	DB	110
	DB	101
	DB	0
	DB	0
	DB	0
	DB	77
	DB	111
	DB	111
	DB	110
	DB	32
	DB	83
	DB	116
	DB	111
	DB	110
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	70
	DB	105
	DB	114
	DB	101
	DB	32
	DB	83
	DB	116
	DB	111
	DB	110
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	76
	DB	101
	DB	97
	DB	102
	DB	32
	DB	83
	DB	116
	DB	111
	DB	110
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	87
	DB	97
	DB	116
	DB	101
	DB	114
	DB	32
	DB	83
	DB	116
	DB	111
	DB	110
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "itemNames"
.ALIAS "_itemNames"
.CLASS 69
.VALUE _itemNames
.DIM 20
.DIM 16
.TYPE 866
.ENDEF
_itemDescriptions:
	DB	65
	DB	32
	DB	116
	DB	111
	DB	111
	DB	108
	DB	32
	DB	102
	DB	111
	DB	114
	DB	32
	DB	99
	DB	97
	DB	116
	DB	99
	DB	104
	DB	105
	DB	110
	DB	103
	DB	32
	DB	119
	DB	105
	DB	108
	DB	100
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	65
	DB	32
	DB	103
	DB	111
	DB	111
	DB	100
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	32
	DB	119
	DB	105
	DB	116
	DB	104
	DB	32
	DB	97
	DB	32
	DB	104
	DB	105
	DB	103
	DB	104
	DB	101
	DB	114
	DB	32
	DB	99
	DB	97
	DB	116
	DB	99
	DB	104
	DB	32
	DB	114
	DB	97
	DB	116
	DB	101
	DB	32
	DB	116
	DB	104
	DB	97
	DB	110
	DB	32
	DB	97
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	65
	DB	32
	DB	98
	DB	101
	DB	116
	DB	116
	DB	101
	DB	114
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	32
	DB	119
	DB	105
	DB	116
	DB	104
	DB	32
	DB	97
	DB	32
	DB	104
	DB	105
	DB	103
	DB	104
	DB	101
	DB	114
	DB	32
	DB	99
	DB	97
	DB	116
	DB	99
	DB	104
	DB	32
	DB	114
	DB	97
	DB	116
	DB	101
	DB	32
	DB	116
	DB	104
	DB	97
	DB	110
	DB	32
	DB	97
	DB	32
	DB	71
	DB	114
	DB	101
	DB	97
	DB	116
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	84
	DB	104
	DB	101
	DB	32
	DB	98
	DB	101
	DB	115
	DB	116
	DB	32
	DB	66
	DB	97
	DB	108
	DB	108
	DB	32
	DB	116
	DB	104
	DB	97
	DB	116
	DB	32
	DB	99
	DB	97
	DB	116
	DB	99
	DB	104
	DB	101
	DB	115
	DB	32
	DB	97
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	119
	DB	105
	DB	116
	DB	104
	DB	111
	DB	117
	DB	116
	DB	32
	DB	102
	DB	97
	DB	105
	DB	108
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	82
	DB	101
	DB	115
	DB	116
	DB	111
	DB	114
	DB	101
	DB	115
	DB	32
	DB	116
	DB	104
	DB	101
	DB	32
	DB	72
	DB	80
	DB	32
	DB	111
	DB	102
	DB	32
	DB	97
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	98
	DB	121
	DB	32
	DB	50
	DB	48
	DB	32
	DB	112
	DB	111
	DB	105
	DB	110
	DB	116
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	82
	DB	101
	DB	115
	DB	116
	DB	111
	DB	114
	DB	101
	DB	115
	DB	32
	DB	116
	DB	104
	DB	101
	DB	32
	DB	72
	DB	80
	DB	32
	DB	111
	DB	102
	DB	32
	DB	97
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	98
	DB	121
	DB	32
	DB	53
	DB	48
	DB	32
	DB	112
	DB	111
	DB	105
	DB	110
	DB	116
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	82
	DB	101
	DB	115
	DB	116
	DB	111
	DB	114
	DB	101
	DB	115
	DB	32
	DB	116
	DB	104
	DB	101
	DB	32
	DB	72
	DB	80
	DB	32
	DB	111
	DB	102
	DB	32
	DB	97
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	98
	DB	121
	DB	32
	DB	49
	DB	50
	DB	48
	DB	32
	DB	112
	DB	111
	DB	105
	DB	110
	DB	116
	DB	115
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	70
	DB	117
	DB	108
	DB	108
	DB	121
	DB	32
	DB	114
	DB	101
	DB	115
	DB	116
	DB	111
	DB	114
	DB	101
	DB	115
	DB	32
	DB	116
	DB	104
	DB	101
	DB	32
	DB	72
	DB	80
	DB	32
	DB	111
	DB	102
	DB	32
	DB	97
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	72
	DB	101
	DB	97
	DB	108
	DB	115
	DB	32
	DB	97
	DB	108
	DB	108
	DB	32
	DB	116
	DB	104
	DB	101
	DB	32
	DB	115
	DB	116
	DB	97
	DB	116
	DB	117
	DB	115
	DB	32
	DB	112
	DB	114
	DB	111
	DB	98
	DB	108
	DB	101
	DB	109
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	111
	DB	110
	DB	101
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	70
	DB	117
	DB	108
	DB	108
	DB	121
	DB	32
	DB	114
	DB	101
	DB	115
	DB	116
	DB	111
	DB	114
	DB	101
	DB	115
	DB	32
	DB	116
	DB	104
	DB	101
	DB	32
	DB	72
	DB	80
	DB	32
	DB	97
	DB	110
	DB	100
	DB	32
	DB	104
	DB	101
	DB	97
	DB	108
	DB	115
	DB	32
	DB	97
	DB	110
	DB	121
	DB	32
	DB	115
	DB	116
	DB	97
	DB	116
	DB	117
	DB	115
	DB	32
	DB	112
	DB	114
	DB	111
	DB	98
	DB	108
	DB	101
	DB	109
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	111
	DB	110
	DB	101
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	72
	DB	101
	DB	97
	DB	108
	DB	115
	DB	32
	DB	97
	DB	32
	DB	112
	DB	111
	DB	105
	DB	115
	DB	111
	DB	110
	DB	101
	DB	100
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	72
	DB	101
	DB	97
	DB	108
	DB	115
	DB	32
	DB	97
	DB	32
	DB	98
	DB	117
	DB	114
	DB	110
	DB	101
	DB	100
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	72
	DB	101
	DB	97
	DB	108
	DB	115
	DB	32
	DB	97
	DB	32
	DB	112
	DB	97
	DB	114
	DB	97
	DB	108
	DB	121
	DB	122
	DB	101
	DB	100
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	72
	DB	101
	DB	97
	DB	108
	DB	115
	DB	32
	DB	97
	DB	32
	DB	102
	DB	114
	DB	111
	DB	122
	DB	101
	DB	110
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	65
	DB	119
	DB	97
	DB	107
	DB	101
	DB	110
	DB	115
	DB	32
	DB	97
	DB	32
	DB	115
	DB	108
	DB	101
	DB	101
	DB	112
	DB	105
	DB	110
	DB	103
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	107
	DB	101
	DB	115
	DB	32
	DB	99
	DB	101
	DB	114
	DB	116
	DB	97
	DB	105
	DB	110
	DB	32
	DB	115
	DB	112
	DB	101
	DB	99
	DB	105
	DB	101
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	101
	DB	118
	DB	111
	DB	108
	DB	118
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	107
	DB	101
	DB	115
	DB	32
	DB	99
	DB	101
	DB	114
	DB	116
	DB	97
	DB	105
	DB	110
	DB	32
	DB	115
	DB	112
	DB	101
	DB	99
	DB	105
	DB	101
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	101
	DB	118
	DB	111
	DB	108
	DB	118
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	107
	DB	101
	DB	115
	DB	32
	DB	99
	DB	101
	DB	114
	DB	116
	DB	97
	DB	105
	DB	110
	DB	32
	DB	115
	DB	112
	DB	101
	DB	99
	DB	105
	DB	101
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	101
	DB	118
	DB	111
	DB	108
	DB	118
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	107
	DB	101
	DB	115
	DB	32
	DB	99
	DB	101
	DB	114
	DB	116
	DB	97
	DB	105
	DB	110
	DB	32
	DB	115
	DB	112
	DB	101
	DB	99
	DB	105
	DB	101
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	101
	DB	118
	DB	111
	DB	108
	DB	118
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	77
	DB	97
	DB	107
	DB	101
	DB	115
	DB	32
	DB	99
	DB	101
	DB	114
	DB	116
	DB	97
	DB	105
	DB	110
	DB	32
	DB	115
	DB	112
	DB	101
	DB	99
	DB	105
	DB	101
	DB	115
	DB	32
	DB	111
	DB	102
	DB	32
	DB	80
	DB	111
	DB	107
	DB	101
	DB	109
	DB	111
	DB	110
	DB	32
	DB	101
	DB	118
	DB	111
	DB	108
	DB	118
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "itemDescriptions"
.ALIAS "_itemDescriptions"
.CLASS 69
.VALUE _itemDescriptions
.DIM 20
.DIM 68
.TYPE 866
.ENDEF
_itemPrices:
	DW	200
	DW	600
	DW	1200
	DW	15000
	DW	300
	DW	700
	DW	1200
	DW	2500
	DW	600
	DW	3000
	DW	100
	DW	250
	DW	200
	DW	250
	DW	200
	DW	2100
	DW	2100
	DW	2100
	DW	2100
	DW	2100
.DEFINE "itemPrices"
.ALIAS "_itemPrices"
.CLASS 69
.VALUE _itemPrices
.DIM 20
.TYPE 109
.ENDEF
_itemCount:
	DB	20
.DEFINE "itemCount"
.ALIAS "_itemCount"
.CLASS 69
.VALUE _itemCount
.TYPE 12
.ENDEF
;    1	#include <graphx.h>
;    2	#include <stdio.h>
;    3	#include <stdint.h>
;    4	#include <keypadc.h>
;    5	
;    6	#include "items.h"
;    7	#include "text.h"
;    8	#include "savegame.h"
;    9	#include "data.h"
;   10	#include "misc.h"
;   11	#include "stats.h"
;   12	#include "map.h"
;   13	#include "menu.h"
;   14	
;   15	void HealHp(uint8_t index, uint16_t amount);
;   16	void HealStatus(uint8_t index, uint8_t type);
;   17	
;   18	const uint16_t healAmounts[] = { 20,50,120,1000 };
;   19	
;   20	/* Item Data */
;   21	
;   22	char itemNames[20][16] = {
;   23		"Poke Ball",
;   24		"Great Ball",
;   25		"Ultra Ball",
;   26		"Master Ball",
;   27		"Potion",
;   28		"Super Potion",
;   29		"Hyper Potion",
;   30		"Max Potion",
;   31		"Full Heal",
;   32		"Full Restore",
;   33		"Antidote",
;   34		"Burn Heal",
;   35		"Parlyz Heal",
;   36		"Ice Heal",
;   37		"Awakening",
;   38		"Thunder Stone",
;   39		"Moon Stone",
;   40		"Fire Stone",
;   41		"Leaf Stone",
;   42		"Water Stone"
;   43	};
;   44	char itemDescriptions[20][68] = {
;   45		"A tool for catching wild Pokemon",
;   46		"A good Ball with a higher catch rate than a Poke Ball",
;   47		"A better Ball with a higher catch rate than a Great Ball",
;   48		"The best Ball that catches a Pokemon without fail",
;   49		"Restores the HP of a Pokemon by 20 points",
;   50		"Restores the HP of a Pokemon by 50 points",
;   51		"Restores the HP of a Pokemon by 120 points",
;   52		"Fully restores the HP of a Pokemon",
;   53		"Heals all the status problems of one Pokemon",
;   54		"Fully restores the HP and heals any status problems of one Pokemon",
;   55		"Heals a poisoned Pokemon",
;   56		"Heals a burned Pokemon",
;   57		"Heals a paralyzed Pokemon",
;   58		"Heals a frozen Pokemon",
;   59		"Awakens a sleeping Pokemon",
;   60		"Makes certain species of Pokemon evolve",
;   61		"Makes certain species of Pokemon evolve",
;   62		"Makes certain species of Pokemon evolve",
;   63		"Makes certain species of Pokemon evolve",
;   64		"Makes certain species of Pokemon evolve",
;   65	};
;   66	/* Used in shop */
;   67	uint16_t itemPrices[20] = {
;   68		200,600,1200,15000,300,700,1200,2500,600,3000,100,250,200,250,200,2100,2100,2100,2100,2100
;   69	};
;   70	uint8_t itemCount = 20;
	SEGMENT CODE
;   71	
;   72	
;   73	void items_IndexToName(char *name, uint8_t index) {
_items_IndexToName:
.DEFINE "_items_IndexToName"

.VALUE _items_IndexToName

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "items_IndexToName",73,"_items_IndexToName"

.LINE 73

.DEFINE "name"

.CLASS 65

.VALUE 6

.TYPE 34

.ENDEF

.DEFINE "index"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   74		if (index < 20) {
.LINE 74

	LD	A,(IX+9)
	CP	A,20
	JR	NC,L_1
;   75			sprintf(name, itemNames[index]);
.LINE 75

	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;   76		}
;   77		else {
.LINE 77

	JR	L_2
L_1:
;   78			sprintf(name, data_moves[index-19].name);
.LINE 78

	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-19
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;   79		}
;   80	}
L_2:
.LINE 80

	LD	SP,IX
	POP	IX
	RET	


;**************************** _items_IndexToName ***************************
;Name                         Addr/Register   Size   Type
;_data_moves                         IMPORT  unknown variable
;_itemNames                          STATIC    320   variable
;_sprintf                            IMPORT  -----   function
;index                                 IX+9      1   parameter
;name                                  IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "items_IndexToName",80,"_items_IndexToName"
;   81	
;   82	
;   83	void items_ItemShop(void) {
_items_ItemShop:
.DEFINE "_items_ItemShop"

.VALUE _items_ItemShop

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "items_ItemShop",83,"_items_ItemShop"

.LINE 83

.DEFINE "shopCurrent"

.CLASS 65

.VALUE -1

.TYPE 12

.ENDEF

.DEFINE "shopPage"

.CLASS 65

.VALUE -2

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-14
	LD	SP,HL
;   84		uint8_t shopPage = 0;
.LINE 84

	LD	(IX+-2),0
;   85		uint8_t shopCurrent = 1;
.LINE 85

	LD	(IX+-1),1
;   86	
;   87		gfx_SetDrawScreen();
.LINE 87

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   88	reloadshop:
.LINE 88

L_3:
;   89	
;   90		gfx_SetColor(colors[0]);
.LINE 90

	LD	A,(_colors)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   91		gfx_FillRectangle(20, 20, 290, 200);
.LINE 91

	LD	BC,200
	PUSH	BC
	LD	BC,290
	PUSH	BC
	LD	BC,20
	PUSH	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   92		gfx_SetColor(colors[1]);
.LINE 92

	LD	HL,_colors
	INC	HL
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   93		gfx_Rectangle(20, 20, 290, 200);
.LINE 93

	LD	BC,200
	PUSH	BC
	LD	BC,290
	PUSH	BC
	LD	BC,20
	PUSH	BC
	PUSH	BC
	CALL	_gfx_Rectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   94		gfx_SetColor(colors[0]);
.LINE 94

	LD	A,(_colors)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   95		gfx_PrintStringXY(">", 25, 25 + shopCurrent * 20);
.LINE 95

	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,20
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+25
	PUSH	BC
	LD	BC,25
	PUSH	BC
	LD	BC,L__2
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   96		map_DrawInformationBar();
.LINE 96

	CALL	_map_DrawInformationBar
;   97		while (kb_Data[1] & kb_2nd) { kb_Scan(); }
.LINE 97

	JR	L_4
L_5:
	CALL	_kb_Scan
L_4:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_5
;   98	
;   99		i = 0;
.LINE 99

	LD	HL,_i
	LD	(HL),0
	INC	HL
	LD	(HL),0
;  100		while (i < 10) {
.LINE 100

	JR	L_8
L_9:
;  101			gfx_PrintStringXY(itemNames[i + shopPage], 35, 25 + i * 20);
.LINE 101

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,20
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+25
	PUSH	BC
	LD	BC,35
	PUSH	BC
	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,HL
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,_itemNames
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  102			sprintf(str, "%u$", itemPrices[i + shopPage]);
.LINE 102

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,HL
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__4
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  103			gfx_PrintStringXY(str, 170, 25 + i * 20);
.LINE 103

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,20
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+25
	PUSH	BC
	LD	BC,170
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  104			sprintf(str, "%u", currentSave.playerItems[i + shopPage]);
.LINE 104

	LD	BC,(_i)
	CALL	__stoiu
	LD	BC,HL
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	BC,_currentSave+19
	ADD	HL,BC
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__5
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  105			gfx_PrintStringXY(str, 240, 25 + i * 20);
.LINE 105

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,20
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+25
	PUSH	BC
	LD	BC,240
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  106			i++;
.LINE 106

	LD	BC,(_i)
	INC	BC
	LD	HL,_i
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  107		}
L_8:
.LINE 107

	LD.LIS	BC,10
	LD	HL,(_i)
	OR	A,A
	SBC.SIS	HL,BC
	JR	C,L_9
;  108	
;  109		while (!(kb_Data[6] & kb_Clear))
.LINE 109

	JR	L_31
L_32:
;  110		{
;  111			kb_Scan();
.LINE 111

	CALL	_kb_Scan
;  112			if (kb_Data[7] & kb_Up) {
.LINE 112

	LD	A,(16056350)
	AND	A,8
	JR	Z,L_16
;  113				if (shopCurrent != 0) {
.LINE 113

	LD	A,(IX+-1)
	OR	A,A
	JR	Z,L_16
;  114					shopCurrent--;
.LINE 114

	DEC	(IX+-1)
;  115					gfx_FillRectangle(25, 25, 9, 190);
.LINE 115

	LD	BC,190
	PUSH	BC
	LD	BC,9
	PUSH	BC
	LD	BC,25
	PUSH	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  116					gfx_PrintStringXY(">", 25, 25 + shopCurrent * 20);
.LINE 116

	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,20
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+25
	PUSH	BC
	LD	BC,25
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  117					Wait(20);
.LINE 117

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  118				}
;  119			}
L_16:
.LINE 119

;  120			if (kb_Data[7] & kb_Down) {
.LINE 120

	LD	A,(16056350)
	AND	A,1
	JR	Z,L_22
;  121				if (shopCurrent != 9) {
.LINE 121

	LD	A,(IX+-1)
	CP	A,9
	JR	Z,L_22
;  122					shopCurrent++;
.LINE 122

	INC	(IX+-1)
;  123					gfx_FillRectangle(25, 25, 9, 190);
.LINE 123

	LD	BC,190
	PUSH	BC
	LD	BC,9
	PUSH	BC
	LD	BC,25
	PUSH	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  124					gfx_PrintStringXY(">", 25, 25 + shopCurrent * 20);
.LINE 124

	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	A,20
	CALL	__imul_b
	LD	IY,HL
	LEA	BC,IY+25
	PUSH	BC
	LD	BC,25
	PUSH	BC
	LD	BC,L__12
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  125					Wait(20);
.LINE 125

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  126				}
;  127			}
L_22:
.LINE 127

;  128			if ((kb_Data[7] & kb_Right) || (kb_Data[7] & kb_Left)) {
.LINE 128

	LD	A,(16056350)
	AND	A,4
	JR	NZ,L_21
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_30
L_21:
;  129				if (shopPage == 10) {
.LINE 129

	LD	A,(IX+-2)
	CP	A,10
	JR	NZ,L_19
;  130					shopPage = 0;
.LINE 130

	LD	(IX+-2),0
;  131				}
;  132				else {
.LINE 132

	JR	L_20
L_19:
;  133					shopPage = 10;
.LINE 133

	LD	(IX+-2),10
;  134				}
L_20:
.LINE 134

;  135				shopCurrent = 0;
.LINE 135

	LD	(IX+-1),0
;  136				gfx_FillRectangle(25, 25, 9, 190);
.LINE 136

	LD	BC,190
	PUSH	BC
	LD	BC,9
	PUSH	BC
	LD	BC,25
	PUSH	BC
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  137				gfx_PrintStringXY(">", 25, 25 + shopCurrent * 20);
.LINE 137

	LD	BC,25
	PUSH	BC
	PUSH	BC
	LD	BC,L__16
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  138				Wait(20);
.LINE 138

	LD	BC,20
	PUSH	BC
	CALL	_Wait
	POP	BC
;  139				goto reloadshop;
.LINE 139

	JR	L_3
;  140			}
L_30:
.LINE 140

;  141	
;  142			if (kb_Data[1] & kb_2nd) {
.LINE 142

	LD	A,(16056338)
	AND	A,32
	JR	Z,L_31
;  143				if (currentSave.playerMoney >= itemPrices[shopCurrent + shopPage]) {
.LINE 143

	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	(IX+-12),B	; spill
	LD	B,0
	LD	(IX+-14),B	; spill
	LD	B,(IX+-12)	; unspill
	LD	HL,(_currentSave+15)
	LD	A,(_currentSave+18)
	LD	E,A
	LD	(IX+-12),B	; spill
	LD	B,(IX+-14)	; unspill
	LD	A,B
	LD	B,(IX+-12)	; unspill
	CALL	__lcmpu
	JR	C,L_25
;  144					currentSave.playerMoney -= itemPrices[shopCurrent + shopPage];
.LINE 144

	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-11),HL
	ADD	HL,HL
	LD	BC,_itemPrices
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoiu
	LD	BC,HL
	LD	(IX+-12),B	; spill
	LD	B,0
	LD	(IX+-13),B	; spill
	LD	B,(IX+-12)	; unspill
	LD	HL,(_currentSave+15)
	LD	A,(_currentSave+18)
	LD	E,A
	LD	(IX+-12),B	; spill
	LD	B,(IX+-13)	; unspill
	LD	A,B
	LD	B,(IX+-12)	; unspill
	CALL	__lsub
	LD	(_currentSave+15),HL
	LD	A,E
	LD	(_currentSave+18),A
;  145					currentSave.playerItems[shopCurrent + shopPage]++;
.LINE 145

	LD	BC,_currentSave+19
	LD	(IX+-8),BC
	LD	BC,(IX+-11)
	LD	HL,(IX+-8)
	ADD	HL,BC
	LD	(IX+-5),HL
	LD	IY,(IX+-5)
	LD	BC,(IX+-11)
	LD	HL,(IX+-8)
	ADD	HL,BC
	LD	A,(IY)
	INC	A
	LD	(HL),A
;  146				}
.LINE 146

;  147				while (kb_Data[1] & kb_2nd) { kb_Scan(); }
.LINE 147

	JR	L_25
L_26:
	CALL	_kb_Scan
L_25:
	LD	A,(16056338)
	AND	A,32
	JR	NZ,L_26
;  148				goto reloadshop;
.LINE 148

	JR	L_3
;  149			}
;  150		}
L_31:
.LINE 150

	LD	A,(16056348)
	AND	A,64
	JR	Z,L_32
;  151		gfx_SetDrawBuffer();
.LINE 151

	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  152	}
.LINE 152

	LD	SP,IX
	POP	IX
	RET	


;**************************** _items_ItemShop ***************************
;Name                         Addr/Register   Size   Type
;_Wait                               IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;_str                                IMPORT    100   variable
;_itemPrices                         STATIC     40   variable
;_sprintf                            IMPORT  -----   function
;_itemNames                          STATIC    320   variable
;_i                                  IMPORT      2   variable
;_kb_Scan                            IMPORT  -----   function
;_map_DrawInformationBar             IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_Rectangle                      IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_colors                             IMPORT  unknown variable
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;shopPage                              IX-2      1   variable
;shopCurrent                           IX-1      1   variable


; Stack Frame Size: 20 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "items_ItemShop",152,"_items_ItemShop"
	SEGMENT STRSECT
L__2:
	DB	">"
	DB	0
L__4:
	DB	"%u$"
	DB	0
L__5:
	DB	"%u"
	DB	0
L__9:
	DB	">"
	DB	0
L__12:
	DB	">"
	DB	0
L__16:
	DB	">"
	DB	0
	SEGMENT CODE
;  153	
;  154	bool items_UseItem(uint8_t index) {
_items_UseItem:
.DEFINE "_items_UseItem"

.VALUE _items_UseItem

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "items_UseItem",154,"_items_UseItem"

.LINE 154

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "itemName"

.CLASS 65

.VALUE -47

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-92
	LD	SP,HL
;  155		char itemName[20];
;  156		if (index < 4 || currentSave.playerItems[index] == 0) {
.LINE 156

	LD	A,(IX+6)
	CP	A,4
	JR	C,L_37
	LD	BC,_currentSave+1243
	LD	(IX+-21),BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(HL)
	OR	A,A
	JR	NZ,L_38
L_37:
;  157			return false;
.LINE 157

	XOR	A,A
	JR	L_76
;  158		}
L_38:
.LINE 158

;  159		i = menu_PokemonMenu(false);
.LINE 159

	LD	BC,0
	PUSH	BC
	CALL	_menu_PokemonMenu
	POP	BC
	LD	BC,HL
	LD	HL,_i
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  160		if (i == 0 || currentSave.party[i - 1].id == 0 || currentSave.party[i - 1].currenthealth == 0) {
.LINE 160

	LD	HL,(_i)
	CALL	__scmpzero
	JR	Z,L_41
	LD	BC,_currentSave+10
	LD	(IX+-3),BC
	LD	(IX+-6),BC
	LD	BC,(_i)
	CALL	__stoiu
	DEC	HL
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	(IX+-24),HL
	LD	IY,(IX+-24)
	LD	A,(IY+0)
	OR	A,A
	JR	Z,L_41
	LD	IY,(IX+-24)
	LD	HL,(IY+13)
	CALL	__scmpzero
	JR	NZ,L_42
L_41:
;  161			return false;
.LINE 161

	XOR	A,A
	JR	L_76
;  162		}
L_42:
.LINE 162

;  163		i -= 1;
.LINE 163

	LD	IY,(_i)
	LEA	BC,IY+-1
	LD	HL,_i
	LD	(HL),C
	INC	HL
	LD	(HL),B
;  164		if (index < 8) {
.LINE 164

	LD	A,(IX+6)
	CP	A,8
	JR	NC,L_65
;  165			currentSave.playerItems[index]--;
.LINE 165

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-21)
	ADD	HL,BC
	LD	(IX+-50),HL
	LD	IY,(IX+-50)
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-21)
	ADD	HL,BC
	LD	A,(IY)
	DEC	A
	LD	(HL),A
;  166			HealHp(i, healAmounts[index - 4]);
.LINE 166

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	DEC	HL
	DEC	HL
	DEC	HL
	DEC	HL
	ADD	HL,HL
	LD	BC,_healAmounts
	ADD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealHp
	POP	BC
	POP	BC
;  167		}
;  168		else if (index < 10) {
.LINE 168

	JR	L_74
L_65:
	LD	A,(IX+6)
	CP	A,10
	JR	NC,L_63
;  169			currentSave.playerItems[index]--;
.LINE 169

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentSave+1243
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(IY)
	DEC	A
	LD	(HL),A
;  170			HealStatus(i, 0);
.LINE 170

	LD	BC,0
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealStatus
	POP	BC
	POP	BC
;  171			HealStatus(i, 1);
.LINE 171

	LD	BC,1
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealStatus
	POP	BC
	POP	BC
;  172			HealStatus(i, 2);
.LINE 172

	LD	BC,2
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealStatus
	POP	BC
	POP	BC
;  173			HealStatus(i, 3);
.LINE 173

	LD	BC,3
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealStatus
	POP	BC
	POP	BC
;  174			HealStatus(i, 4);
.LINE 174

	LD	BC,4
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealStatus
	POP	BC
	POP	BC
;  175			if (index == 9) {
.LINE 175

	LD	A,(IX+6)
	CP	A,9
	JR	NZ,L_74
;  176				HealHp(i, 1000);
.LINE 176

	LD	BC,1000
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_HealHp
	POP	BC
	POP	BC
;  177			}
;  178		}
;  179		else if (index < 15) {
.LINE 179

	JR	L_74
L_63:
	LD	A,(IX+6)
	CP	A,15
	JR	NC,L_61
;  180			currentSave.playerItems[index]--;
.LINE 180

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,_currentSave+1243
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	A,(IY)
	DEC	A
	LD	(HL),A
;  181			HealStatus(i, index-10);
.LINE 181

	LD	A,(IX+6)
	SUB	A,10
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	A,(_i)
	LD	C,A
	PUSH	BC
	CALL	_HealStatus
	POP	BC
	POP	BC
;  182		}
;  183		else if (index < 20) {
.LINE 183

	JR	L_74
L_61:
	LD	A,(IX+6)
	CP	A,20
	JR	NC,L_74
;  184			sprintf(str, "%s has evolved", data_pokemon[currentSave.party[i].id].name);
.LINE 184

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,L__32
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  185			if (data_pokemon[currentSave.party[i].id].evolvelevel == index + 86) {
.LINE 185

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	(IX+-9),HL
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	(IX+-18),HL
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+44)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	DE,IY+86
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	NZ,L_56
;  186				currentSave.party[i].id = data_pokemon[currentSave.party[i].id].evolveid;
.LINE 186

	LD	BC,(IX+-9)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(IX+-56),HL
	LD	(IX+-53),HL
	LD	IY,(IX+-53)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+45)
	LD	IY,(IX+-53)
	LD	(IY+0),A
;  187			}
;  188			else if (data_pokemon[currentSave.party[i].id].evolvelevel == 106) {
.LINE 188

	JR	L_58
L_56:
	LD	IY,(IX+-18)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+44)
	CP	A,106
	JR	NZ,L_54
;  189				if (index = 19) {
.LINE 189

	LD	(IX+6),19
;  190					currentSave.party[i].id += 1;
.LINE 190

	LD	BC,(IX+-9)
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(IX+-62),HL
	LD	(IX+-59),HL
	LD	IY,(IX+-59)
	LD	A,(IY+0)
	INC	A
	LD	(IY+0),A
;  191				}
;  192				else if (index = 17) {
.LINE 192

	JR	L_58
;  193					currentSave.party[i].id += 2;
.LINE 193

;  194				}
;  195				else if (index = 15) {
.LINE 195

;  196					currentSave.party[i].id += 3;
.LINE 196

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	(IX+-68),HL
	LD	IY,(IX+-68)
	LD	A,(IY+0)
	ADD	A,3
	LD	(IY+0),A
;  197				}
;  198				else {
.LINE 198

	JR	L_58
;  199					return false;
.LINE 199

;  200				}
;  201			}
;  202			else {
L_54:
.LINE 202

;  203				return false;
.LINE 203

	XOR	A,A
	JR	L_76
;  204			}
L_58:
.LINE 204

;  205			currentSave.playerItems[index]--;
.LINE 205

	LD	BC,_currentSave+1243
	LD	(IX+-74),BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-74)
	ADD	HL,BC
	LD	(IX+-71),HL
	LD	IY,(IX+-71)
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	BC,(IX+-74)
	ADD	HL,BC
	LD	A,(IY)
	DEC	A
	LD	(HL),A
;  206			text_Display(str, false);
.LINE 206

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  207			return true;
.LINE 207

	LD	A,1
	JR	L_76
;  208		}
L_74:
.LINE 208

;  209	
;  210		if (index >= 20) {
.LINE 210

	LD	A,(IX+6)
	CP	A,20
	JR	C,L_75
;  211			if (data_pokemon[currentSave.party[i].id].element1 == data_moves[index - 19].element || data_pokemon[currentSave.party[i].id].element2 == data_moves[index - 19].element) {
.LINE 211

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	(IX+-15),HL
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	IY,HL
	LEA	HL,IY+-19
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	(IX+-12),HL
	LD	(IX+-27),HL
	LD	IY,(IX+-15)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+16)
	LD	IY,(IX+-12)
	CP	A,(IY+14)
	JR	Z,L_71
	LD	BC,(IX+-12)
	LD	(IX+-27),BC
	LD	IY,(IX+-15)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+17)
	LD	IY,(IX+-12)
	CP	A,(IY+14)
	JR	NZ,L_72
L_71:
;  212				sprintf(str, "Choose a move to replace with %s", data_moves[index - 19].name);
.LINE 212

	LD	IY,(IX+-27)
	PEA	IY+0
	LD	BC,L__38
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  213				text_Display(str, false);
.LINE 213

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  214				switch (text_AskQuestion4(data_moves[currentSave.party[i].moves[0]].name, data_moves[currentSave.party[i].moves[1]].name, data_moves[currentSave.party[i].moves[2]].name, data_moves[currentSave.party[i].moves[3]].name, false))
.LINE 214

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-3)
	ADD	HL,BC
	LD	(IX+-80),HL
	LD	IY,(IX+-80)
	LEA	BC,IY+1
	LD	(IX+-77),BC
	LD	BC,0
	PUSH	BC
	LD	IY,(IX+-77)
	LEA	HL,IY+3
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	BC,_data_moves
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	IY,(IX+-77)
	LEA	HL,IY+2
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	HL,(IX+-77)
	INC	HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	HL,(IX+-77)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	CALL	_text_AskQuestion4
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	CALL	__seqcaseD
	JP	(HL)
L__39:
	DW	4
	DW	1
	DB	0
	DW24	L_67	

	DW24	L_68	

	DW24	L_69	

	DW24	L_70	

	DW24	L_75	

;  215				{
;  216				case 1:
L_67:
.LINE 216

;  217					currentSave.party[i].moves[0] = index - 19;
.LINE 217

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,HL
	LD	DE,BC
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	(IX+-83),HL
	LD	IY,(IX+-83)
	LD	A,(IX+6)
	SUB	A,19
	LD	(IY+1),A
;  218					currentSave.party[i].pp[0] = data_moves[currentSave.party[i].moves[0]].uses;
.LINE 218

	LD	A,(IY+1)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	DE,_data_moves
	ADD	HL,DE
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	A,(IY+18)
	LD	IY,HL
	LD	(IY+5),A
;  219					break;
.LINE 219

	JR	L_75
;  220				case 2:
L_68:
.LINE 220

;  221					currentSave.party[i].moves[1] = index - 19;
.LINE 221

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,HL
	LD	DE,BC
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	(IX+-86),HL
	LD	IY,(IX+-86)
	LEA	HL,IY+1
	INC	HL
	LD	A,(IX+6)
	SUB	A,19
	LD	(HL),A
;  222					currentSave.party[i].pp[1] = data_moves[currentSave.party[i].moves[1]].uses;
.LINE 222

	LEA	HL,IY+1
	INC	HL
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	DE,_data_moves
	ADD	HL,DE
	LD	DE,HL
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+5
	INC	HL
	LD	IY,DE
	LD	A,(IY+18)
	LD	(HL),A
;  223					break;
.LINE 223

	JR	L_75
;  224				case 3:
L_69:
.LINE 224

;  225					currentSave.party[i].moves[2] = index - 19;
.LINE 225

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,HL
	LD	DE,BC
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	(IX+-89),HL
	LD	IY,(IX+-89)
	LEA	HL,IY+3
	LD	A,(IX+6)
	SUB	A,19
	LD	(HL),A
;  226					currentSave.party[i].pp[2] = data_moves[currentSave.party[i].moves[2]].uses;
.LINE 226

	LEA	HL,IY+3
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	DE,_data_moves
	ADD	HL,DE
	LD	DE,HL
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+7
	LD	IY,DE
	LD	A,(IY+18)
	LD	(HL),A
;  227					break;
.LINE 227

	JR	L_75
;  228				case 4:
L_70:
.LINE 228

;  229					currentSave.party[i].moves[3] = index - 19;
.LINE 229

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,HL
	LD	DE,BC
	LD	HL,(IX+-3)
	ADD	HL,DE
	LD	(IX+-92),HL
	LD	IY,(IX+-92)
	LEA	HL,IY+4
	LD	A,(IX+6)
	SUB	A,19
	LD	(HL),A
;  230					currentSave.party[i].pp[3] = data_moves[currentSave.party[i].moves[3]].uses;
.LINE 230

	LEA	HL,IY+4
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	LD	A,21
	CALL	__imul_b
	LD	DE,_data_moves
	ADD	HL,DE
	LD	DE,HL
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+8
	LD	IY,DE
	LD	A,(IY+18)
	LD	(HL),A
;  231					break;
.LINE 231

	JR	L_75
;  232				}
;  233			}
;  234			else {
L_72:
.LINE 234

;  235				sprintf(str, "%s cannot learn %s", data_pokemon[currentSave.party[i].id].name, data_moves[index - 19].name);
.LINE 235

	LD	IY,(IX+-12)
	PEA	IY+0
	LD	IY,(IX+-15)
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	LD	BC,L__40
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  236				text_Display(str, false);
.LINE 236

	LD	BC,0
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  237				return false;
.LINE 237

	XOR	A,A
	JR	L_76
;  238			}
;  239		}
L_75:
.LINE 239

;  240	
;  241	
;  242		items_IndexToName(&itemName, index);
.LINE 242

	LD	C,(IX+6)
	LD	B,0
	PUSH	BC
	PEA	IX+-47
	CALL	_items_IndexToName
	POP	BC
	POP	BC
;  243		sprintf(str, "Used a %s on %s", itemName, data_pokemon[currentSave.party[i].id].name);
.LINE 243

	LD	BC,(_i)
	CALL	__stoiu
	LD	A,34
	CALL	__imul_b
	LD	BC,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LD	A,(IY+0)
	UEXT	HL
	LD	L,A
	LD	A,51
	CALL	__imul_b
	LD	BC,_data_pokemon
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+0
	PEA	IX+-47
	LD	BC,L__41
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  244		text_Display(str, true);
.LINE 244

	LD	BC,1
	PUSH	BC
	LD	BC,_str
	PUSH	BC
	CALL	_text_Display
	POP	BC
	POP	BC
;  245		return true;
.LINE 245

	LD	A,1
;  246	}
L_76:
.LINE 246

	LD	SP,IX
	POP	IX
	RET	


;**************************** _items_UseItem ***************************
;Name                         Addr/Register   Size   Type
;_items_IndexToName                  IMPORT  -----   function
;_text_AskQuestion4                  IMPORT  -----   function
;_data_moves                         IMPORT  unknown variable
;_text_Display                       IMPORT  -----   function
;_str                                IMPORT    100   variable
;_data_pokemon                       IMPORT  unknown variable
;_sprintf                            IMPORT  -----   function
;_HealStatus                         IMPORT  -----   function
;_healAmounts                        STATIC      8   variable
;_HealHp                             IMPORT  -----   function
;_i                                  IMPORT      2   variable
;_menu_PokemonMenu                   IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;itemName                             IX-47     20   variable
;G_17                                 IX-27      3   variable
;G_0                                  IX-24      3   variable
;G_2                                  IX-21      3   variable
;G_9                                  IX-18      3   variable
;G_14                                 IX-15      3   variable
;G_16                                 IX-12      3   variable
;G_8                                   IX-9      3   variable
;G_26                                  IX-6      3   variable
;G_5                                   IX-3      3   variable
;index                                 IX+6      1   parameter


; Stack Frame Size: 101 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "items_UseItem",246,"_items_UseItem"
	SEGMENT STRSECT
L__32:
	DB	"%s has evolved"
	DB	0
L__38:
	DB	"Choose a move to replace with %s"
	DB	0
L__40:
	DB	"%s cannot learn %s"
	DB	0
L__41:
	DB	"Used a %s on %s"
	DB	0
	SEGMENT CODE
;  247	
;  248	void HealHp(uint8_t index, uint16_t amount) {
_HealHp:
.DEFINE "_HealHp"

.VALUE _HealHp

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HealHp",248,"_HealHp"

.LINE 248

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "amount"

.CLASS 65

.VALUE 9

.TYPE 13

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-33
	LD	SP,HL
;  249		currentSave.party[index].currenthealth += amount;
.LINE 249

	LD	BC,_currentSave+10
	LD	(IX+-9),BC
	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	A,34
	CALL	__imul_b
	LD	(IX+-6),HL
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	BC,(IX+9)
	LD	IY,(IX+-3)
	LD	HL,(IY+13)
	ADD.SIS	HL,BC
	LD	BC,HL
	LD	(IY+13),C
	LD	(IY+14),B
;  250		if (currentSave.party[index].currenthealth > stats_CalculateStats(currentSave.party[index]).health) {
.LINE 250

	LD	BC,_currentSave+10
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-21
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,(IX+-3)
	LD	BC,(IY+13)
	LD	HL,(HL)
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_78
;  251			currentSave.party[index].currenthealth = stats_CalculateStats(currentSave.party[index]).health;
.LINE 251

	LD	BC,(IX+-6)
	LD	HL,(IX+-9)
	ADD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-36
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,34
	LDIR	
	PEA	IX+-33
	CALL	_stats_CalculateStats
	LD	IY,39
	ADD	IY,SP
	LD	SP,IY
	LD	IY,HL
	LD	BC,(IX+-6)
	LD	HL,(IX+-9)
	ADD	HL,BC
	LD	BC,(IY)
	LD	IY,HL
	LD	(IY+13),C
	LD	(IY+14),B
;  252		}
;  253	}
L_78:
.LINE 253

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HealHp ***************************
;Name                         Addr/Register   Size   Type
;_stats_CalculateStats               IMPORT  -----   function
;_currentSave                        IMPORT   4140   variable
;G_27                                  IX-9      3   variable
;G_28                                  IX-6      3   variable
;amount                                IX+9      2   parameter
;index                                 IX+6      1   parameter


; Stack Frame Size: 45 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HealHp",253,"_HealHp"
;  254	void HealStatus(uint8_t index, uint8_t type) {
_HealStatus:
.DEFINE "_HealStatus"

.VALUE _HealStatus

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HealStatus",254,"_HealStatus"

.LINE 254

.DEFINE "index"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "type"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  255		currentSave.party[index].currentstatus = 0;
.LINE 255

	LD	A,(IX+6)
	UEXT	HL
	LD	L,A
	LD	A,34
	CALL	__imul_b
	LD	BC,_currentSave+10
	ADD	HL,BC
	LD	IY,HL
	LD	(IY+15),0
;  256	}
.LINE 256

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HealStatus ***************************
;Name                         Addr/Register   Size   Type
;_currentSave                        IMPORT   4140   variable
;type                                  IX+9      1   parameter
;index                                 IX+6      1   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HealStatus",256,"_HealStatus"
	XREF _menu_PokemonMenu:ROM
	XREF _map_DrawInformationBar:ROM
	XREF _stats_CalculateStats:ROM
	XREF _colors:ROM
	XREF _i:ROM
	XREF _str:ROM
	XREF _Wait:ROM
	XREF _data_moves:ROM
	XREF _data_pokemon:ROM
	XREF _currentSave:ROM
	XREF _text_AskQuestion4:ROM
	XREF _text_Display:ROM
	XREF _kb_Scan:ROM
	XREF _sprintf:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_Rectangle:ROM
	XREF _gfx_SetColor:ROM
	XREF __lcmpu:ROM
	XREF __lsub:ROM
	XREF __stoiu:ROM
	XREF __scmpzero:ROM
	XREF __seqcaseD:ROM
	XREF __imul_b:ROM
	XDEF _HealStatus
	XDEF _HealHp
	XDEF _items_UseItem
	XDEF _items_ItemShop
	XDEF _items_IndexToName
	XDEF _itemCount
	XDEF _itemPrices
	XDEF _itemDescriptions
	XDEF _itemNames
	XDEF _healAmounts
	END
